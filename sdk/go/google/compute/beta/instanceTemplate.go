// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an instance template in the specified project using the data that is included in the request. If you are creating a new template to update an existing instance group, your new instance template must use the same network or, if applicable, the same subnetwork as the original template.
type InstanceTemplate struct {
	pulumi.CustomResourceState
}

// NewInstanceTemplate registers a new resource with the given unique name, arguments, and options.
func NewInstanceTemplate(ctx *pulumi.Context,
	name string, args *InstanceTemplateArgs, opts ...pulumi.ResourceOption) (*InstanceTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource InstanceTemplate
	err := ctx.RegisterResource("google-cloud:compute/beta:InstanceTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceTemplate gets an existing InstanceTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceTemplateState, opts ...pulumi.ResourceOption) (*InstanceTemplate, error) {
	var resource InstanceTemplate
	err := ctx.ReadResource("google-cloud:compute/beta:InstanceTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceTemplate resources.
type instanceTemplateState struct {
}

type InstanceTemplateState struct {
}

func (InstanceTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTemplateState)(nil)).Elem()
}

type instanceTemplateArgs struct {
	// [Output Only] The creation timestamp for this instance template in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// [Output Only] A unique identifier for this instance template. The server defines this identifier.
	Id *string `pulumi:"id"`
	// [Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
	Kind *string `pulumi:"kind"`
	// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Project ID for this request.
	Project string `pulumi:"project"`
	// The instance properties for this instance template.
	Properties *InstanceProperties `pulumi:"properties"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
	//
	// For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
	//
	// The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// [Output Only] The URL for this instance template. The server defines this URL.
	SelfLink *string `pulumi:"selfLink"`
	// The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values:
	// - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
	// - projects/project/zones/zone/instances/instance
	SourceInstance *string `pulumi:"sourceInstance"`
	// The source instance params to use to create this instance template.
	SourceInstanceParams *SourceInstanceParams `pulumi:"sourceInstanceParams"`
}

// The set of arguments for constructing a InstanceTemplate resource.
type InstanceTemplateArgs struct {
	// [Output Only] The creation timestamp for this instance template in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// [Output Only] A unique identifier for this instance template. The server defines this identifier.
	Id pulumi.StringPtrInput
	// [Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
	Kind pulumi.StringPtrInput
	// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Project ID for this request.
	Project pulumi.StringInput
	// The instance properties for this instance template.
	Properties InstancePropertiesPtrInput
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
	//
	// For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
	//
	// The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// [Output Only] The URL for this instance template. The server defines this URL.
	SelfLink pulumi.StringPtrInput
	// The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values:
	// - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance
	// - projects/project/zones/zone/instances/instance
	SourceInstance pulumi.StringPtrInput
	// The source instance params to use to create this instance template.
	SourceInstanceParams SourceInstanceParamsPtrInput
}

func (InstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTemplateArgs)(nil)).Elem()
}

type InstanceTemplateInput interface {
	pulumi.Input

	ToInstanceTemplateOutput() InstanceTemplateOutput
	ToInstanceTemplateOutputWithContext(ctx context.Context) InstanceTemplateOutput
}

func (*InstanceTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplate)(nil))
}

func (i *InstanceTemplate) ToInstanceTemplateOutput() InstanceTemplateOutput {
	return i.ToInstanceTemplateOutputWithContext(context.Background())
}

func (i *InstanceTemplate) ToInstanceTemplateOutputWithContext(ctx context.Context) InstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTemplateOutput)
}

type InstanceTemplateOutput struct {
	*pulumi.OutputState
}

func (InstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplate)(nil))
}

func (o InstanceTemplateOutput) ToInstanceTemplateOutput() InstanceTemplateOutput {
	return o
}

func (o InstanceTemplateOutput) ToInstanceTemplateOutputWithContext(ctx context.Context) InstanceTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InstanceTemplateOutput{})
}
