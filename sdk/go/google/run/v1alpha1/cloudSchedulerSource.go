// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new cloudschedulersource.
type CloudSchedulerSource struct {
	pulumi.CustomResourceState
}

// NewCloudSchedulerSource registers a new resource with the given unique name, arguments, and options.
func NewCloudSchedulerSource(ctx *pulumi.Context,
	name string, args *CloudSchedulerSourceArgs, opts ...pulumi.ResourceOption) (*CloudSchedulerSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource CloudSchedulerSource
	err := ctx.RegisterResource("google-cloud:run/v1alpha1:CloudSchedulerSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudSchedulerSource gets an existing CloudSchedulerSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudSchedulerSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudSchedulerSourceState, opts ...pulumi.ResourceOption) (*CloudSchedulerSource, error) {
	var resource CloudSchedulerSource
	err := ctx.ReadResource("google-cloud:run/v1alpha1:CloudSchedulerSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudSchedulerSource resources.
type cloudSchedulerSourceState struct {
}

type CloudSchedulerSourceState struct {
}

func (CloudSchedulerSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudSchedulerSourceState)(nil)).Elem()
}

type cloudSchedulerSourceArgs struct {
	// The API version for this call such as "events.cloud.google.com/v1alpha1".
	ApiVersion *string `pulumi:"apiVersion"`
	// The kind of resource, in this case "CloudSchedulerSource".
	Kind *string `pulumi:"kind"`
	// Metadata associated with this CloudSchedulerSource.
	Metadata *ObjectMeta `pulumi:"metadata"`
	// Required. The project ID or project number in which this cloudschedulersource should be created.
	Parent string `pulumi:"parent"`
	// Spec defines the desired state of the CloudSchedulerSource.
	Spec *CloudSchedulerSourceSpec `pulumi:"spec"`
	// Status represents the current state of the CloudSchedulerSource. This data may be out of date.
	Status *CloudSchedulerSourceStatus `pulumi:"status"`
}

// The set of arguments for constructing a CloudSchedulerSource resource.
type CloudSchedulerSourceArgs struct {
	// The API version for this call such as "events.cloud.google.com/v1alpha1".
	ApiVersion pulumi.StringPtrInput
	// The kind of resource, in this case "CloudSchedulerSource".
	Kind pulumi.StringPtrInput
	// Metadata associated with this CloudSchedulerSource.
	Metadata ObjectMetaPtrInput
	// Required. The project ID or project number in which this cloudschedulersource should be created.
	Parent pulumi.StringInput
	// Spec defines the desired state of the CloudSchedulerSource.
	Spec CloudSchedulerSourceSpecPtrInput
	// Status represents the current state of the CloudSchedulerSource. This data may be out of date.
	Status CloudSchedulerSourceStatusPtrInput
}

func (CloudSchedulerSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudSchedulerSourceArgs)(nil)).Elem()
}

type CloudSchedulerSourceInput interface {
	pulumi.Input

	ToCloudSchedulerSourceOutput() CloudSchedulerSourceOutput
	ToCloudSchedulerSourceOutputWithContext(ctx context.Context) CloudSchedulerSourceOutput
}

func (*CloudSchedulerSource) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSchedulerSource)(nil))
}

func (i *CloudSchedulerSource) ToCloudSchedulerSourceOutput() CloudSchedulerSourceOutput {
	return i.ToCloudSchedulerSourceOutputWithContext(context.Background())
}

func (i *CloudSchedulerSource) ToCloudSchedulerSourceOutputWithContext(ctx context.Context) CloudSchedulerSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSchedulerSourceOutput)
}

type CloudSchedulerSourceOutput struct {
	*pulumi.OutputState
}

func (CloudSchedulerSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSchedulerSource)(nil))
}

func (o CloudSchedulerSourceOutput) ToCloudSchedulerSourceOutput() CloudSchedulerSourceOutput {
	return o
}

func (o CloudSchedulerSourceOutput) ToCloudSchedulerSourceOutputWithContext(ctx context.Context) CloudSchedulerSourceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudSchedulerSourceOutput{})
}
