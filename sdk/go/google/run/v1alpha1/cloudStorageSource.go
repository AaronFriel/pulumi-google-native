// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new cloudstoragesource.
type CloudStorageSource struct {
	pulumi.CustomResourceState
}

// NewCloudStorageSource registers a new resource with the given unique name, arguments, and options.
func NewCloudStorageSource(ctx *pulumi.Context,
	name string, args *CloudStorageSourceArgs, opts ...pulumi.ResourceOption) (*CloudStorageSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource CloudStorageSource
	err := ctx.RegisterResource("google-cloud:run/v1alpha1:CloudStorageSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudStorageSource gets an existing CloudStorageSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudStorageSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudStorageSourceState, opts ...pulumi.ResourceOption) (*CloudStorageSource, error) {
	var resource CloudStorageSource
	err := ctx.ReadResource("google-cloud:run/v1alpha1:CloudStorageSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudStorageSource resources.
type cloudStorageSourceState struct {
}

type CloudStorageSourceState struct {
}

func (CloudStorageSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudStorageSourceState)(nil)).Elem()
}

type cloudStorageSourceArgs struct {
	// The API version for this call such as "events.cloud.google.com/v1alpha1".
	ApiVersion *string `pulumi:"apiVersion"`
	// The kind of resource, in this case "CloudStorageSource".
	Kind *string `pulumi:"kind"`
	// Metadata associated with this CloudStorageSource.
	Metadata *ObjectMeta `pulumi:"metadata"`
	// Required. The project ID or project number in which this cloudstoragesource should be created.
	Parent string `pulumi:"parent"`
	// Spec defines the desired state of the CloudStorageSource.
	Spec *CloudStorageSourceSpec `pulumi:"spec"`
	// Status represents the current state of the CloudStorageSource. This data may be out of date.
	Status *CloudStorageSourceStatus `pulumi:"status"`
}

// The set of arguments for constructing a CloudStorageSource resource.
type CloudStorageSourceArgs struct {
	// The API version for this call such as "events.cloud.google.com/v1alpha1".
	ApiVersion pulumi.StringPtrInput
	// The kind of resource, in this case "CloudStorageSource".
	Kind pulumi.StringPtrInput
	// Metadata associated with this CloudStorageSource.
	Metadata ObjectMetaPtrInput
	// Required. The project ID or project number in which this cloudstoragesource should be created.
	Parent pulumi.StringInput
	// Spec defines the desired state of the CloudStorageSource.
	Spec CloudStorageSourceSpecPtrInput
	// Status represents the current state of the CloudStorageSource. This data may be out of date.
	Status CloudStorageSourceStatusPtrInput
}

func (CloudStorageSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudStorageSourceArgs)(nil)).Elem()
}

type CloudStorageSourceInput interface {
	pulumi.Input

	ToCloudStorageSourceOutput() CloudStorageSourceOutput
	ToCloudStorageSourceOutputWithContext(ctx context.Context) CloudStorageSourceOutput
}

func (*CloudStorageSource) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudStorageSource)(nil))
}

func (i *CloudStorageSource) ToCloudStorageSourceOutput() CloudStorageSourceOutput {
	return i.ToCloudStorageSourceOutputWithContext(context.Background())
}

func (i *CloudStorageSource) ToCloudStorageSourceOutputWithContext(ctx context.Context) CloudStorageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudStorageSourceOutput)
}

type CloudStorageSourceOutput struct {
	*pulumi.OutputState
}

func (CloudStorageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudStorageSource)(nil))
}

func (o CloudStorageSourceOutput) ToCloudStorageSourceOutput() CloudStorageSourceOutput {
	return o
}

func (o CloudStorageSourceOutput) ToCloudStorageSourceOutputWithContext(ctx context.Context) CloudStorageSourceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudStorageSourceOutput{})
}
