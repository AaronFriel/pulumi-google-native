// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Error describes why the execution was abnormally terminated.
type Error struct {
	// Human readable error context, helpful for debugging purposes.
	Context *string `pulumi:"context"`
	// Error payload returned by the execution, represented as a JSON string.
	Payload *string `pulumi:"payload"`
}

// ErrorInput is an input type that accepts ErrorArgs and ErrorOutput values.
// You can construct a concrete instance of `ErrorInput` via:
//
//          ErrorArgs{...}
type ErrorInput interface {
	pulumi.Input

	ToErrorOutput() ErrorOutput
	ToErrorOutputWithContext(context.Context) ErrorOutput
}

// Error describes why the execution was abnormally terminated.
type ErrorArgs struct {
	// Human readable error context, helpful for debugging purposes.
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Error payload returned by the execution, represented as a JSON string.
	Payload pulumi.StringPtrInput `pulumi:"payload"`
}

func (ErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (i ErrorArgs) ToErrorOutput() ErrorOutput {
	return i.ToErrorOutputWithContext(context.Background())
}

func (i ErrorArgs) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorOutput)
}

func (i ErrorArgs) ToErrorPtrOutput() ErrorPtrOutput {
	return i.ToErrorPtrOutputWithContext(context.Background())
}

func (i ErrorArgs) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorOutput).ToErrorPtrOutputWithContext(ctx)
}

// ErrorPtrInput is an input type that accepts ErrorArgs, ErrorPtr and ErrorPtrOutput values.
// You can construct a concrete instance of `ErrorPtrInput` via:
//
//          ErrorArgs{...}
//
//  or:
//
//          nil
type ErrorPtrInput interface {
	pulumi.Input

	ToErrorPtrOutput() ErrorPtrOutput
	ToErrorPtrOutputWithContext(context.Context) ErrorPtrOutput
}

type errorPtrType ErrorArgs

func ErrorPtr(v *ErrorArgs) ErrorPtrInput {
	return (*errorPtrType)(v)
}

func (*errorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Error)(nil)).Elem()
}

func (i *errorPtrType) ToErrorPtrOutput() ErrorPtrOutput {
	return i.ToErrorPtrOutputWithContext(context.Background())
}

func (i *errorPtrType) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorPtrOutput)
}

// Error describes why the execution was abnormally terminated.
type ErrorOutput struct{ *pulumi.OutputState }

func (ErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (o ErrorOutput) ToErrorOutput() ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorPtrOutput() ErrorPtrOutput {
	return o.ToErrorPtrOutputWithContext(context.Background())
}

func (o ErrorOutput) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return o.ApplyT(func(v Error) *Error {
		return &v
	}).(ErrorPtrOutput)
}

// Human readable error context, helpful for debugging purposes.
func (o ErrorOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Error payload returned by the execution, represented as a JSON string.
func (o ErrorOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Payload }).(pulumi.StringPtrOutput)
}

type ErrorPtrOutput struct{ *pulumi.OutputState }

func (ErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Error)(nil)).Elem()
}

func (o ErrorPtrOutput) ToErrorPtrOutput() ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) Elem() ErrorOutput {
	return o.ApplyT(func(v *Error) Error { return *v }).(ErrorOutput)
}

// Human readable error context, helpful for debugging purposes.
func (o ErrorPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Error) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Error payload returned by the execution, represented as a JSON string.
func (o ErrorPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Error) *string {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ErrorOutput{})
	pulumi.RegisterOutputType(ErrorPtrOutput{})
}
