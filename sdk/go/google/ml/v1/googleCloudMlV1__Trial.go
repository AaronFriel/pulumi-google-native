// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Adds a user provided trial to a study.
type GoogleCloudMlV1__Trial struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudMlV1__Trial registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudMlV1__Trial(ctx *pulumi.Context,
	name string, args *GoogleCloudMlV1__TrialArgs, opts ...pulumi.ResourceOption) (*GoogleCloudMlV1__Trial, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudMlV1__Trial
	err := ctx.RegisterResource("google-cloud:ml/v1:GoogleCloudMlV1__Trial", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudMlV1__Trial gets an existing GoogleCloudMlV1__Trial resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudMlV1__Trial(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudMlV1__TrialState, opts ...pulumi.ResourceOption) (*GoogleCloudMlV1__Trial, error) {
	var resource GoogleCloudMlV1__Trial
	err := ctx.ReadResource("google-cloud:ml/v1:GoogleCloudMlV1__Trial", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudMlV1__Trial resources.
type googleCloudMlV1__TrialState struct {
}

type GoogleCloudMlV1__TrialState struct {
}

func (GoogleCloudMlV1__TrialState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudMlV1__TrialState)(nil)).Elem()
}

type googleCloudMlV1__TrialArgs struct {
	// Output only. The identifier of the client that originally requested this trial.
	ClientId *string `pulumi:"clientId"`
	// Output only. Time at which the trial's status changed to COMPLETED.
	EndTime *string `pulumi:"endTime"`
	// The final measurement containing the objective value.
	FinalMeasurement *GoogleCloudMlV1__Measurement `pulumi:"finalMeasurement"`
	// Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
	InfeasibleReason *string `pulumi:"infeasibleReason"`
	// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
	Measurements []GoogleCloudMlV1__Measurement `pulumi:"measurements"`
	// Output only. Name of the trial assigned by the service.
	Name *string `pulumi:"name"`
	// The parameters of the trial.
	Parameters []GoogleCloudMlV1_Trial_Parameter `pulumi:"parameters"`
	// Required. The name of the study that the trial belongs to.
	Parent string `pulumi:"parent"`
	// Output only. Time at which the trial was started.
	StartTime *string `pulumi:"startTime"`
	// The detailed state of a trial.
	State *string `pulumi:"state"`
	// Output only. If true, the parameters in this trial are not attempted again.
	TrialInfeasible *bool `pulumi:"trialInfeasible"`
}

// The set of arguments for constructing a GoogleCloudMlV1__Trial resource.
type GoogleCloudMlV1__TrialArgs struct {
	// Output only. The identifier of the client that originally requested this trial.
	ClientId pulumi.StringPtrInput
	// Output only. Time at which the trial's status changed to COMPLETED.
	EndTime pulumi.StringPtrInput
	// The final measurement containing the objective value.
	FinalMeasurement GoogleCloudMlV1__MeasurementPtrInput
	// Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
	InfeasibleReason pulumi.StringPtrInput
	// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
	Measurements GoogleCloudMlV1__MeasurementArrayInput
	// Output only. Name of the trial assigned by the service.
	Name pulumi.StringPtrInput
	// The parameters of the trial.
	Parameters GoogleCloudMlV1_Trial_ParameterArrayInput
	// Required. The name of the study that the trial belongs to.
	Parent pulumi.StringInput
	// Output only. Time at which the trial was started.
	StartTime pulumi.StringPtrInput
	// The detailed state of a trial.
	State pulumi.StringPtrInput
	// Output only. If true, the parameters in this trial are not attempted again.
	TrialInfeasible pulumi.BoolPtrInput
}

func (GoogleCloudMlV1__TrialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudMlV1__TrialArgs)(nil)).Elem()
}

type GoogleCloudMlV1__TrialInput interface {
	pulumi.Input

	ToGoogleCloudMlV1__TrialOutput() GoogleCloudMlV1__TrialOutput
	ToGoogleCloudMlV1__TrialOutputWithContext(ctx context.Context) GoogleCloudMlV1__TrialOutput
}

func (*GoogleCloudMlV1__Trial) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudMlV1__Trial)(nil))
}

func (i *GoogleCloudMlV1__Trial) ToGoogleCloudMlV1__TrialOutput() GoogleCloudMlV1__TrialOutput {
	return i.ToGoogleCloudMlV1__TrialOutputWithContext(context.Background())
}

func (i *GoogleCloudMlV1__Trial) ToGoogleCloudMlV1__TrialOutputWithContext(ctx context.Context) GoogleCloudMlV1__TrialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudMlV1__TrialOutput)
}

type GoogleCloudMlV1__TrialOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudMlV1__TrialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudMlV1__Trial)(nil))
}

func (o GoogleCloudMlV1__TrialOutput) ToGoogleCloudMlV1__TrialOutput() GoogleCloudMlV1__TrialOutput {
	return o
}

func (o GoogleCloudMlV1__TrialOutput) ToGoogleCloudMlV1__TrialOutputWithContext(ctx context.Context) GoogleCloudMlV1__TrialOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudMlV1__TrialOutput{})
}
