// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
type GoogleIamV1__Policy struct {
	pulumi.CustomResourceState
}

// NewGoogleIamV1__Policy registers a new resource with the given unique name, arguments, and options.
func NewGoogleIamV1__Policy(ctx *pulumi.Context,
	name string, args *GoogleIamV1__PolicyArgs, opts ...pulumi.ResourceOption) (*GoogleIamV1__Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	var resource GoogleIamV1__Policy
	err := ctx.RegisterResource("google-cloud:ml/v1:GoogleIamV1__Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleIamV1__Policy gets an existing GoogleIamV1__Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleIamV1__Policy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleIamV1__PolicyState, opts ...pulumi.ResourceOption) (*GoogleIamV1__Policy, error) {
	var resource GoogleIamV1__Policy
	err := ctx.ReadResource("google-cloud:ml/v1:GoogleIamV1__Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleIamV1__Policy resources.
type googleIamV1__PolicyState struct {
}

type GoogleIamV1__PolicyState struct {
}

func (GoogleIamV1__PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleIamV1__PolicyState)(nil)).Elem()
}

type googleIamV1__PolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy *GoogleIamV1__PolicyType `pulumi:"policy"`
	// REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
	Resource string `pulumi:"resource"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a GoogleIamV1__Policy resource.
type GoogleIamV1__PolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy GoogleIamV1__PolicyTypePtrInput
	// REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
	Resource pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (GoogleIamV1__PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleIamV1__PolicyArgs)(nil)).Elem()
}

type GoogleIamV1__PolicyInput interface {
	pulumi.Input

	ToGoogleIamV1__PolicyOutput() GoogleIamV1__PolicyOutput
	ToGoogleIamV1__PolicyOutputWithContext(ctx context.Context) GoogleIamV1__PolicyOutput
}

func (*GoogleIamV1__Policy) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1__Policy)(nil))
}

func (i *GoogleIamV1__Policy) ToGoogleIamV1__PolicyOutput() GoogleIamV1__PolicyOutput {
	return i.ToGoogleIamV1__PolicyOutputWithContext(context.Background())
}

func (i *GoogleIamV1__Policy) ToGoogleIamV1__PolicyOutputWithContext(ctx context.Context) GoogleIamV1__PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1__PolicyOutput)
}

type GoogleIamV1__PolicyOutput struct {
	*pulumi.OutputState
}

func (GoogleIamV1__PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1__Policy)(nil))
}

func (o GoogleIamV1__PolicyOutput) ToGoogleIamV1__PolicyOutput() GoogleIamV1__PolicyOutput {
	return o
}

func (o GoogleIamV1__PolicyOutput) ToGoogleIamV1__PolicyOutputWithContext(ctx context.Context) GoogleIamV1__PolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleIamV1__PolicyOutput{})
}
