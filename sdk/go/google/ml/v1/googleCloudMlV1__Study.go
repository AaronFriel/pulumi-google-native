// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a study.
type GoogleCloudMlV1__Study struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudMlV1__Study registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudMlV1__Study(ctx *pulumi.Context,
	name string, args *GoogleCloudMlV1__StudyArgs, opts ...pulumi.ResourceOption) (*GoogleCloudMlV1__Study, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudMlV1__Study
	err := ctx.RegisterResource("google-cloud:ml/v1:GoogleCloudMlV1__Study", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudMlV1__Study gets an existing GoogleCloudMlV1__Study resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudMlV1__Study(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudMlV1__StudyState, opts ...pulumi.ResourceOption) (*GoogleCloudMlV1__Study, error) {
	var resource GoogleCloudMlV1__Study
	err := ctx.ReadResource("google-cloud:ml/v1:GoogleCloudMlV1__Study", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudMlV1__Study resources.
type googleCloudMlV1__StudyState struct {
}

type GoogleCloudMlV1__StudyState struct {
}

func (GoogleCloudMlV1__StudyState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudMlV1__StudyState)(nil)).Elem()
}

type googleCloudMlV1__StudyArgs struct {
	// Output only. Time at which the study was created.
	CreateTime *string `pulumi:"createTime"`
	// Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
	InactiveReason *string `pulumi:"inactiveReason"`
	// Output only. The name of a study.
	Name *string `pulumi:"name"`
	// Required. The project and location that the study belongs to. Format: projects/{project}/locations/{location}
	Parent string `pulumi:"parent"`
	// Output only. The detailed state of a study.
	State *string `pulumi:"state"`
	// Required. Configuration of the study.
	StudyConfig *GoogleCloudMlV1__StudyConfig `pulumi:"studyConfig"`
	// Required. The ID to use for the study, which will become the final component of the study's resource name.
	StudyId *string `pulumi:"studyId"`
}

// The set of arguments for constructing a GoogleCloudMlV1__Study resource.
type GoogleCloudMlV1__StudyArgs struct {
	// Output only. Time at which the study was created.
	CreateTime pulumi.StringPtrInput
	// Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
	InactiveReason pulumi.StringPtrInput
	// Output only. The name of a study.
	Name pulumi.StringPtrInput
	// Required. The project and location that the study belongs to. Format: projects/{project}/locations/{location}
	Parent pulumi.StringInput
	// Output only. The detailed state of a study.
	State pulumi.StringPtrInput
	// Required. Configuration of the study.
	StudyConfig GoogleCloudMlV1__StudyConfigPtrInput
	// Required. The ID to use for the study, which will become the final component of the study's resource name.
	StudyId pulumi.StringPtrInput
}

func (GoogleCloudMlV1__StudyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudMlV1__StudyArgs)(nil)).Elem()
}

type GoogleCloudMlV1__StudyInput interface {
	pulumi.Input

	ToGoogleCloudMlV1__StudyOutput() GoogleCloudMlV1__StudyOutput
	ToGoogleCloudMlV1__StudyOutputWithContext(ctx context.Context) GoogleCloudMlV1__StudyOutput
}

func (*GoogleCloudMlV1__Study) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudMlV1__Study)(nil))
}

func (i *GoogleCloudMlV1__Study) ToGoogleCloudMlV1__StudyOutput() GoogleCloudMlV1__StudyOutput {
	return i.ToGoogleCloudMlV1__StudyOutputWithContext(context.Background())
}

func (i *GoogleCloudMlV1__Study) ToGoogleCloudMlV1__StudyOutputWithContext(ctx context.Context) GoogleCloudMlV1__StudyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudMlV1__StudyOutput)
}

type GoogleCloudMlV1__StudyOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudMlV1__StudyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudMlV1__Study)(nil))
}

func (o GoogleCloudMlV1__StudyOutput) ToGoogleCloudMlV1__StudyOutput() GoogleCloudMlV1__StudyOutput {
	return o
}

func (o GoogleCloudMlV1__StudyOutput) ToGoogleCloudMlV1__StudyOutputWithContext(ctx context.Context) GoogleCloudMlV1__StudyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudMlV1__StudyOutput{})
}
