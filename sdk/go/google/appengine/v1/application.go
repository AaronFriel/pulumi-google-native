// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an App Engine application for a Google Cloud Platform project. Required fields: id - The ID of the target Cloud Platform project. location - The region (https://cloud.google.com/appengine/docs/locations) where you want the App Engine application located.For more information about App Engine applications, see Managing Projects, Applications, and Billing (https://cloud.google.com/appengine/docs/standard/python/console/).
type Application struct {
	pulumi.CustomResourceState
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		args = &ApplicationArgs{}
	}

	var resource Application
	err := ctx.RegisterResource("google-cloud:appengine/v1:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("google-cloud:appengine/v1:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
	AuthDomain *string `pulumi:"authDomain"`
	// Google Cloud Storage bucket that can be used for storing files associated with this application. This bucket is associated with the application and can be used by the gcloud deployment commands.@OutputOnly
	CodeBucket *string `pulumi:"codeBucket"`
	// The type of the Cloud Firestore or Cloud Datastore database associated with this application.
	DatabaseType *string `pulumi:"databaseType"`
	// Google Cloud Storage bucket that can be used by this application to store content.@OutputOnly
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Cookie expiration policy for this application.
	DefaultCookieExpiration *string `pulumi:"defaultCookieExpiration"`
	// Hostname used to reach this application, as resolved by App Engine.@OutputOnly
	DefaultHostname *string `pulumi:"defaultHostname"`
	// HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
	DispatchRules []UrlDispatchRule `pulumi:"dispatchRules"`
	// The feature specific settings to be used in the application.
	FeatureSettings *FeatureSettings `pulumi:"featureSettings"`
	// The Google Container Registry domain used for storing managed build docker images for this application.
	GcrDomain *string             `pulumi:"gcrDomain"`
	Iap       *IdentityAwareProxy `pulumi:"iap"`
	// Identifier of the Application resource. This identifier is equivalent to the project ID of the Google Cloud Platform project where you want to deploy your application. Example: myapp.
	Id *string `pulumi:"id"`
	// Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
	LocationId *string `pulumi:"locationId"`
	// Full path to the Application resource in the API. Example: apps/myapp.@OutputOnly
	Name *string `pulumi:"name"`
	// Serving status of this application.
	ServingStatus *string `pulumi:"servingStatus"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
	AuthDomain pulumi.StringPtrInput
	// Google Cloud Storage bucket that can be used for storing files associated with this application. This bucket is associated with the application and can be used by the gcloud deployment commands.@OutputOnly
	CodeBucket pulumi.StringPtrInput
	// The type of the Cloud Firestore or Cloud Datastore database associated with this application.
	DatabaseType pulumi.StringPtrInput
	// Google Cloud Storage bucket that can be used by this application to store content.@OutputOnly
	DefaultBucket pulumi.StringPtrInput
	// Cookie expiration policy for this application.
	DefaultCookieExpiration pulumi.StringPtrInput
	// Hostname used to reach this application, as resolved by App Engine.@OutputOnly
	DefaultHostname pulumi.StringPtrInput
	// HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
	DispatchRules UrlDispatchRuleArrayInput
	// The feature specific settings to be used in the application.
	FeatureSettings FeatureSettingsPtrInput
	// The Google Container Registry domain used for storing managed build docker images for this application.
	GcrDomain pulumi.StringPtrInput
	Iap       IdentityAwareProxyPtrInput
	// Identifier of the Application resource. This identifier is equivalent to the project ID of the Google Cloud Platform project where you want to deploy your application. Example: myapp.
	Id pulumi.StringPtrInput
	// Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
	LocationId pulumi.StringPtrInput
	// Full path to the Application resource in the API. Example: apps/myapp.@OutputOnly
	Name pulumi.StringPtrInput
	// Serving status of this application.
	ServingStatus pulumi.StringPtrInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil))
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct {
	*pulumi.OutputState
}

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil))
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
}
