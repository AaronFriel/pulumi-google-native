// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new exclusion in a specified parent resource. Only log entries belonging to that resource can be excluded. You can have up to 10 exclusions in a resource.
type LogExclusion struct {
	pulumi.CustomResourceState
}

// NewLogExclusion registers a new resource with the given unique name, arguments, and options.
func NewLogExclusion(ctx *pulumi.Context,
	name string, args *LogExclusionArgs, opts ...pulumi.ResourceOption) (*LogExclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource LogExclusion
	err := ctx.RegisterResource("google-cloud:logging/v2:LogExclusion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogExclusion gets an existing LogExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogExclusionState, opts ...pulumi.ResourceOption) (*LogExclusion, error) {
	var resource LogExclusion
	err := ctx.ReadResource("google-cloud:logging/v2:LogExclusion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogExclusion resources.
type logExclusionState struct {
}

type LogExclusionState struct {
}

func (LogExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*logExclusionState)(nil)).Elem()
}

type logExclusionArgs struct {
	// Output only. The creation timestamp of the exclusion.This field may not be present for older exclusions.
	CreateTime *string `pulumi:"createTime"`
	// Optional. A description of this exclusion.
	Description *string `pulumi:"description"`
	// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
	Disabled *bool `pulumi:"disabled"`
	// Required. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries. For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:"resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)"
	Filter *string `pulumi:"filter"`
	// Required. A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name *string `pulumi:"name"`
	// Required. The parent resource in which to create the exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" Examples: "projects/my-logging-project", "organizations/123456789".
	Parent string `pulumi:"parent"`
	// Output only. The last update timestamp of the exclusion.This field may not be present for older exclusions.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a LogExclusion resource.
type LogExclusionArgs struct {
	// Output only. The creation timestamp of the exclusion.This field may not be present for older exclusions.
	CreateTime pulumi.StringPtrInput
	// Optional. A description of this exclusion.
	Description pulumi.StringPtrInput
	// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
	Disabled pulumi.BoolPtrInput
	// Required. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries. For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:"resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)"
	Filter pulumi.StringPtrInput
	// Required. A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name pulumi.StringPtrInput
	// Required. The parent resource in which to create the exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" Examples: "projects/my-logging-project", "organizations/123456789".
	Parent pulumi.StringInput
	// Output only. The last update timestamp of the exclusion.This field may not be present for older exclusions.
	UpdateTime pulumi.StringPtrInput
}

func (LogExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logExclusionArgs)(nil)).Elem()
}

type LogExclusionInput interface {
	pulumi.Input

	ToLogExclusionOutput() LogExclusionOutput
	ToLogExclusionOutputWithContext(ctx context.Context) LogExclusionOutput
}

func (*LogExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((*LogExclusion)(nil))
}

func (i *LogExclusion) ToLogExclusionOutput() LogExclusionOutput {
	return i.ToLogExclusionOutputWithContext(context.Background())
}

func (i *LogExclusion) ToLogExclusionOutputWithContext(ctx context.Context) LogExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogExclusionOutput)
}

type LogExclusionOutput struct {
	*pulumi.OutputState
}

func (LogExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogExclusion)(nil))
}

func (o LogExclusionOutput) ToLogExclusionOutput() LogExclusionOutput {
	return o
}

func (o LogExclusionOutput) ToLogExclusionOutputWithContext(ctx context.Context) LogExclusionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LogExclusionOutput{})
}
