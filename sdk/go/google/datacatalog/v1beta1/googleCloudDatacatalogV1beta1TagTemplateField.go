// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
type GoogleCloudDatacatalogV1beta1TagTemplateField struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDatacatalogV1beta1TagTemplateField registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDatacatalogV1beta1TagTemplateField(ctx *pulumi.Context,
	name string, args *GoogleCloudDatacatalogV1beta1TagTemplateFieldArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1TagTemplateField, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDatacatalogV1beta1TagTemplateField
	err := ctx.RegisterResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1TagTemplateField", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDatacatalogV1beta1TagTemplateField gets an existing GoogleCloudDatacatalogV1beta1TagTemplateField resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDatacatalogV1beta1TagTemplateField(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDatacatalogV1beta1TagTemplateFieldState, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1TagTemplateField, error) {
	var resource GoogleCloudDatacatalogV1beta1TagTemplateField
	err := ctx.ReadResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1TagTemplateField", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDatacatalogV1beta1TagTemplateField resources.
type googleCloudDatacatalogV1beta1TagTemplateFieldState struct {
}

type GoogleCloudDatacatalogV1beta1TagTemplateFieldState struct {
}

func (GoogleCloudDatacatalogV1beta1TagTemplateFieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1TagTemplateFieldState)(nil)).Elem()
}

type googleCloudDatacatalogV1beta1TagTemplateFieldArgs struct {
	// The description for this field. Defaults to an empty string.
	Description *string `pulumi:"description"`
	// The display name for this field. Defaults to an empty string.
	DisplayName *string `pulumi:"displayName"`
	// Whether this is a required field. Defaults to false.
	IsRequired *bool `pulumi:"isRequired"`
	// Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.
	Name *string `pulumi:"name"`
	// The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
	Order *int `pulumi:"order"`
	// Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
	Parent string `pulumi:"parent"`
	// Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.
	TagTemplateFieldId *string `pulumi:"tagTemplateFieldId"`
	// Required. The type of value this tag field can contain.
	Type *GoogleCloudDatacatalogV1beta1FieldType `pulumi:"type"`
}

// The set of arguments for constructing a GoogleCloudDatacatalogV1beta1TagTemplateField resource.
type GoogleCloudDatacatalogV1beta1TagTemplateFieldArgs struct {
	// The description for this field. Defaults to an empty string.
	Description pulumi.StringPtrInput
	// The display name for this field. Defaults to an empty string.
	DisplayName pulumi.StringPtrInput
	// Whether this is a required field. Defaults to false.
	IsRequired pulumi.BoolPtrInput
	// Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.
	Name pulumi.StringPtrInput
	// The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
	Order pulumi.IntPtrInput
	// Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
	Parent pulumi.StringInput
	// Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.
	TagTemplateFieldId pulumi.StringPtrInput
	// Required. The type of value this tag field can contain.
	Type GoogleCloudDatacatalogV1beta1FieldTypePtrInput
}

func (GoogleCloudDatacatalogV1beta1TagTemplateFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1TagTemplateFieldArgs)(nil)).Elem()
}

type GoogleCloudDatacatalogV1beta1TagTemplateFieldInput interface {
	pulumi.Input

	ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutput() GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput
	ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput
}

func (*GoogleCloudDatacatalogV1beta1TagTemplateField) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1TagTemplateField)(nil))
}

func (i *GoogleCloudDatacatalogV1beta1TagTemplateField) ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutput() GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput {
	return i.ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutputWithContext(context.Background())
}

func (i *GoogleCloudDatacatalogV1beta1TagTemplateField) ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput)
}

type GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1TagTemplateField)(nil))
}

func (o GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput) ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutput() GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput {
	return o
}

func (o GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput) ToGoogleCloudDatacatalogV1beta1TagTemplateFieldOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDatacatalogV1beta1TagTemplateFieldOutput{})
}
