// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
type GoogleCloudDatacatalogV1beta1EntryGroup struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDatacatalogV1beta1EntryGroup registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDatacatalogV1beta1EntryGroup(ctx *pulumi.Context,
	name string, args *GoogleCloudDatacatalogV1beta1EntryGroupArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1EntryGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDatacatalogV1beta1EntryGroup
	err := ctx.RegisterResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1EntryGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDatacatalogV1beta1EntryGroup gets an existing GoogleCloudDatacatalogV1beta1EntryGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDatacatalogV1beta1EntryGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDatacatalogV1beta1EntryGroupState, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1EntryGroup, error) {
	var resource GoogleCloudDatacatalogV1beta1EntryGroup
	err := ctx.ReadResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1EntryGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDatacatalogV1beta1EntryGroup resources.
type googleCloudDatacatalogV1beta1EntryGroupState struct {
}

type GoogleCloudDatacatalogV1beta1EntryGroupState struct {
}

func (GoogleCloudDatacatalogV1beta1EntryGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1EntryGroupState)(nil)).Elem()
}

type googleCloudDatacatalogV1beta1EntryGroupArgs struct {
	// Output only. Timestamps about this EntryGroup. Default value is empty timestamps.
	DataCatalogTimestamps *GoogleCloudDatacatalogV1beta1SystemTimestamps `pulumi:"dataCatalogTimestamps"`
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.
	Description *string `pulumi:"description"`
	// A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
	DisplayName *string `pulumi:"displayName"`
	// Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.
	EntryGroupId *string `pulumi:"entryGroupId"`
	// The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
	Name *string `pulumi:"name"`
	// Required. The name of the project this entry group is in. Example: * projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
	Parent string `pulumi:"parent"`
}

// The set of arguments for constructing a GoogleCloudDatacatalogV1beta1EntryGroup resource.
type GoogleCloudDatacatalogV1beta1EntryGroupArgs struct {
	// Output only. Timestamps about this EntryGroup. Default value is empty timestamps.
	DataCatalogTimestamps GoogleCloudDatacatalogV1beta1SystemTimestampsPtrInput
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.
	Description pulumi.StringPtrInput
	// A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
	DisplayName pulumi.StringPtrInput
	// Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.
	EntryGroupId pulumi.StringPtrInput
	// The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
	Name pulumi.StringPtrInput
	// Required. The name of the project this entry group is in. Example: * projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
	Parent pulumi.StringInput
}

func (GoogleCloudDatacatalogV1beta1EntryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1EntryGroupArgs)(nil)).Elem()
}

type GoogleCloudDatacatalogV1beta1EntryGroupInput interface {
	pulumi.Input

	ToGoogleCloudDatacatalogV1beta1EntryGroupOutput() GoogleCloudDatacatalogV1beta1EntryGroupOutput
	ToGoogleCloudDatacatalogV1beta1EntryGroupOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1EntryGroupOutput
}

func (*GoogleCloudDatacatalogV1beta1EntryGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1EntryGroup)(nil))
}

func (i *GoogleCloudDatacatalogV1beta1EntryGroup) ToGoogleCloudDatacatalogV1beta1EntryGroupOutput() GoogleCloudDatacatalogV1beta1EntryGroupOutput {
	return i.ToGoogleCloudDatacatalogV1beta1EntryGroupOutputWithContext(context.Background())
}

func (i *GoogleCloudDatacatalogV1beta1EntryGroup) ToGoogleCloudDatacatalogV1beta1EntryGroupOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1EntryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDatacatalogV1beta1EntryGroupOutput)
}

type GoogleCloudDatacatalogV1beta1EntryGroupOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDatacatalogV1beta1EntryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1EntryGroup)(nil))
}

func (o GoogleCloudDatacatalogV1beta1EntryGroupOutput) ToGoogleCloudDatacatalogV1beta1EntryGroupOutput() GoogleCloudDatacatalogV1beta1EntryGroupOutput {
	return o
}

func (o GoogleCloudDatacatalogV1beta1EntryGroupOutput) ToGoogleCloudDatacatalogV1beta1EntryGroupOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1EntryGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDatacatalogV1beta1EntryGroupOutput{})
}
