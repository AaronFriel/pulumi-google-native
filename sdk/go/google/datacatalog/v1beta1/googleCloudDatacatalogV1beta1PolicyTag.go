// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a policy tag in the specified taxonomy.
type GoogleCloudDatacatalogV1beta1PolicyTag struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDatacatalogV1beta1PolicyTag registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDatacatalogV1beta1PolicyTag(ctx *pulumi.Context,
	name string, args *GoogleCloudDatacatalogV1beta1PolicyTagArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1PolicyTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDatacatalogV1beta1PolicyTag
	err := ctx.RegisterResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1PolicyTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDatacatalogV1beta1PolicyTag gets an existing GoogleCloudDatacatalogV1beta1PolicyTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDatacatalogV1beta1PolicyTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDatacatalogV1beta1PolicyTagState, opts ...pulumi.ResourceOption) (*GoogleCloudDatacatalogV1beta1PolicyTag, error) {
	var resource GoogleCloudDatacatalogV1beta1PolicyTag
	err := ctx.ReadResource("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1PolicyTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDatacatalogV1beta1PolicyTag resources.
type googleCloudDatacatalogV1beta1PolicyTagState struct {
}

type GoogleCloudDatacatalogV1beta1PolicyTagState struct {
}

func (GoogleCloudDatacatalogV1beta1PolicyTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1PolicyTagState)(nil)).Elem()
}

type googleCloudDatacatalogV1beta1PolicyTagArgs struct {
	// Output only. Resource names of child policy tags of this policy tag.
	ChildPolicyTags []string `pulumi:"childPolicyTags"`
	// Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
	Description *string `pulumi:"description"`
	// Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
	DisplayName *string `pulumi:"displayName"`
	// Output only. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
	Name *string `pulumi:"name"`
	// Required. Resource name of the taxonomy that the policy tag will belong to.
	Parent string `pulumi:"parent"`
	// Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
	ParentPolicyTag *string `pulumi:"parentPolicyTag"`
}

// The set of arguments for constructing a GoogleCloudDatacatalogV1beta1PolicyTag resource.
type GoogleCloudDatacatalogV1beta1PolicyTagArgs struct {
	// Output only. Resource names of child policy tags of this policy tag.
	ChildPolicyTags pulumi.StringArrayInput
	// Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
	Description pulumi.StringPtrInput
	// Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
	DisplayName pulumi.StringPtrInput
	// Output only. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
	Name pulumi.StringPtrInput
	// Required. Resource name of the taxonomy that the policy tag will belong to.
	Parent pulumi.StringInput
	// Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
	ParentPolicyTag pulumi.StringPtrInput
}

func (GoogleCloudDatacatalogV1beta1PolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDatacatalogV1beta1PolicyTagArgs)(nil)).Elem()
}

type GoogleCloudDatacatalogV1beta1PolicyTagInput interface {
	pulumi.Input

	ToGoogleCloudDatacatalogV1beta1PolicyTagOutput() GoogleCloudDatacatalogV1beta1PolicyTagOutput
	ToGoogleCloudDatacatalogV1beta1PolicyTagOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1PolicyTagOutput
}

func (*GoogleCloudDatacatalogV1beta1PolicyTag) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1PolicyTag)(nil))
}

func (i *GoogleCloudDatacatalogV1beta1PolicyTag) ToGoogleCloudDatacatalogV1beta1PolicyTagOutput() GoogleCloudDatacatalogV1beta1PolicyTagOutput {
	return i.ToGoogleCloudDatacatalogV1beta1PolicyTagOutputWithContext(context.Background())
}

func (i *GoogleCloudDatacatalogV1beta1PolicyTag) ToGoogleCloudDatacatalogV1beta1PolicyTagOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1PolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDatacatalogV1beta1PolicyTagOutput)
}

type GoogleCloudDatacatalogV1beta1PolicyTagOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDatacatalogV1beta1PolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDatacatalogV1beta1PolicyTag)(nil))
}

func (o GoogleCloudDatacatalogV1beta1PolicyTagOutput) ToGoogleCloudDatacatalogV1beta1PolicyTagOutput() GoogleCloudDatacatalogV1beta1PolicyTagOutput {
	return o
}

func (o GoogleCloudDatacatalogV1beta1PolicyTagOutput) ToGoogleCloudDatacatalogV1beta1PolicyTagOutputWithContext(ctx context.Context) GoogleCloudDatacatalogV1beta1PolicyTagOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDatacatalogV1beta1PolicyTagOutput{})
}
