// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Updates an IAM policy for the specified bucket.
type Policy struct {
	pulumi.CustomResourceState
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	var resource Policy
	err := ctx.RegisterResource("google-cloud:storage/v1:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("google-cloud:storage/v1:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
}

type PolicyState struct {
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	// An association between a role, which comes with a set of permissions, and members who may assume that role.
	Bindings []map[string]string `pulumi:"bindings"`
	// Name of a bucket.
	Bucket string `pulumi:"bucket"`
	// HTTP 1.1  Entity tag for the policy.
	Etag *string `pulumi:"etag"`
	// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
	Kind *string `pulumi:"kind"`
	// The project to be billed for this request if the target bucket is requester-pays bucket.
	ProvisionalUserProject *string `pulumi:"provisionalUserProject"`
	// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
	ResourceId *string `pulumi:"resourceId"`
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject *string `pulumi:"userProject"`
	// The IAM policy format version.
	Version *int `pulumi:"version"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	// An association between a role, which comes with a set of permissions, and members who may assume that role.
	Bindings pulumi.StringMapArrayInput
	// Name of a bucket.
	Bucket pulumi.StringInput
	// HTTP 1.1  Entity tag for the policy.
	Etag pulumi.StringPtrInput
	// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
	Kind pulumi.StringPtrInput
	// The project to be billed for this request if the target bucket is requester-pays bucket.
	ProvisionalUserProject pulumi.StringPtrInput
	// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
	ResourceId pulumi.StringPtrInput
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject pulumi.StringPtrInput
	// The IAM policy format version.
	Version pulumi.IntPtrInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}

type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(ctx context.Context) PolicyOutput
}

func (*Policy) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil))
}

func (i *Policy) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i *Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

type PolicyOutput struct {
	*pulumi.OutputState
}

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil))
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PolicyOutput{})
}
