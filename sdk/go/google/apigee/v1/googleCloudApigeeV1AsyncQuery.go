// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
type GoogleCloudApigeeV1AsyncQuery struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudApigeeV1AsyncQuery registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudApigeeV1AsyncQuery(ctx *pulumi.Context,
	name string, args *GoogleCloudApigeeV1AsyncQueryArgs, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1AsyncQuery, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudApigeeV1AsyncQuery
	err := ctx.RegisterResource("google-cloud:apigee/v1:GoogleCloudApigeeV1AsyncQuery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudApigeeV1AsyncQuery gets an existing GoogleCloudApigeeV1AsyncQuery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudApigeeV1AsyncQuery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudApigeeV1AsyncQueryState, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1AsyncQuery, error) {
	var resource GoogleCloudApigeeV1AsyncQuery
	err := ctx.ReadResource("google-cloud:apigee/v1:GoogleCloudApigeeV1AsyncQuery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudApigeeV1AsyncQuery resources.
type googleCloudApigeeV1AsyncQueryState struct {
}

type GoogleCloudApigeeV1AsyncQueryState struct {
}

func (GoogleCloudApigeeV1AsyncQueryState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1AsyncQueryState)(nil)).Elem()
}

type googleCloudApigeeV1AsyncQueryArgs struct {
	// Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
	CsvDelimiter *string `pulumi:"csvDelimiter"`
	// A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
	Dimensions []string `pulumi:"dimensions"`
	// Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname.
	EnvgroupHostname *string `pulumi:"envgroupHostname"`
	// Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
	Filter *string `pulumi:"filter"`
	// Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
	GroupByTimeUnit *string `pulumi:"groupByTimeUnit"`
	// Maximum number of rows that can be returned in the result.
	Limit *int `pulumi:"limit"`
	// A list of Metrics.
	Metrics []GoogleCloudApigeeV1QueryMetric `pulumi:"metrics"`
	// Asynchronous Query Name.
	Name *string `pulumi:"name"`
	// Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
	OutputFormat *string `pulumi:"outputFormat"`
	// Required. The parent resource name. Must be of the form `organizations/{org}`.
	Parent string `pulumi:"parent"`
	// Asynchronous Report ID.
	ReportDefinitionId *string `pulumi:"reportDefinitionId"`
	// Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
	TimeRange interface{} `pulumi:"timeRange"`
}

// The set of arguments for constructing a GoogleCloudApigeeV1AsyncQuery resource.
type GoogleCloudApigeeV1AsyncQueryArgs struct {
	// Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
	CsvDelimiter pulumi.StringPtrInput
	// A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
	Dimensions pulumi.StringArrayInput
	// Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname.
	EnvgroupHostname pulumi.StringPtrInput
	// Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
	Filter pulumi.StringPtrInput
	// Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
	GroupByTimeUnit pulumi.StringPtrInput
	// Maximum number of rows that can be returned in the result.
	Limit pulumi.IntPtrInput
	// A list of Metrics.
	Metrics GoogleCloudApigeeV1QueryMetricArrayInput
	// Asynchronous Query Name.
	Name pulumi.StringPtrInput
	// Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
	OutputFormat pulumi.StringPtrInput
	// Required. The parent resource name. Must be of the form `organizations/{org}`.
	Parent pulumi.StringInput
	// Asynchronous Report ID.
	ReportDefinitionId pulumi.StringPtrInput
	// Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
	TimeRange pulumi.Input
}

func (GoogleCloudApigeeV1AsyncQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1AsyncQueryArgs)(nil)).Elem()
}

type GoogleCloudApigeeV1AsyncQueryInput interface {
	pulumi.Input

	ToGoogleCloudApigeeV1AsyncQueryOutput() GoogleCloudApigeeV1AsyncQueryOutput
	ToGoogleCloudApigeeV1AsyncQueryOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AsyncQueryOutput
}

func (*GoogleCloudApigeeV1AsyncQuery) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1AsyncQuery)(nil))
}

func (i *GoogleCloudApigeeV1AsyncQuery) ToGoogleCloudApigeeV1AsyncQueryOutput() GoogleCloudApigeeV1AsyncQueryOutput {
	return i.ToGoogleCloudApigeeV1AsyncQueryOutputWithContext(context.Background())
}

func (i *GoogleCloudApigeeV1AsyncQuery) ToGoogleCloudApigeeV1AsyncQueryOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AsyncQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudApigeeV1AsyncQueryOutput)
}

type GoogleCloudApigeeV1AsyncQueryOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudApigeeV1AsyncQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1AsyncQuery)(nil))
}

func (o GoogleCloudApigeeV1AsyncQueryOutput) ToGoogleCloudApigeeV1AsyncQueryOutput() GoogleCloudApigeeV1AsyncQueryOutput {
	return o
}

func (o GoogleCloudApigeeV1AsyncQueryOutput) ToGoogleCloudApigeeV1AsyncQueryOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AsyncQueryOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudApigeeV1AsyncQueryOutput{})
}
