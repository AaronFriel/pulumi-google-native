// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
type GoogleCloudApigeeV1Keystore struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudApigeeV1Keystore registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudApigeeV1Keystore(ctx *pulumi.Context,
	name string, args *GoogleCloudApigeeV1KeystoreArgs, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1Keystore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudApigeeV1Keystore
	err := ctx.RegisterResource("google-cloud:apigee/v1:GoogleCloudApigeeV1Keystore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudApigeeV1Keystore gets an existing GoogleCloudApigeeV1Keystore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudApigeeV1Keystore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudApigeeV1KeystoreState, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1Keystore, error) {
	var resource GoogleCloudApigeeV1Keystore
	err := ctx.ReadResource("google-cloud:apigee/v1:GoogleCloudApigeeV1Keystore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudApigeeV1Keystore resources.
type googleCloudApigeeV1KeystoreState struct {
}

type GoogleCloudApigeeV1KeystoreState struct {
}

func (GoogleCloudApigeeV1KeystoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1KeystoreState)(nil)).Elem()
}

type googleCloudApigeeV1KeystoreArgs struct {
	// Output only. Aliases in this keystore.
	Aliases []string `pulumi:"aliases"`
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name *string `pulumi:"name"`
	// Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`
	Parent string `pulumi:"parent"`
}

// The set of arguments for constructing a GoogleCloudApigeeV1Keystore resource.
type GoogleCloudApigeeV1KeystoreArgs struct {
	// Output only. Aliases in this keystore.
	Aliases pulumi.StringArrayInput
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name pulumi.StringPtrInput
	// Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`
	Parent pulumi.StringInput
}

func (GoogleCloudApigeeV1KeystoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1KeystoreArgs)(nil)).Elem()
}

type GoogleCloudApigeeV1KeystoreInput interface {
	pulumi.Input

	ToGoogleCloudApigeeV1KeystoreOutput() GoogleCloudApigeeV1KeystoreOutput
	ToGoogleCloudApigeeV1KeystoreOutputWithContext(ctx context.Context) GoogleCloudApigeeV1KeystoreOutput
}

func (*GoogleCloudApigeeV1Keystore) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1Keystore)(nil))
}

func (i *GoogleCloudApigeeV1Keystore) ToGoogleCloudApigeeV1KeystoreOutput() GoogleCloudApigeeV1KeystoreOutput {
	return i.ToGoogleCloudApigeeV1KeystoreOutputWithContext(context.Background())
}

func (i *GoogleCloudApigeeV1Keystore) ToGoogleCloudApigeeV1KeystoreOutputWithContext(ctx context.Context) GoogleCloudApigeeV1KeystoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudApigeeV1KeystoreOutput)
}

type GoogleCloudApigeeV1KeystoreOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudApigeeV1KeystoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1Keystore)(nil))
}

func (o GoogleCloudApigeeV1KeystoreOutput) ToGoogleCloudApigeeV1KeystoreOutput() GoogleCloudApigeeV1KeystoreOutput {
	return o
}

func (o GoogleCloudApigeeV1KeystoreOutput) ToGoogleCloudApigeeV1KeystoreOutputWithContext(ctx context.Context) GoogleCloudApigeeV1KeystoreOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudApigeeV1KeystoreOutput{})
}
