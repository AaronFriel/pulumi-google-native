// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.
type GoogleIamV1Policy struct {
	pulumi.CustomResourceState
}

// NewGoogleIamV1Policy registers a new resource with the given unique name, arguments, and options.
func NewGoogleIamV1Policy(ctx *pulumi.Context,
	name string, args *GoogleIamV1PolicyArgs, opts ...pulumi.ResourceOption) (*GoogleIamV1Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	var resource GoogleIamV1Policy
	err := ctx.RegisterResource("google-cloud:apigee/v1:GoogleIamV1Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleIamV1Policy gets an existing GoogleIamV1Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleIamV1Policy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleIamV1PolicyState, opts ...pulumi.ResourceOption) (*GoogleIamV1Policy, error) {
	var resource GoogleIamV1Policy
	err := ctx.ReadResource("google-cloud:apigee/v1:GoogleIamV1Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleIamV1Policy resources.
type googleIamV1PolicyState struct {
}

type GoogleIamV1PolicyState struct {
}

func (GoogleIamV1PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleIamV1PolicyState)(nil)).Elem()
}

type googleIamV1PolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy *GoogleIamV1PolicyType `pulumi:"policy"`
	// REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
	Resource string `pulumi:"resource"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a GoogleIamV1Policy resource.
type GoogleIamV1PolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy GoogleIamV1PolicyTypePtrInput
	// REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
	Resource pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (GoogleIamV1PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleIamV1PolicyArgs)(nil)).Elem()
}

type GoogleIamV1PolicyInput interface {
	pulumi.Input

	ToGoogleIamV1PolicyOutput() GoogleIamV1PolicyOutput
	ToGoogleIamV1PolicyOutputWithContext(ctx context.Context) GoogleIamV1PolicyOutput
}

func (*GoogleIamV1Policy) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Policy)(nil))
}

func (i *GoogleIamV1Policy) ToGoogleIamV1PolicyOutput() GoogleIamV1PolicyOutput {
	return i.ToGoogleIamV1PolicyOutputWithContext(context.Background())
}

func (i *GoogleIamV1Policy) ToGoogleIamV1PolicyOutputWithContext(ctx context.Context) GoogleIamV1PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1PolicyOutput)
}

type GoogleIamV1PolicyOutput struct {
	*pulumi.OutputState
}

func (GoogleIamV1PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Policy)(nil))
}

func (o GoogleIamV1PolicyOutput) ToGoogleIamV1PolicyOutput() GoogleIamV1PolicyOutput {
	return o
}

func (o GoogleIamV1PolicyOutput) ToGoogleIamV1PolicyOutputWithContext(ctx context.Context) GoogleIamV1PolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleIamV1PolicyOutput{})
}
