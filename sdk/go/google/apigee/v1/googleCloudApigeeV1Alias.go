// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
type GoogleCloudApigeeV1Alias struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudApigeeV1Alias registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudApigeeV1Alias(ctx *pulumi.Context,
	name string, args *GoogleCloudApigeeV1AliasArgs, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1Alias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudApigeeV1Alias
	err := ctx.RegisterResource("google-cloud:apigee/v1:GoogleCloudApigeeV1Alias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudApigeeV1Alias gets an existing GoogleCloudApigeeV1Alias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudApigeeV1Alias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudApigeeV1AliasState, opts ...pulumi.ResourceOption) (*GoogleCloudApigeeV1Alias, error) {
	var resource GoogleCloudApigeeV1Alias
	err := ctx.ReadResource("google-cloud:apigee/v1:GoogleCloudApigeeV1Alias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudApigeeV1Alias resources.
type googleCloudApigeeV1AliasState struct {
}

type GoogleCloudApigeeV1AliasState struct {
}

func (GoogleCloudApigeeV1AliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1AliasState)(nil)).Elem()
}

type googleCloudApigeeV1AliasArgs struct {
	// DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.
	_password *string `pulumi:"_password"`
	// Alias for the key/certificate pair. Values must match the regular expression `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body.
	Alias *string `pulumi:"alias"`
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType *string `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data *string `pulumi:"data"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions []map[string]string `pulumi:"extensions"`
	// Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`
	Format *string `pulumi:"format"`
	// Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.
	IgnoreExpiryValidation *bool `pulumi:"ignoreExpiryValidation"`
	// Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.
	IgnoreNewlineValidation *bool `pulumi:"ignoreNewlineValidation"`
	// Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.
	Parent string `pulumi:"parent"`
}

// The set of arguments for constructing a GoogleCloudApigeeV1Alias resource.
type GoogleCloudApigeeV1AliasArgs struct {
	// DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.
	_password pulumi.StringPtrInput
	// Alias for the key/certificate pair. Values must match the regular expression `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body.
	Alias pulumi.StringPtrInput
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringPtrInput
	// The HTTP request/response body as raw binary.
	Data pulumi.StringPtrInput
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions pulumi.StringMapArrayInput
	// Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`
	Format pulumi.StringPtrInput
	// Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.
	IgnoreExpiryValidation pulumi.BoolPtrInput
	// Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.
	IgnoreNewlineValidation pulumi.BoolPtrInput
	// Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.
	Parent pulumi.StringInput
}

func (GoogleCloudApigeeV1AliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudApigeeV1AliasArgs)(nil)).Elem()
}

type GoogleCloudApigeeV1AliasInput interface {
	pulumi.Input

	ToGoogleCloudApigeeV1AliasOutput() GoogleCloudApigeeV1AliasOutput
	ToGoogleCloudApigeeV1AliasOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AliasOutput
}

func (*GoogleCloudApigeeV1Alias) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1Alias)(nil))
}

func (i *GoogleCloudApigeeV1Alias) ToGoogleCloudApigeeV1AliasOutput() GoogleCloudApigeeV1AliasOutput {
	return i.ToGoogleCloudApigeeV1AliasOutputWithContext(context.Background())
}

func (i *GoogleCloudApigeeV1Alias) ToGoogleCloudApigeeV1AliasOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudApigeeV1AliasOutput)
}

type GoogleCloudApigeeV1AliasOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudApigeeV1AliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudApigeeV1Alias)(nil))
}

func (o GoogleCloudApigeeV1AliasOutput) ToGoogleCloudApigeeV1AliasOutput() GoogleCloudApigeeV1AliasOutput {
	return o
}

func (o GoogleCloudApigeeV1AliasOutput) ToGoogleCloudApigeeV1AliasOutputWithContext(ctx context.Context) GoogleCloudApigeeV1AliasOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudApigeeV1AliasOutput{})
}
