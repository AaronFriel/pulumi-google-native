// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-cloud/sdk/go/google-cloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Alias":
		r, err = NewGoogleCloudApigeeV1Alias(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1ApiCategory":
		r, err = NewGoogleCloudApigeeV1ApiCategory(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1ApiProduct":
		r, err = NewGoogleCloudApigeeV1ApiProduct(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1ApiProxyRevision":
		r, err = NewGoogleCloudApigeeV1ApiProxyRevision(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1AsyncQuery":
		r, err = NewGoogleCloudApigeeV1AsyncQuery(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1CustomReport":
		r, err = NewGoogleCloudApigeeV1CustomReport(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1DataCollector":
		r, err = NewGoogleCloudApigeeV1DataCollector(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Datastore":
		r, err = NewGoogleCloudApigeeV1Datastore(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1DebugSession":
		r, err = NewGoogleCloudApigeeV1DebugSession(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Developer":
		r, err = NewGoogleCloudApigeeV1Developer(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1DeveloperApp":
		r, err = NewGoogleCloudApigeeV1DeveloperApp(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1DeveloperAppKey":
		r, err = NewGoogleCloudApigeeV1DeveloperAppKey(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Export":
		r, err = NewGoogleCloudApigeeV1Export(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1KeyValueMap":
		r, err = NewGoogleCloudApigeeV1KeyValueMap(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Keystore":
		r, err = NewGoogleCloudApigeeV1Keystore(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1Reference":
		r, err = NewGoogleCloudApigeeV1Reference(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1ResourceFile":
		r, err = NewGoogleCloudApigeeV1ResourceFile(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1SharedFlowRevision":
		r, err = NewGoogleCloudApigeeV1SharedFlowRevision(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1TargetServer":
		r, err = NewGoogleCloudApigeeV1TargetServer(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleCloudApigeeV1TraceConfigOverride":
		r, err = NewGoogleCloudApigeeV1TraceConfigOverride(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleIamV1Policy":
		r, err = NewGoogleIamV1Policy(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:apigee/v1:GoogleLongrunningOperation":
		r, err = NewGoogleLongrunningOperation(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := google - cloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"google-cloud",
		"apigee/v1",
		&module{version},
	)
}
