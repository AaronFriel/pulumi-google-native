// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a tenancy unit with no tenant resources. If tenancy unit already exists, it will be returned, however, in this case, returned TenancyUnit does not have tenant_resources field set and ListTenancyUnits has to be used to get a complete TenancyUnit with all fields populated.
type TenancyUnit struct {
	pulumi.CustomResourceState
}

// NewTenancyUnit registers a new resource with the given unique name, arguments, and options.
func NewTenancyUnit(ctx *pulumi.Context,
	name string, args *TenancyUnitArgs, opts ...pulumi.ResourceOption) (*TenancyUnit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource TenancyUnit
	err := ctx.RegisterResource("google-cloud:serviceconsumermanagement/v1:TenancyUnit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenancyUnit gets an existing TenancyUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenancyUnit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenancyUnitState, opts ...pulumi.ResourceOption) (*TenancyUnit, error) {
	var resource TenancyUnit
	err := ctx.ReadResource("google-cloud:serviceconsumermanagement/v1:TenancyUnit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TenancyUnit resources.
type tenancyUnitState struct {
}

type TenancyUnitState struct {
}

func (TenancyUnitState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenancyUnitState)(nil)).Elem()
}

type tenancyUnitArgs struct {
	// Required. services/{service}/{collection id}/{resource id} {collection id} is the cloud resource collection type representing the service consumer, for example 'projects', or 'organizations'. {resource id} is the consumer numeric id, such as project number: '123456'. {service} the name of a managed service, such as 'service.googleapis.com'. Enables service binding using the new tenancy unit.
	Parent string `pulumi:"parent"`
	// Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.
	TenancyUnitId *string `pulumi:"tenancyUnitId"`
}

// The set of arguments for constructing a TenancyUnit resource.
type TenancyUnitArgs struct {
	// Required. services/{service}/{collection id}/{resource id} {collection id} is the cloud resource collection type representing the service consumer, for example 'projects', or 'organizations'. {resource id} is the consumer numeric id, such as project number: '123456'. {service} the name of a managed service, such as 'service.googleapis.com'. Enables service binding using the new tenancy unit.
	Parent pulumi.StringInput
	// Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.
	TenancyUnitId pulumi.StringPtrInput
}

func (TenancyUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenancyUnitArgs)(nil)).Elem()
}

type TenancyUnitInput interface {
	pulumi.Input

	ToTenancyUnitOutput() TenancyUnitOutput
	ToTenancyUnitOutputWithContext(ctx context.Context) TenancyUnitOutput
}

func (*TenancyUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*TenancyUnit)(nil))
}

func (i *TenancyUnit) ToTenancyUnitOutput() TenancyUnitOutput {
	return i.ToTenancyUnitOutputWithContext(context.Background())
}

func (i *TenancyUnit) ToTenancyUnitOutputWithContext(ctx context.Context) TenancyUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenancyUnitOutput)
}

type TenancyUnitOutput struct {
	*pulumi.OutputState
}

func (TenancyUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenancyUnit)(nil))
}

func (o TenancyUnitOutput) ToTenancyUnitOutput() TenancyUnitOutput {
	return o
}

func (o TenancyUnitOutput) ToTenancyUnitOutputWithContext(ctx context.Context) TenancyUnitOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TenancyUnitOutput{})
}
