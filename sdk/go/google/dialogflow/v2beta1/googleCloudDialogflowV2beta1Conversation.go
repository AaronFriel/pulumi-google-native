// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.
type GoogleCloudDialogflowV2beta1Conversation struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowV2beta1Conversation registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowV2beta1Conversation(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowV2beta1ConversationArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2beta1Conversation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowV2beta1Conversation
	err := ctx.RegisterResource("google-cloud:dialogflow/v2beta1:GoogleCloudDialogflowV2beta1Conversation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowV2beta1Conversation gets an existing GoogleCloudDialogflowV2beta1Conversation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowV2beta1Conversation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowV2beta1ConversationState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2beta1Conversation, error) {
	var resource GoogleCloudDialogflowV2beta1Conversation
	err := ctx.ReadResource("google-cloud:dialogflow/v2beta1:GoogleCloudDialogflowV2beta1Conversation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowV2beta1Conversation resources.
type googleCloudDialogflowV2beta1ConversationState struct {
}

type GoogleCloudDialogflowV2beta1ConversationState struct {
}

func (GoogleCloudDialogflowV2beta1ConversationState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2beta1ConversationState)(nil)).Elem()
}

type googleCloudDialogflowV2beta1ConversationArgs struct {
	// Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
	ConversationId *string `pulumi:"conversationId"`
	// Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`.
	ConversationProfile *string `pulumi:"conversationProfile"`
	// The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.
	ConversationStage *string `pulumi:"conversationStage"`
	// Output only. The time the conversation was finished.
	EndTime *string `pulumi:"endTime"`
	// Output only. The current state of the Conversation.
	LifecycleState *string `pulumi:"lifecycleState"`
	// Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`.
	Name *string `pulumi:"name"`
	// Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.
	Parent string `pulumi:"parent"`
	// Output only. Required if the conversation is to be connected over telephony.
	PhoneNumber *GoogleCloudDialogflowV2beta1ConversationPhoneNumber `pulumi:"phoneNumber"`
	// Output only. The time the conversation was started.
	StartTime *string `pulumi:"startTime"`
}

// The set of arguments for constructing a GoogleCloudDialogflowV2beta1Conversation resource.
type GoogleCloudDialogflowV2beta1ConversationArgs struct {
	// Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula "a-zA-Z*" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
	ConversationId pulumi.StringPtrInput
	// Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`.
	ConversationProfile pulumi.StringPtrInput
	// The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.
	ConversationStage pulumi.StringPtrInput
	// Output only. The time the conversation was finished.
	EndTime pulumi.StringPtrInput
	// Output only. The current state of the Conversation.
	LifecycleState pulumi.StringPtrInput
	// Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`.
	Name pulumi.StringPtrInput
	// Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.
	Parent pulumi.StringInput
	// Output only. Required if the conversation is to be connected over telephony.
	PhoneNumber GoogleCloudDialogflowV2beta1ConversationPhoneNumberPtrInput
	// Output only. The time the conversation was started.
	StartTime pulumi.StringPtrInput
}

func (GoogleCloudDialogflowV2beta1ConversationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2beta1ConversationArgs)(nil)).Elem()
}

type GoogleCloudDialogflowV2beta1ConversationInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowV2beta1ConversationOutput() GoogleCloudDialogflowV2beta1ConversationOutput
	ToGoogleCloudDialogflowV2beta1ConversationOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ConversationOutput
}

func (*GoogleCloudDialogflowV2beta1Conversation) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2beta1Conversation)(nil))
}

func (i *GoogleCloudDialogflowV2beta1Conversation) ToGoogleCloudDialogflowV2beta1ConversationOutput() GoogleCloudDialogflowV2beta1ConversationOutput {
	return i.ToGoogleCloudDialogflowV2beta1ConversationOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowV2beta1Conversation) ToGoogleCloudDialogflowV2beta1ConversationOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ConversationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowV2beta1ConversationOutput)
}

type GoogleCloudDialogflowV2beta1ConversationOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowV2beta1ConversationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2beta1Conversation)(nil))
}

func (o GoogleCloudDialogflowV2beta1ConversationOutput) ToGoogleCloudDialogflowV2beta1ConversationOutput() GoogleCloudDialogflowV2beta1ConversationOutput {
	return o
}

func (o GoogleCloudDialogflowV2beta1ConversationOutput) ToGoogleCloudDialogflowV2beta1ConversationOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ConversationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowV2beta1ConversationOutput{})
}
