// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new participant in a conversation.
type GoogleCloudDialogflowV2beta1Participant struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowV2beta1Participant registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowV2beta1Participant(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowV2beta1ParticipantArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2beta1Participant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowV2beta1Participant
	err := ctx.RegisterResource("google-cloud:dialogflow/v2beta1:GoogleCloudDialogflowV2beta1Participant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowV2beta1Participant gets an existing GoogleCloudDialogflowV2beta1Participant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowV2beta1Participant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowV2beta1ParticipantState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2beta1Participant, error) {
	var resource GoogleCloudDialogflowV2beta1Participant
	err := ctx.ReadResource("google-cloud:dialogflow/v2beta1:GoogleCloudDialogflowV2beta1Participant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowV2beta1Participant resources.
type googleCloudDialogflowV2beta1ParticipantState struct {
}

type GoogleCloudDialogflowV2beta1ParticipantState struct {
}

func (GoogleCloudDialogflowV2beta1ParticipantState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2beta1ParticipantState)(nil)).Elem()
}

type googleCloudDialogflowV2beta1ParticipantArgs struct {
	// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
	Name *string `pulumi:"name"`
	// Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow uses this user id for following purposes: 1) Billing and measurement. If user with the same obfuscated_external_user_id is created in a later conversation, dialogflow will know it's the same user. 2) Agent assist suggestion personalization. For example, Dialogflow can use it to provide personalized smart reply suggestions for this user. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters.
	ObfuscatedExternalUserId *string `pulumi:"obfuscatedExternalUserId"`
	// Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.
	Parent string `pulumi:"parent"`
	// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
	Role *string `pulumi:"role"`
}

// The set of arguments for constructing a GoogleCloudDialogflowV2beta1Participant resource.
type GoogleCloudDialogflowV2beta1ParticipantArgs struct {
	// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
	Name pulumi.StringPtrInput
	// Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow uses this user id for following purposes: 1) Billing and measurement. If user with the same obfuscated_external_user_id is created in a later conversation, dialogflow will know it's the same user. 2) Agent assist suggestion personalization. For example, Dialogflow can use it to provide personalized smart reply suggestions for this user. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters.
	ObfuscatedExternalUserId pulumi.StringPtrInput
	// Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.
	Parent pulumi.StringInput
	// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
	Role pulumi.StringPtrInput
}

func (GoogleCloudDialogflowV2beta1ParticipantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2beta1ParticipantArgs)(nil)).Elem()
}

type GoogleCloudDialogflowV2beta1ParticipantInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowV2beta1ParticipantOutput() GoogleCloudDialogflowV2beta1ParticipantOutput
	ToGoogleCloudDialogflowV2beta1ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ParticipantOutput
}

func (*GoogleCloudDialogflowV2beta1Participant) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2beta1Participant)(nil))
}

func (i *GoogleCloudDialogflowV2beta1Participant) ToGoogleCloudDialogflowV2beta1ParticipantOutput() GoogleCloudDialogflowV2beta1ParticipantOutput {
	return i.ToGoogleCloudDialogflowV2beta1ParticipantOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowV2beta1Participant) ToGoogleCloudDialogflowV2beta1ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ParticipantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowV2beta1ParticipantOutput)
}

type GoogleCloudDialogflowV2beta1ParticipantOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowV2beta1ParticipantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2beta1Participant)(nil))
}

func (o GoogleCloudDialogflowV2beta1ParticipantOutput) ToGoogleCloudDialogflowV2beta1ParticipantOutput() GoogleCloudDialogflowV2beta1ParticipantOutput {
	return o
}

func (o GoogleCloudDialogflowV2beta1ParticipantOutput) ToGoogleCloudDialogflowV2beta1ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2beta1ParticipantOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowV2beta1ParticipantOutput{})
}
