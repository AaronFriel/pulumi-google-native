// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
type GoogleLongrunningOperation struct {
	pulumi.CustomResourceState
}

// NewGoogleLongrunningOperation registers a new resource with the given unique name, arguments, and options.
func NewGoogleLongrunningOperation(ctx *pulumi.Context,
	name string, args *GoogleLongrunningOperationArgs, opts ...pulumi.ResourceOption) (*GoogleLongrunningOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleLongrunningOperation
	err := ctx.RegisterResource("google-cloud:dialogflow/v2beta1:GoogleLongrunningOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleLongrunningOperation gets an existing GoogleLongrunningOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleLongrunningOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleLongrunningOperationState, opts ...pulumi.ResourceOption) (*GoogleLongrunningOperation, error) {
	var resource GoogleLongrunningOperation
	err := ctx.ReadResource("google-cloud:dialogflow/v2beta1:GoogleLongrunningOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleLongrunningOperation resources.
type googleLongrunningOperationState struct {
}

type GoogleLongrunningOperationState struct {
}

func (GoogleLongrunningOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleLongrunningOperationState)(nil)).Elem()
}

type googleLongrunningOperationArgs struct {
	// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use raw_content instead.
	Content *string `pulumi:"content"`
	// The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.
	ContentUri *string `pulumi:"contentUri"`
	// Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
	DisplayName *string `pulumi:"displayName"`
	// Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.
	EnableAutoReload *bool `pulumi:"enableAutoReload"`
	// Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI.
	ImportGcsCustomMetadata *bool `pulumi:"importGcsCustomMetadata"`
	// Required. The knowledge type of document content.
	KnowledgeTypes []string `pulumi:"knowledgeTypes"`
	// Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.
	LatestReloadStatus *GoogleCloudDialogflowV2beta1DocumentReloadStatus `pulumi:"latestReloadStatus"`
	// Required. The MIME type of this document.
	MimeType *string `pulumi:"mimeType"`
	// Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.
	Name *string `pulumi:"name"`
	// Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.
	Parent string `pulumi:"parent"`
	// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
	RawContent *string `pulumi:"rawContent"`
}

// The set of arguments for constructing a GoogleLongrunningOperation resource.
type GoogleLongrunningOperationArgs struct {
	// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use raw_content instead.
	Content pulumi.StringPtrInput
	// The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.
	ContentUri pulumi.StringPtrInput
	// Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
	DisplayName pulumi.StringPtrInput
	// Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.
	EnableAutoReload pulumi.BoolPtrInput
	// Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI.
	ImportGcsCustomMetadata pulumi.BoolPtrInput
	// Required. The knowledge type of document content.
	KnowledgeTypes pulumi.StringArrayInput
	// Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.
	LatestReloadStatus GoogleCloudDialogflowV2beta1DocumentReloadStatusPtrInput
	// Required. The MIME type of this document.
	MimeType pulumi.StringPtrInput
	// Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.
	Name pulumi.StringPtrInput
	// Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.
	Parent pulumi.StringInput
	// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
	RawContent pulumi.StringPtrInput
}

func (GoogleLongrunningOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleLongrunningOperationArgs)(nil)).Elem()
}

type GoogleLongrunningOperationInput interface {
	pulumi.Input

	ToGoogleLongrunningOperationOutput() GoogleLongrunningOperationOutput
	ToGoogleLongrunningOperationOutputWithContext(ctx context.Context) GoogleLongrunningOperationOutput
}

func (*GoogleLongrunningOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleLongrunningOperation)(nil))
}

func (i *GoogleLongrunningOperation) ToGoogleLongrunningOperationOutput() GoogleLongrunningOperationOutput {
	return i.ToGoogleLongrunningOperationOutputWithContext(context.Background())
}

func (i *GoogleLongrunningOperation) ToGoogleLongrunningOperationOutputWithContext(ctx context.Context) GoogleLongrunningOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleLongrunningOperationOutput)
}

type GoogleLongrunningOperationOutput struct {
	*pulumi.OutputState
}

func (GoogleLongrunningOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleLongrunningOperation)(nil))
}

func (o GoogleLongrunningOperationOutput) ToGoogleLongrunningOperationOutput() GoogleLongrunningOperationOutput {
	return o
}

func (o GoogleLongrunningOperationOutput) ToGoogleLongrunningOperationOutputWithContext(ctx context.Context) GoogleLongrunningOperationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleLongrunningOperationOutput{})
}
