// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new participant in a conversation.
type GoogleCloudDialogflowV2Participant struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowV2Participant registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowV2Participant(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowV2ParticipantArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2Participant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowV2Participant
	err := ctx.RegisterResource("google-cloud:dialogflow/v2:GoogleCloudDialogflowV2Participant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowV2Participant gets an existing GoogleCloudDialogflowV2Participant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowV2Participant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowV2ParticipantState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowV2Participant, error) {
	var resource GoogleCloudDialogflowV2Participant
	err := ctx.ReadResource("google-cloud:dialogflow/v2:GoogleCloudDialogflowV2Participant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowV2Participant resources.
type googleCloudDialogflowV2ParticipantState struct {
}

type GoogleCloudDialogflowV2ParticipantState struct {
}

func (GoogleCloudDialogflowV2ParticipantState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2ParticipantState)(nil)).Elem()
}

type googleCloudDialogflowV2ParticipantArgs struct {
	// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
	Name *string `pulumi:"name"`
	// Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.
	Parent string `pulumi:"parent"`
	// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
	Role *string `pulumi:"role"`
	// Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.
	SipRecordingMediaLabel *string `pulumi:"sipRecordingMediaLabel"`
}

// The set of arguments for constructing a GoogleCloudDialogflowV2Participant resource.
type GoogleCloudDialogflowV2ParticipantArgs struct {
	// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
	Name pulumi.StringPtrInput
	// Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.
	Parent pulumi.StringInput
	// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
	Role pulumi.StringPtrInput
	// Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.
	SipRecordingMediaLabel pulumi.StringPtrInput
}

func (GoogleCloudDialogflowV2ParticipantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowV2ParticipantArgs)(nil)).Elem()
}

type GoogleCloudDialogflowV2ParticipantInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowV2ParticipantOutput() GoogleCloudDialogflowV2ParticipantOutput
	ToGoogleCloudDialogflowV2ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2ParticipantOutput
}

func (*GoogleCloudDialogflowV2Participant) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2Participant)(nil))
}

func (i *GoogleCloudDialogflowV2Participant) ToGoogleCloudDialogflowV2ParticipantOutput() GoogleCloudDialogflowV2ParticipantOutput {
	return i.ToGoogleCloudDialogflowV2ParticipantOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowV2Participant) ToGoogleCloudDialogflowV2ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2ParticipantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowV2ParticipantOutput)
}

type GoogleCloudDialogflowV2ParticipantOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowV2ParticipantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowV2Participant)(nil))
}

func (o GoogleCloudDialogflowV2ParticipantOutput) ToGoogleCloudDialogflowV2ParticipantOutput() GoogleCloudDialogflowV2ParticipantOutput {
	return o
}

func (o GoogleCloudDialogflowV2ParticipantOutput) ToGoogleCloudDialogflowV2ParticipantOutputWithContext(ctx context.Context) GoogleCloudDialogflowV2ParticipantOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowV2ParticipantOutput{})
}
