// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Create security settings in the specified location.
type GoogleCloudDialogflowCxV3SecuritySettings struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowCxV3SecuritySettings registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowCxV3SecuritySettings(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowCxV3SecuritySettingsArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3SecuritySettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowCxV3SecuritySettings
	err := ctx.RegisterResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3SecuritySettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowCxV3SecuritySettings gets an existing GoogleCloudDialogflowCxV3SecuritySettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowCxV3SecuritySettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowCxV3SecuritySettingsState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3SecuritySettings, error) {
	var resource GoogleCloudDialogflowCxV3SecuritySettings
	err := ctx.ReadResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3SecuritySettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowCxV3SecuritySettings resources.
type googleCloudDialogflowCxV3SecuritySettingsState struct {
}

type GoogleCloudDialogflowCxV3SecuritySettingsState struct {
}

func (GoogleCloudDialogflowCxV3SecuritySettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3SecuritySettingsState)(nil)).Elem()
}

type googleCloudDialogflowCxV3SecuritySettingsArgs struct {
	// Required. The human-readable name of the security settings, unique within the location.
	DisplayName *string `pulumi:"displayName"`
	// DLP inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`
	InspectTemplate *string `pulumi:"inspectTemplate"`
	// Required. Resource name of the settings. Format: `projects//locations//securitySettings/`.
	Name *string `pulumi:"name"`
	// Required. The location to create an SecuritySettings for. Format: `projects//locations/`.
	Parent string `pulumi:"parent"`
	// List of types of data to remove when retention settings triggers purge.
	PurgeDataTypes []string `pulumi:"purgeDataTypes"`
	// Defines on what data we apply redaction. Note that we don't redact data to which we don't have access, e.g., Stackdriver logs.
	RedactionScope *string `pulumi:"redactionScope"`
	// Strategy that defines how we do redaction.
	RedactionStrategy *string `pulumi:"redactionStrategy"`
	// Retains the data for the specified number of days. User must Set a value lower than Dialogflow's default 30d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL.
	RetentionWindowDays *int `pulumi:"retentionWindowDays"`
}

// The set of arguments for constructing a GoogleCloudDialogflowCxV3SecuritySettings resource.
type GoogleCloudDialogflowCxV3SecuritySettingsArgs struct {
	// Required. The human-readable name of the security settings, unique within the location.
	DisplayName pulumi.StringPtrInput
	// DLP inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`
	InspectTemplate pulumi.StringPtrInput
	// Required. Resource name of the settings. Format: `projects//locations//securitySettings/`.
	Name pulumi.StringPtrInput
	// Required. The location to create an SecuritySettings for. Format: `projects//locations/`.
	Parent pulumi.StringInput
	// List of types of data to remove when retention settings triggers purge.
	PurgeDataTypes pulumi.StringArrayInput
	// Defines on what data we apply redaction. Note that we don't redact data to which we don't have access, e.g., Stackdriver logs.
	RedactionScope pulumi.StringPtrInput
	// Strategy that defines how we do redaction.
	RedactionStrategy pulumi.StringPtrInput
	// Retains the data for the specified number of days. User must Set a value lower than Dialogflow's default 30d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL.
	RetentionWindowDays pulumi.IntPtrInput
}

func (GoogleCloudDialogflowCxV3SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3SecuritySettingsArgs)(nil)).Elem()
}

type GoogleCloudDialogflowCxV3SecuritySettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SecuritySettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsOutput
	ToGoogleCloudDialogflowCxV3SecuritySettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsOutput
}

func (*GoogleCloudDialogflowCxV3SecuritySettings) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettings)(nil))
}

func (i *GoogleCloudDialogflowCxV3SecuritySettings) ToGoogleCloudDialogflowCxV3SecuritySettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowCxV3SecuritySettings) ToGoogleCloudDialogflowCxV3SecuritySettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsOutput)
}

type GoogleCloudDialogflowCxV3SecuritySettingsOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowCxV3SecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettings)(nil))
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsOutput{})
}
