// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an Experiment in the specified Environment.
type GoogleCloudDialogflowCxV3Experiment struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowCxV3Experiment registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowCxV3Experiment(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowCxV3ExperimentArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3Experiment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowCxV3Experiment
	err := ctx.RegisterResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3Experiment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowCxV3Experiment gets an existing GoogleCloudDialogflowCxV3Experiment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowCxV3Experiment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowCxV3ExperimentState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3Experiment, error) {
	var resource GoogleCloudDialogflowCxV3Experiment
	err := ctx.ReadResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3Experiment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowCxV3Experiment resources.
type googleCloudDialogflowCxV3ExperimentState struct {
}

type GoogleCloudDialogflowCxV3ExperimentState struct {
}

func (GoogleCloudDialogflowCxV3ExperimentState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3ExperimentState)(nil)).Elem()
}

type googleCloudDialogflowCxV3ExperimentArgs struct {
	// Creation time of this experiment.
	CreateTime *string `pulumi:"createTime"`
	// The definition of the experiment.
	Definition *GoogleCloudDialogflowCxV3ExperimentDefinition `pulumi:"definition"`
	// The human-readable description of the experiment.
	Description *string `pulumi:"description"`
	// Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// End time of this experiment.
	EndTime *string `pulumi:"endTime"`
	// Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
	ExperimentLength *string `pulumi:"experimentLength"`
	// Last update time of this experiment.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// The name of the experiment. Format: projects//locations//agents//environments//experiments/..
	Name *string `pulumi:"name"`
	// Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`.
	Parent string `pulumi:"parent"`
	// Inference result of the experiment.
	Result *GoogleCloudDialogflowCxV3ExperimentResult `pulumi:"result"`
	// Start time of this experiment.
	StartTime *string `pulumi:"startTime"`
	// The current state of the experiment. Transition triggered by Expriments.StartExperiment: PENDING->RUNNING. Transition triggered by Expriments.CancelExperiment: PENDING->CANCELLED or RUNNING->CANCELLED.
	State *string `pulumi:"state"`
	// The history of updates to the experiment variants.
	VariantsHistory []GoogleCloudDialogflowCxV3VariantsHistory `pulumi:"variantsHistory"`
}

// The set of arguments for constructing a GoogleCloudDialogflowCxV3Experiment resource.
type GoogleCloudDialogflowCxV3ExperimentArgs struct {
	// Creation time of this experiment.
	CreateTime pulumi.StringPtrInput
	// The definition of the experiment.
	Definition GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput
	// The human-readable description of the experiment.
	Description pulumi.StringPtrInput
	// Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
	DisplayName pulumi.StringPtrInput
	// End time of this experiment.
	EndTime pulumi.StringPtrInput
	// Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
	ExperimentLength pulumi.StringPtrInput
	// Last update time of this experiment.
	LastUpdateTime pulumi.StringPtrInput
	// The name of the experiment. Format: projects//locations//agents//environments//experiments/..
	Name pulumi.StringPtrInput
	// Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`.
	Parent pulumi.StringInput
	// Inference result of the experiment.
	Result GoogleCloudDialogflowCxV3ExperimentResultPtrInput
	// Start time of this experiment.
	StartTime pulumi.StringPtrInput
	// The current state of the experiment. Transition triggered by Expriments.StartExperiment: PENDING->RUNNING. Transition triggered by Expriments.CancelExperiment: PENDING->CANCELLED or RUNNING->CANCELLED.
	State pulumi.StringPtrInput
	// The history of updates to the experiment variants.
	VariantsHistory GoogleCloudDialogflowCxV3VariantsHistoryArrayInput
}

func (GoogleCloudDialogflowCxV3ExperimentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3ExperimentArgs)(nil)).Elem()
}

type GoogleCloudDialogflowCxV3ExperimentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentOutput() GoogleCloudDialogflowCxV3ExperimentOutput
	ToGoogleCloudDialogflowCxV3ExperimentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentOutput
}

func (*GoogleCloudDialogflowCxV3Experiment) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Experiment)(nil))
}

func (i *GoogleCloudDialogflowCxV3Experiment) ToGoogleCloudDialogflowCxV3ExperimentOutput() GoogleCloudDialogflowCxV3ExperimentOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowCxV3Experiment) ToGoogleCloudDialogflowCxV3ExperimentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentOutput)
}

type GoogleCloudDialogflowCxV3ExperimentOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowCxV3ExperimentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Experiment)(nil))
}

func (o GoogleCloudDialogflowCxV3ExperimentOutput) ToGoogleCloudDialogflowCxV3ExperimentOutput() GoogleCloudDialogflowCxV3ExperimentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentOutput) ToGoogleCloudDialogflowCxV3ExperimentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentOutput{})
}
