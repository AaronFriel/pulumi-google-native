// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an entity type in the specified agent.
type GoogleCloudDialogflowCxV3EntityType struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudDialogflowCxV3EntityType registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudDialogflowCxV3EntityType(ctx *pulumi.Context,
	name string, args *GoogleCloudDialogflowCxV3EntityTypeArgs, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3EntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudDialogflowCxV3EntityType
	err := ctx.RegisterResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3EntityType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudDialogflowCxV3EntityType gets an existing GoogleCloudDialogflowCxV3EntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudDialogflowCxV3EntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudDialogflowCxV3EntityTypeState, opts ...pulumi.ResourceOption) (*GoogleCloudDialogflowCxV3EntityType, error) {
	var resource GoogleCloudDialogflowCxV3EntityType
	err := ctx.ReadResource("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3EntityType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudDialogflowCxV3EntityType resources.
type googleCloudDialogflowCxV3EntityTypeState struct {
}

type GoogleCloudDialogflowCxV3EntityTypeState struct {
}

func (GoogleCloudDialogflowCxV3EntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3EntityTypeState)(nil)).Elem()
}

type googleCloudDialogflowCxV3EntityTypeArgs struct {
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode *string `pulumi:"autoExpansionMode"`
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []GoogleCloudDialogflowCxV3EntityTypeEntity `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases []GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase `pulumi:"excludedPhrases"`
	// Required. Indicates the kind of entity type.
	Kind *string `pulumi:"kind"`
	// The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `pulumi:"languageCode"`
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name *string `pulumi:"name"`
	// Required. The agent to create a entity type for. Format: `projects//locations//agents/`.
	Parent string `pulumi:"parent"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact *bool `pulumi:"redact"`
}

// The set of arguments for constructing a GoogleCloudDialogflowCxV3EntityType resource.
type GoogleCloudDialogflowCxV3EntityTypeArgs struct {
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode pulumi.StringPtrInput
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput
	// Required. Indicates the kind of entity type.
	Kind pulumi.StringPtrInput
	// The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrInput
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name pulumi.StringPtrInput
	// Required. The agent to create a entity type for. Format: `projects//locations//agents/`.
	Parent pulumi.StringInput
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact pulumi.BoolPtrInput
}

func (GoogleCloudDialogflowCxV3EntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudDialogflowCxV3EntityTypeArgs)(nil)).Elem()
}

type GoogleCloudDialogflowCxV3EntityTypeInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeOutput() GoogleCloudDialogflowCxV3EntityTypeOutput
	ToGoogleCloudDialogflowCxV3EntityTypeOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeOutput
}

func (*GoogleCloudDialogflowCxV3EntityType) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityType)(nil))
}

func (i *GoogleCloudDialogflowCxV3EntityType) ToGoogleCloudDialogflowCxV3EntityTypeOutput() GoogleCloudDialogflowCxV3EntityTypeOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeOutputWithContext(context.Background())
}

func (i *GoogleCloudDialogflowCxV3EntityType) ToGoogleCloudDialogflowCxV3EntityTypeOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudDialogflowCxV3EntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityType)(nil))
}

func (o GoogleCloudDialogflowCxV3EntityTypeOutput) ToGoogleCloudDialogflowCxV3EntityTypeOutput() GoogleCloudDialogflowCxV3EntityTypeOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeOutput) ToGoogleCloudDialogflowCxV3EntityTypeOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeOutput{})
}
