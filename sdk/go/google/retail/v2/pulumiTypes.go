// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Product thumbnail/detail image.
type GoogleCloudRetailV2Image struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height *int `pulumi:"height"`
	// Required. URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri *string `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width *int `pulumi:"width"`
}

// GoogleCloudRetailV2ImageInput is an input type that accepts GoogleCloudRetailV2ImageArgs and GoogleCloudRetailV2ImageOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ImageInput` via:
//
//          GoogleCloudRetailV2ImageArgs{...}
type GoogleCloudRetailV2ImageInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput
	ToGoogleCloudRetailV2ImageOutputWithContext(context.Context) GoogleCloudRetailV2ImageOutput
}

// Product thumbnail/detail image.
type GoogleCloudRetailV2ImageArgs struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Required. URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri pulumi.StringPtrInput `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (GoogleCloudRetailV2ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Image)(nil)).Elem()
}

func (i GoogleCloudRetailV2ImageArgs) ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput {
	return i.ToGoogleCloudRetailV2ImageOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ImageArgs) ToGoogleCloudRetailV2ImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ImageOutput)
}

// GoogleCloudRetailV2ImageArrayInput is an input type that accepts GoogleCloudRetailV2ImageArray and GoogleCloudRetailV2ImageArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ImageArrayInput` via:
//
//          GoogleCloudRetailV2ImageArray{ GoogleCloudRetailV2ImageArgs{...} }
type GoogleCloudRetailV2ImageArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput
	ToGoogleCloudRetailV2ImageArrayOutputWithContext(context.Context) GoogleCloudRetailV2ImageArrayOutput
}

type GoogleCloudRetailV2ImageArray []GoogleCloudRetailV2ImageInput

func (GoogleCloudRetailV2ImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Image)(nil)).Elem()
}

func (i GoogleCloudRetailV2ImageArray) ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput {
	return i.ToGoogleCloudRetailV2ImageArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ImageArray) ToGoogleCloudRetailV2ImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ImageArrayOutput)
}

// Product thumbnail/detail image.
type GoogleCloudRetailV2ImageOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Image)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageOutput) ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput {
	return o
}

func (o GoogleCloudRetailV2ImageOutput) ToGoogleCloudRetailV2ImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageOutput {
	return o
}

// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Required. URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2ImageOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2ImageArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Image)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageArrayOutput) ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageArrayOutput) ToGoogleCloudRetailV2ImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2Image {
		return vs[0].([]GoogleCloudRetailV2Image)[vs[1].(int)]
	}).(GoogleCloudRetailV2ImageOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfo struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost *float64 `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned.
	CurrencyCode *string `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price.
	OriginalPrice *float64 `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.priceSpecification](https://schema.org/priceSpecification).
	Price *float64 `pulumi:"price"`
}

// GoogleCloudRetailV2PriceInfoInput is an input type that accepts GoogleCloudRetailV2PriceInfoArgs and GoogleCloudRetailV2PriceInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PriceInfoInput` via:
//
//          GoogleCloudRetailV2PriceInfoArgs{...}
type GoogleCloudRetailV2PriceInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput
	ToGoogleCloudRetailV2PriceInfoOutputWithContext(context.Context) GoogleCloudRetailV2PriceInfoOutput
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoArgs struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost pulumi.Float64PtrInput `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned.
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price.
	OriginalPrice pulumi.Float64PtrInput `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.priceSpecification](https://schema.org/priceSpecification).
	Price pulumi.Float64PtrInput `pulumi:"price"`
}

func (GoogleCloudRetailV2PriceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput {
	return i.ToGoogleCloudRetailV2PriceInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoOutput)
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoOutput).ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2PriceInfoPtrInput is an input type that accepts GoogleCloudRetailV2PriceInfoArgs, GoogleCloudRetailV2PriceInfoPtr and GoogleCloudRetailV2PriceInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PriceInfoPtrInput` via:
//
//          GoogleCloudRetailV2PriceInfoArgs{...}
//
//  or:
//
//          nil
type GoogleCloudRetailV2PriceInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput
	ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Context) GoogleCloudRetailV2PriceInfoPtrOutput
}

type googleCloudRetailV2PriceInfoPtrType GoogleCloudRetailV2PriceInfoArgs

func GoogleCloudRetailV2PriceInfoPtr(v *GoogleCloudRetailV2PriceInfoArgs) GoogleCloudRetailV2PriceInfoPtrInput {
	return (*googleCloudRetailV2PriceInfoPtrType)(v)
}

func (*googleCloudRetailV2PriceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (i *googleCloudRetailV2PriceInfoPtrType) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2PriceInfoPtrType) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoPtrOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return o.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *GoogleCloudRetailV2PriceInfo {
		return &v
	}).(GoogleCloudRetailV2PriceInfoPtrOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2PriceInfoOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.Cost }).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2PriceInfoOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price.
func (o GoogleCloudRetailV2PriceInfoOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.OriginalPrice }).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.priceSpecification](https://schema.org/priceSpecification).
func (o GoogleCloudRetailV2PriceInfoOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.Price }).(pulumi.Float64PtrOutput)
}

type GoogleCloudRetailV2PriceInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) Elem() GoogleCloudRetailV2PriceInfoOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) GoogleCloudRetailV2PriceInfo { return *v }).(GoogleCloudRetailV2PriceInfoOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2PriceInfoPtrOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Cost
	}).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.OriginalPrice
	}).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.priceSpecification](https://schema.org/priceSpecification).
func (o GoogleCloudRetailV2PriceInfoPtrOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Price
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoPtrOutput{})
}
