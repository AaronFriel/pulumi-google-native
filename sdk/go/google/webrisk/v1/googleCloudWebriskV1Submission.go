// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a Submission of a URI suspected of containing phishing content to be reviewed. If the result verifies the existence of malicious phishing content, the site will be added to the [Google's Social Engineering lists](https://support.google.com/webmasters/answer/6350487/) in order to protect users that could get exposed to this threat in the future. Only allowlisted projects can use this method during Early Access. Please reach out to Sales or your customer engineer to obtain access.
type GoogleCloudWebriskV1Submission struct {
	pulumi.CustomResourceState
}

// NewGoogleCloudWebriskV1Submission registers a new resource with the given unique name, arguments, and options.
func NewGoogleCloudWebriskV1Submission(ctx *pulumi.Context,
	name string, args *GoogleCloudWebriskV1SubmissionArgs, opts ...pulumi.ResourceOption) (*GoogleCloudWebriskV1Submission, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource GoogleCloudWebriskV1Submission
	err := ctx.RegisterResource("google-cloud:webrisk/v1:GoogleCloudWebriskV1Submission", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGoogleCloudWebriskV1Submission gets an existing GoogleCloudWebriskV1Submission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGoogleCloudWebriskV1Submission(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GoogleCloudWebriskV1SubmissionState, opts ...pulumi.ResourceOption) (*GoogleCloudWebriskV1Submission, error) {
	var resource GoogleCloudWebriskV1Submission
	err := ctx.ReadResource("google-cloud:webrisk/v1:GoogleCloudWebriskV1Submission", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GoogleCloudWebriskV1Submission resources.
type googleCloudWebriskV1SubmissionState struct {
}

type GoogleCloudWebriskV1SubmissionState struct {
}

func (GoogleCloudWebriskV1SubmissionState) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudWebriskV1SubmissionState)(nil)).Elem()
}

type googleCloudWebriskV1SubmissionArgs struct {
	// Required. The name of the project that is making the submission. This string is in the format "projects/{project_number}".
	Parent string `pulumi:"parent"`
	// ThreatTypes found to be associated with the submitted URI after reviewing it. This may be empty if the URI was not added to any list.
	ThreatTypes []string `pulumi:"threatTypes"`
	// Required. The URI that is being reported for malicious content to be analyzed.
	Uri *string `pulumi:"uri"`
}

// The set of arguments for constructing a GoogleCloudWebriskV1Submission resource.
type GoogleCloudWebriskV1SubmissionArgs struct {
	// Required. The name of the project that is making the submission. This string is in the format "projects/{project_number}".
	Parent pulumi.StringInput
	// ThreatTypes found to be associated with the submitted URI after reviewing it. This may be empty if the URI was not added to any list.
	ThreatTypes pulumi.StringArrayInput
	// Required. The URI that is being reported for malicious content to be analyzed.
	Uri pulumi.StringPtrInput
}

func (GoogleCloudWebriskV1SubmissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*googleCloudWebriskV1SubmissionArgs)(nil)).Elem()
}

type GoogleCloudWebriskV1SubmissionInput interface {
	pulumi.Input

	ToGoogleCloudWebriskV1SubmissionOutput() GoogleCloudWebriskV1SubmissionOutput
	ToGoogleCloudWebriskV1SubmissionOutputWithContext(ctx context.Context) GoogleCloudWebriskV1SubmissionOutput
}

func (*GoogleCloudWebriskV1Submission) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudWebriskV1Submission)(nil))
}

func (i *GoogleCloudWebriskV1Submission) ToGoogleCloudWebriskV1SubmissionOutput() GoogleCloudWebriskV1SubmissionOutput {
	return i.ToGoogleCloudWebriskV1SubmissionOutputWithContext(context.Background())
}

func (i *GoogleCloudWebriskV1Submission) ToGoogleCloudWebriskV1SubmissionOutputWithContext(ctx context.Context) GoogleCloudWebriskV1SubmissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudWebriskV1SubmissionOutput)
}

type GoogleCloudWebriskV1SubmissionOutput struct {
	*pulumi.OutputState
}

func (GoogleCloudWebriskV1SubmissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudWebriskV1Submission)(nil))
}

func (o GoogleCloudWebriskV1SubmissionOutput) ToGoogleCloudWebriskV1SubmissionOutput() GoogleCloudWebriskV1SubmissionOutput {
	return o
}

func (o GoogleCloudWebriskV1SubmissionOutput) ToGoogleCloudWebriskV1SubmissionOutputWithContext(ctx context.Context) GoogleCloudWebriskV1SubmissionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudWebriskV1SubmissionOutput{})
}
