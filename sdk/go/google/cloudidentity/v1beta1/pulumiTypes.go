// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Resource representing the Android specific attributes of a Device.
type AndroidAttributes struct {
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources *bool `pulumi:"enabledUnknownSources"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount *bool `pulumi:"ownerProfileAccount"`
	// Ownership privileges on device.
	OwnershipPrivilege *string `pulumi:"ownershipPrivilege"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile *bool `pulumi:"supportsWorkProfile"`
}

// AndroidAttributesInput is an input type that accepts AndroidAttributesArgs and AndroidAttributesOutput values.
// You can construct a concrete instance of `AndroidAttributesInput` via:
//
//          AndroidAttributesArgs{...}
type AndroidAttributesInput interface {
	pulumi.Input

	ToAndroidAttributesOutput() AndroidAttributesOutput
	ToAndroidAttributesOutputWithContext(context.Context) AndroidAttributesOutput
}

// Resource representing the Android specific attributes of a Device.
type AndroidAttributesArgs struct {
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources pulumi.BoolPtrInput `pulumi:"enabledUnknownSources"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount pulumi.BoolPtrInput `pulumi:"ownerProfileAccount"`
	// Ownership privileges on device.
	OwnershipPrivilege pulumi.StringPtrInput `pulumi:"ownershipPrivilege"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile pulumi.BoolPtrInput `pulumi:"supportsWorkProfile"`
}

func (AndroidAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AndroidAttributes)(nil)).Elem()
}

func (i AndroidAttributesArgs) ToAndroidAttributesOutput() AndroidAttributesOutput {
	return i.ToAndroidAttributesOutputWithContext(context.Background())
}

func (i AndroidAttributesArgs) ToAndroidAttributesOutputWithContext(ctx context.Context) AndroidAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AndroidAttributesOutput)
}

func (i AndroidAttributesArgs) ToAndroidAttributesPtrOutput() AndroidAttributesPtrOutput {
	return i.ToAndroidAttributesPtrOutputWithContext(context.Background())
}

func (i AndroidAttributesArgs) ToAndroidAttributesPtrOutputWithContext(ctx context.Context) AndroidAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AndroidAttributesOutput).ToAndroidAttributesPtrOutputWithContext(ctx)
}

// AndroidAttributesPtrInput is an input type that accepts AndroidAttributesArgs, AndroidAttributesPtr and AndroidAttributesPtrOutput values.
// You can construct a concrete instance of `AndroidAttributesPtrInput` via:
//
//          AndroidAttributesArgs{...}
//
//  or:
//
//          nil
type AndroidAttributesPtrInput interface {
	pulumi.Input

	ToAndroidAttributesPtrOutput() AndroidAttributesPtrOutput
	ToAndroidAttributesPtrOutputWithContext(context.Context) AndroidAttributesPtrOutput
}

type androidAttributesPtrType AndroidAttributesArgs

func AndroidAttributesPtr(v *AndroidAttributesArgs) AndroidAttributesPtrInput {
	return (*androidAttributesPtrType)(v)
}

func (*androidAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AndroidAttributes)(nil)).Elem()
}

func (i *androidAttributesPtrType) ToAndroidAttributesPtrOutput() AndroidAttributesPtrOutput {
	return i.ToAndroidAttributesPtrOutputWithContext(context.Background())
}

func (i *androidAttributesPtrType) ToAndroidAttributesPtrOutputWithContext(ctx context.Context) AndroidAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AndroidAttributesPtrOutput)
}

// Resource representing the Android specific attributes of a Device.
type AndroidAttributesOutput struct{ *pulumi.OutputState }

func (AndroidAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AndroidAttributes)(nil)).Elem()
}

func (o AndroidAttributesOutput) ToAndroidAttributesOutput() AndroidAttributesOutput {
	return o
}

func (o AndroidAttributesOutput) ToAndroidAttributesOutputWithContext(ctx context.Context) AndroidAttributesOutput {
	return o
}

func (o AndroidAttributesOutput) ToAndroidAttributesPtrOutput() AndroidAttributesPtrOutput {
	return o.ToAndroidAttributesPtrOutputWithContext(context.Background())
}

func (o AndroidAttributesOutput) ToAndroidAttributesPtrOutputWithContext(ctx context.Context) AndroidAttributesPtrOutput {
	return o.ApplyT(func(v AndroidAttributes) *AndroidAttributes {
		return &v
	}).(AndroidAttributesPtrOutput)
}

// Whether applications from unknown sources can be installed on device.
func (o AndroidAttributesOutput) EnabledUnknownSources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AndroidAttributes) *bool { return v.EnabledUnknownSources }).(pulumi.BoolPtrOutput)
}

// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
func (o AndroidAttributesOutput) OwnerProfileAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AndroidAttributes) *bool { return v.OwnerProfileAccount }).(pulumi.BoolPtrOutput)
}

// Ownership privileges on device.
func (o AndroidAttributesOutput) OwnershipPrivilege() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AndroidAttributes) *string { return v.OwnershipPrivilege }).(pulumi.StringPtrOutput)
}

// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
func (o AndroidAttributesOutput) SupportsWorkProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AndroidAttributes) *bool { return v.SupportsWorkProfile }).(pulumi.BoolPtrOutput)
}

type AndroidAttributesPtrOutput struct{ *pulumi.OutputState }

func (AndroidAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AndroidAttributes)(nil)).Elem()
}

func (o AndroidAttributesPtrOutput) ToAndroidAttributesPtrOutput() AndroidAttributesPtrOutput {
	return o
}

func (o AndroidAttributesPtrOutput) ToAndroidAttributesPtrOutputWithContext(ctx context.Context) AndroidAttributesPtrOutput {
	return o
}

func (o AndroidAttributesPtrOutput) Elem() AndroidAttributesOutput {
	return o.ApplyT(func(v *AndroidAttributes) AndroidAttributes { return *v }).(AndroidAttributesOutput)
}

// Whether applications from unknown sources can be installed on device.
func (o AndroidAttributesPtrOutput) EnabledUnknownSources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledUnknownSources
	}).(pulumi.BoolPtrOutput)
}

// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
func (o AndroidAttributesPtrOutput) OwnerProfileAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.OwnerProfileAccount
	}).(pulumi.BoolPtrOutput)
}

// Ownership privileges on device.
func (o AndroidAttributesPtrOutput) OwnershipPrivilege() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AndroidAttributes) *string {
		if v == nil {
			return nil
		}
		return v.OwnershipPrivilege
	}).(pulumi.StringPtrOutput)
}

// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
func (o AndroidAttributesPtrOutput) SupportsWorkProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.SupportsWorkProfile
	}).(pulumi.BoolPtrOutput)
}

// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type DeviceType struct {
	// Output only. Attributes specific to Android devices.
	AndroidSpecificAttributes *AndroidAttributes `pulumi:"androidSpecificAttributes"`
	// Asset tag of the device.
	AssetTag *string `pulumi:"assetTag"`
	// Output only. Baseband version of the device.
	BasebandVersion *string `pulumi:"basebandVersion"`
	// Output only. Device bootloader version. Example: 0.6.7.
	BootloaderVersion *string `pulumi:"bootloaderVersion"`
	// Output only. Device brand. Example: Samsung.
	Brand *string `pulumi:"brand"`
	// Output only. Build number of the device.
	BuildNumber *string `pulumi:"buildNumber"`
	// Output only. Represents whether the Device is compromised.
	CompromisedState *string `pulumi:"compromisedState"`
	// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
	CreateTime *string `pulumi:"createTime"`
	// Output only. Type of device.
	DeviceType *string `pulumi:"deviceType"`
	// Output only. Whether developer options is enabled on device.
	EnabledDeveloperOptions *bool `pulumi:"enabledDeveloperOptions"`
	// Output only. Whether USB debugging is enabled on device.
	EnabledUsbDebugging *bool `pulumi:"enabledUsbDebugging"`
	// Output only. Device encryption state.
	EncryptionState *string `pulumi:"encryptionState"`
	// Output only. IMEI number of device if GSM device; empty otherwise.
	Imei *string `pulumi:"imei"`
	// Output only. Kernel version of the device.
	KernelVersion *string `pulumi:"kernelVersion"`
	// Most recent time when device synced with this service.
	LastSyncTime *string `pulumi:"lastSyncTime"`
	// Output only. Management state of the device
	ManagementState *string `pulumi:"managementState"`
	// Output only. Device manufacturer. Example: Motorola.
	Manufacturer *string `pulumi:"manufacturer"`
	// Output only. MEID number of device if CDMA device; empty otherwise.
	Meid *string `pulumi:"meid"`
	// Output only. Model name of device. Example: Pixel 3.
	Model *string `pulumi:"model"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
	Name *string `pulumi:"name"`
	// Output only. Mobile or network operator of device, if available.
	NetworkOperator *string `pulumi:"networkOperator"`
	// Output only. OS version of the device. Example: Android 8.1.0.
	OsVersion *string `pulumi:"osVersion"`
	// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
	OtherAccounts []string `pulumi:"otherAccounts"`
	// Output only. Whether the device is owned by the company or an individual
	OwnerType *string `pulumi:"ownerType"`
	// Output only. OS release version. Example: 6.0.
	ReleaseVersion *string `pulumi:"releaseVersion"`
	// Output only. OS security patch update time on device.
	SecurityPatchTime *string `pulumi:"securityPatchTime"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber *string `pulumi:"serialNumber"`
	// WiFi MAC addresses of device.
	WifiMacAddresses []string `pulumi:"wifiMacAddresses"`
}

// DeviceTypeInput is an input type that accepts DeviceTypeArgs and DeviceTypeOutput values.
// You can construct a concrete instance of `DeviceTypeInput` via:
//
//          DeviceTypeArgs{...}
type DeviceTypeInput interface {
	pulumi.Input

	ToDeviceTypeOutput() DeviceTypeOutput
	ToDeviceTypeOutputWithContext(context.Context) DeviceTypeOutput
}

// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type DeviceTypeArgs struct {
	// Output only. Attributes specific to Android devices.
	AndroidSpecificAttributes AndroidAttributesPtrInput `pulumi:"androidSpecificAttributes"`
	// Asset tag of the device.
	AssetTag pulumi.StringPtrInput `pulumi:"assetTag"`
	// Output only. Baseband version of the device.
	BasebandVersion pulumi.StringPtrInput `pulumi:"basebandVersion"`
	// Output only. Device bootloader version. Example: 0.6.7.
	BootloaderVersion pulumi.StringPtrInput `pulumi:"bootloaderVersion"`
	// Output only. Device brand. Example: Samsung.
	Brand pulumi.StringPtrInput `pulumi:"brand"`
	// Output only. Build number of the device.
	BuildNumber pulumi.StringPtrInput `pulumi:"buildNumber"`
	// Output only. Represents whether the Device is compromised.
	CompromisedState pulumi.StringPtrInput `pulumi:"compromisedState"`
	// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Output only. Type of device.
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
	// Output only. Whether developer options is enabled on device.
	EnabledDeveloperOptions pulumi.BoolPtrInput `pulumi:"enabledDeveloperOptions"`
	// Output only. Whether USB debugging is enabled on device.
	EnabledUsbDebugging pulumi.BoolPtrInput `pulumi:"enabledUsbDebugging"`
	// Output only. Device encryption state.
	EncryptionState pulumi.StringPtrInput `pulumi:"encryptionState"`
	// Output only. IMEI number of device if GSM device; empty otherwise.
	Imei pulumi.StringPtrInput `pulumi:"imei"`
	// Output only. Kernel version of the device.
	KernelVersion pulumi.StringPtrInput `pulumi:"kernelVersion"`
	// Most recent time when device synced with this service.
	LastSyncTime pulumi.StringPtrInput `pulumi:"lastSyncTime"`
	// Output only. Management state of the device
	ManagementState pulumi.StringPtrInput `pulumi:"managementState"`
	// Output only. Device manufacturer. Example: Motorola.
	Manufacturer pulumi.StringPtrInput `pulumi:"manufacturer"`
	// Output only. MEID number of device if CDMA device; empty otherwise.
	Meid pulumi.StringPtrInput `pulumi:"meid"`
	// Output only. Model name of device. Example: Pixel 3.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Output only. Mobile or network operator of device, if available.
	NetworkOperator pulumi.StringPtrInput `pulumi:"networkOperator"`
	// Output only. OS version of the device. Example: Android 8.1.0.
	OsVersion pulumi.StringPtrInput `pulumi:"osVersion"`
	// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
	OtherAccounts pulumi.StringArrayInput `pulumi:"otherAccounts"`
	// Output only. Whether the device is owned by the company or an individual
	OwnerType pulumi.StringPtrInput `pulumi:"ownerType"`
	// Output only. OS release version. Example: 6.0.
	ReleaseVersion pulumi.StringPtrInput `pulumi:"releaseVersion"`
	// Output only. OS security patch update time on device.
	SecurityPatchTime pulumi.StringPtrInput `pulumi:"securityPatchTime"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// WiFi MAC addresses of device.
	WifiMacAddresses pulumi.StringArrayInput `pulumi:"wifiMacAddresses"`
}

func (DeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (i DeviceTypeArgs) ToDeviceTypeOutput() DeviceTypeOutput {
	return i.ToDeviceTypeOutputWithContext(context.Background())
}

func (i DeviceTypeArgs) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypeOutput)
}

func (i DeviceTypeArgs) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return i.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (i DeviceTypeArgs) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypeOutput).ToDeviceTypePtrOutputWithContext(ctx)
}

// DeviceTypePtrInput is an input type that accepts DeviceTypeArgs, DeviceTypePtr and DeviceTypePtrOutput values.
// You can construct a concrete instance of `DeviceTypePtrInput` via:
//
//          DeviceTypeArgs{...}
//
//  or:
//
//          nil
type DeviceTypePtrInput interface {
	pulumi.Input

	ToDeviceTypePtrOutput() DeviceTypePtrOutput
	ToDeviceTypePtrOutputWithContext(context.Context) DeviceTypePtrOutput
}

type deviceTypePtrType DeviceTypeArgs

func DeviceTypePtr(v *DeviceTypeArgs) DeviceTypePtrInput {
	return (*deviceTypePtrType)(v)
}

func (*deviceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceType)(nil)).Elem()
}

func (i *deviceTypePtrType) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return i.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (i *deviceTypePtrType) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypePtrOutput)
}

// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type DeviceTypeOutput struct{ *pulumi.OutputState }

func (DeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (o DeviceTypeOutput) ToDeviceTypeOutput() DeviceTypeOutput {
	return o
}

func (o DeviceTypeOutput) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return o
}

func (o DeviceTypeOutput) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return o.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (o DeviceTypeOutput) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return o.ApplyT(func(v DeviceType) *DeviceType {
		return &v
	}).(DeviceTypePtrOutput)
}

// Output only. Attributes specific to Android devices.
func (o DeviceTypeOutput) AndroidSpecificAttributes() AndroidAttributesPtrOutput {
	return o.ApplyT(func(v DeviceType) *AndroidAttributes { return v.AndroidSpecificAttributes }).(AndroidAttributesPtrOutput)
}

// Asset tag of the device.
func (o DeviceTypeOutput) AssetTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.AssetTag }).(pulumi.StringPtrOutput)
}

// Output only. Baseband version of the device.
func (o DeviceTypeOutput) BasebandVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.BasebandVersion }).(pulumi.StringPtrOutput)
}

// Output only. Device bootloader version. Example: 0.6.7.
func (o DeviceTypeOutput) BootloaderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.BootloaderVersion }).(pulumi.StringPtrOutput)
}

// Output only. Device brand. Example: Samsung.
func (o DeviceTypeOutput) Brand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Brand }).(pulumi.StringPtrOutput)
}

// Output only. Build number of the device.
func (o DeviceTypeOutput) BuildNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.BuildNumber }).(pulumi.StringPtrOutput)
}

// Output only. Represents whether the Device is compromised.
func (o DeviceTypeOutput) CompromisedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.CompromisedState }).(pulumi.StringPtrOutput)
}

// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
func (o DeviceTypeOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Output only. Type of device.
func (o DeviceTypeOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

// Output only. Whether developer options is enabled on device.
func (o DeviceTypeOutput) EnabledDeveloperOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceType) *bool { return v.EnabledDeveloperOptions }).(pulumi.BoolPtrOutput)
}

// Output only. Whether USB debugging is enabled on device.
func (o DeviceTypeOutput) EnabledUsbDebugging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceType) *bool { return v.EnabledUsbDebugging }).(pulumi.BoolPtrOutput)
}

// Output only. Device encryption state.
func (o DeviceTypeOutput) EncryptionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.EncryptionState }).(pulumi.StringPtrOutput)
}

// Output only. IMEI number of device if GSM device; empty otherwise.
func (o DeviceTypeOutput) Imei() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Imei }).(pulumi.StringPtrOutput)
}

// Output only. Kernel version of the device.
func (o DeviceTypeOutput) KernelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.KernelVersion }).(pulumi.StringPtrOutput)
}

// Most recent time when device synced with this service.
func (o DeviceTypeOutput) LastSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.LastSyncTime }).(pulumi.StringPtrOutput)
}

// Output only. Management state of the device
func (o DeviceTypeOutput) ManagementState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.ManagementState }).(pulumi.StringPtrOutput)
}

// Output only. Device manufacturer. Example: Motorola.
func (o DeviceTypeOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Manufacturer }).(pulumi.StringPtrOutput)
}

// Output only. MEID number of device if CDMA device; empty otherwise.
func (o DeviceTypeOutput) Meid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Meid }).(pulumi.StringPtrOutput)
}

// Output only. Model name of device. Example: Pixel 3.
func (o DeviceTypeOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
func (o DeviceTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Output only. Mobile or network operator of device, if available.
func (o DeviceTypeOutput) NetworkOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.NetworkOperator }).(pulumi.StringPtrOutput)
}

// Output only. OS version of the device. Example: Android 8.1.0.
func (o DeviceTypeOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
func (o DeviceTypeOutput) OtherAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceType) []string { return v.OtherAccounts }).(pulumi.StringArrayOutput)
}

// Output only. Whether the device is owned by the company or an individual
func (o DeviceTypeOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.OwnerType }).(pulumi.StringPtrOutput)
}

// Output only. OS release version. Example: 6.0.
func (o DeviceTypeOutput) ReleaseVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.ReleaseVersion }).(pulumi.StringPtrOutput)
}

// Output only. OS security patch update time on device.
func (o DeviceTypeOutput) SecurityPatchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.SecurityPatchTime }).(pulumi.StringPtrOutput)
}

// Serial Number of device. Example: HT82V1A01076.
func (o DeviceTypeOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// WiFi MAC addresses of device.
func (o DeviceTypeOutput) WifiMacAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceType) []string { return v.WifiMacAddresses }).(pulumi.StringArrayOutput)
}

type DeviceTypePtrOutput struct{ *pulumi.OutputState }

func (DeviceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceType)(nil)).Elem()
}

func (o DeviceTypePtrOutput) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return o
}

func (o DeviceTypePtrOutput) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return o
}

func (o DeviceTypePtrOutput) Elem() DeviceTypeOutput {
	return o.ApplyT(func(v *DeviceType) DeviceType { return *v }).(DeviceTypeOutput)
}

// Output only. Attributes specific to Android devices.
func (o DeviceTypePtrOutput) AndroidSpecificAttributes() AndroidAttributesPtrOutput {
	return o.ApplyT(func(v *DeviceType) *AndroidAttributes {
		if v == nil {
			return nil
		}
		return v.AndroidSpecificAttributes
	}).(AndroidAttributesPtrOutput)
}

// Asset tag of the device.
func (o DeviceTypePtrOutput) AssetTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.AssetTag
	}).(pulumi.StringPtrOutput)
}

// Output only. Baseband version of the device.
func (o DeviceTypePtrOutput) BasebandVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.BasebandVersion
	}).(pulumi.StringPtrOutput)
}

// Output only. Device bootloader version. Example: 0.6.7.
func (o DeviceTypePtrOutput) BootloaderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.BootloaderVersion
	}).(pulumi.StringPtrOutput)
}

// Output only. Device brand. Example: Samsung.
func (o DeviceTypePtrOutput) Brand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Brand
	}).(pulumi.StringPtrOutput)
}

// Output only. Build number of the device.
func (o DeviceTypePtrOutput) BuildNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.BuildNumber
	}).(pulumi.StringPtrOutput)
}

// Output only. Represents whether the Device is compromised.
func (o DeviceTypePtrOutput) CompromisedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.CompromisedState
	}).(pulumi.StringPtrOutput)
}

// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
func (o DeviceTypePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Output only. Type of device.
func (o DeviceTypePtrOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.DeviceType
	}).(pulumi.StringPtrOutput)
}

// Output only. Whether developer options is enabled on device.
func (o DeviceTypePtrOutput) EnabledDeveloperOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceType) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledDeveloperOptions
	}).(pulumi.BoolPtrOutput)
}

// Output only. Whether USB debugging is enabled on device.
func (o DeviceTypePtrOutput) EnabledUsbDebugging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceType) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledUsbDebugging
	}).(pulumi.BoolPtrOutput)
}

// Output only. Device encryption state.
func (o DeviceTypePtrOutput) EncryptionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionState
	}).(pulumi.StringPtrOutput)
}

// Output only. IMEI number of device if GSM device; empty otherwise.
func (o DeviceTypePtrOutput) Imei() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Imei
	}).(pulumi.StringPtrOutput)
}

// Output only. Kernel version of the device.
func (o DeviceTypePtrOutput) KernelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.KernelVersion
	}).(pulumi.StringPtrOutput)
}

// Most recent time when device synced with this service.
func (o DeviceTypePtrOutput) LastSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncTime
	}).(pulumi.StringPtrOutput)
}

// Output only. Management state of the device
func (o DeviceTypePtrOutput) ManagementState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.ManagementState
	}).(pulumi.StringPtrOutput)
}

// Output only. Device manufacturer. Example: Motorola.
func (o DeviceTypePtrOutput) Manufacturer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Manufacturer
	}).(pulumi.StringPtrOutput)
}

// Output only. MEID number of device if CDMA device; empty otherwise.
func (o DeviceTypePtrOutput) Meid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Meid
	}).(pulumi.StringPtrOutput)
}

// Output only. Model name of device. Example: Pixel 3.
func (o DeviceTypePtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
func (o DeviceTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Output only. Mobile or network operator of device, if available.
func (o DeviceTypePtrOutput) NetworkOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.NetworkOperator
	}).(pulumi.StringPtrOutput)
}

// Output only. OS version of the device. Example: Android 8.1.0.
func (o DeviceTypePtrOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.OsVersion
	}).(pulumi.StringPtrOutput)
}

// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
func (o DeviceTypePtrOutput) OtherAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceType) []string {
		if v == nil {
			return nil
		}
		return v.OtherAccounts
	}).(pulumi.StringArrayOutput)
}

// Output only. Whether the device is owned by the company or an individual
func (o DeviceTypePtrOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.OwnerType
	}).(pulumi.StringPtrOutput)
}

// Output only. OS release version. Example: 6.0.
func (o DeviceTypePtrOutput) ReleaseVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseVersion
	}).(pulumi.StringPtrOutput)
}

// Output only. OS security patch update time on device.
func (o DeviceTypePtrOutput) SecurityPatchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.SecurityPatchTime
	}).(pulumi.StringPtrOutput)
}

// Serial Number of device. Example: HT82V1A01076.
func (o DeviceTypePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// WiFi MAC addresses of device.
func (o DeviceTypePtrOutput) WifiMacAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceType) []string {
		if v == nil {
			return nil
		}
		return v.WifiMacAddresses
	}).(pulumi.StringArrayOutput)
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadata struct {
	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
	Queries []DynamicGroupQuery `pulumi:"queries"`
	// Output only. Status of the dynamic group.
	Status *DynamicGroupStatus `pulumi:"status"`
}

// DynamicGroupMetadataInput is an input type that accepts DynamicGroupMetadataArgs and DynamicGroupMetadataOutput values.
// You can construct a concrete instance of `DynamicGroupMetadataInput` via:
//
//          DynamicGroupMetadataArgs{...}
type DynamicGroupMetadataInput interface {
	pulumi.Input

	ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput
	ToDynamicGroupMetadataOutputWithContext(context.Context) DynamicGroupMetadataOutput
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataArgs struct {
	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
	Queries DynamicGroupQueryArrayInput `pulumi:"queries"`
	// Output only. Status of the dynamic group.
	Status DynamicGroupStatusPtrInput `pulumi:"status"`
}

func (DynamicGroupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupMetadata)(nil)).Elem()
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput {
	return i.ToDynamicGroupMetadataOutputWithContext(context.Background())
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataOutputWithContext(ctx context.Context) DynamicGroupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataOutput)
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return i.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataOutput).ToDynamicGroupMetadataPtrOutputWithContext(ctx)
}

// DynamicGroupMetadataPtrInput is an input type that accepts DynamicGroupMetadataArgs, DynamicGroupMetadataPtr and DynamicGroupMetadataPtrOutput values.
// You can construct a concrete instance of `DynamicGroupMetadataPtrInput` via:
//
//          DynamicGroupMetadataArgs{...}
//
//  or:
//
//          nil
type DynamicGroupMetadataPtrInput interface {
	pulumi.Input

	ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput
	ToDynamicGroupMetadataPtrOutputWithContext(context.Context) DynamicGroupMetadataPtrOutput
}

type dynamicGroupMetadataPtrType DynamicGroupMetadataArgs

func DynamicGroupMetadataPtr(v *DynamicGroupMetadataArgs) DynamicGroupMetadataPtrInput {
	return (*dynamicGroupMetadataPtrType)(v)
}

func (*dynamicGroupMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupMetadata)(nil)).Elem()
}

func (i *dynamicGroupMetadataPtrType) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return i.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (i *dynamicGroupMetadataPtrType) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataPtrOutput)
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataOutput struct{ *pulumi.OutputState }

func (DynamicGroupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupMetadata)(nil)).Elem()
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput {
	return o
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataOutputWithContext(ctx context.Context) DynamicGroupMetadataOutput {
	return o
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return o.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return o.ApplyT(func(v DynamicGroupMetadata) *DynamicGroupMetadata {
		return &v
	}).(DynamicGroupMetadataPtrOutput)
}

// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
func (o DynamicGroupMetadataOutput) Queries() DynamicGroupQueryArrayOutput {
	return o.ApplyT(func(v DynamicGroupMetadata) []DynamicGroupQuery { return v.Queries }).(DynamicGroupQueryArrayOutput)
}

// Output only. Status of the dynamic group.
func (o DynamicGroupMetadataOutput) Status() DynamicGroupStatusPtrOutput {
	return o.ApplyT(func(v DynamicGroupMetadata) *DynamicGroupStatus { return v.Status }).(DynamicGroupStatusPtrOutput)
}

type DynamicGroupMetadataPtrOutput struct{ *pulumi.OutputState }

func (DynamicGroupMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupMetadata)(nil)).Elem()
}

func (o DynamicGroupMetadataPtrOutput) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return o
}

func (o DynamicGroupMetadataPtrOutput) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return o
}

func (o DynamicGroupMetadataPtrOutput) Elem() DynamicGroupMetadataOutput {
	return o.ApplyT(func(v *DynamicGroupMetadata) DynamicGroupMetadata { return *v }).(DynamicGroupMetadataOutput)
}

// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
func (o DynamicGroupMetadataPtrOutput) Queries() DynamicGroupQueryArrayOutput {
	return o.ApplyT(func(v *DynamicGroupMetadata) []DynamicGroupQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(DynamicGroupQueryArrayOutput)
}

// Output only. Status of the dynamic group.
func (o DynamicGroupMetadataPtrOutput) Status() DynamicGroupStatusPtrOutput {
	return o.ApplyT(func(v *DynamicGroupMetadata) *DynamicGroupStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DynamicGroupStatusPtrOutput)
}

// Defines a query on a resource.
type DynamicGroupQuery struct {
	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`
	Query        *string `pulumi:"query"`
	ResourceType *string `pulumi:"resourceType"`
}

// DynamicGroupQueryInput is an input type that accepts DynamicGroupQueryArgs and DynamicGroupQueryOutput values.
// You can construct a concrete instance of `DynamicGroupQueryInput` via:
//
//          DynamicGroupQueryArgs{...}
type DynamicGroupQueryInput interface {
	pulumi.Input

	ToDynamicGroupQueryOutput() DynamicGroupQueryOutput
	ToDynamicGroupQueryOutputWithContext(context.Context) DynamicGroupQueryOutput
}

// Defines a query on a resource.
type DynamicGroupQueryArgs struct {
	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`
	Query        pulumi.StringPtrInput `pulumi:"query"`
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (DynamicGroupQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupQuery)(nil)).Elem()
}

func (i DynamicGroupQueryArgs) ToDynamicGroupQueryOutput() DynamicGroupQueryOutput {
	return i.ToDynamicGroupQueryOutputWithContext(context.Background())
}

func (i DynamicGroupQueryArgs) ToDynamicGroupQueryOutputWithContext(ctx context.Context) DynamicGroupQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupQueryOutput)
}

// DynamicGroupQueryArrayInput is an input type that accepts DynamicGroupQueryArray and DynamicGroupQueryArrayOutput values.
// You can construct a concrete instance of `DynamicGroupQueryArrayInput` via:
//
//          DynamicGroupQueryArray{ DynamicGroupQueryArgs{...} }
type DynamicGroupQueryArrayInput interface {
	pulumi.Input

	ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput
	ToDynamicGroupQueryArrayOutputWithContext(context.Context) DynamicGroupQueryArrayOutput
}

type DynamicGroupQueryArray []DynamicGroupQueryInput

func (DynamicGroupQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicGroupQuery)(nil)).Elem()
}

func (i DynamicGroupQueryArray) ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput {
	return i.ToDynamicGroupQueryArrayOutputWithContext(context.Background())
}

func (i DynamicGroupQueryArray) ToDynamicGroupQueryArrayOutputWithContext(ctx context.Context) DynamicGroupQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupQueryArrayOutput)
}

// Defines a query on a resource.
type DynamicGroupQueryOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupQuery)(nil)).Elem()
}

func (o DynamicGroupQueryOutput) ToDynamicGroupQueryOutput() DynamicGroupQueryOutput {
	return o
}

func (o DynamicGroupQueryOutput) ToDynamicGroupQueryOutputWithContext(ctx context.Context) DynamicGroupQueryOutput {
	return o
}

// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`
func (o DynamicGroupQueryOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicGroupQuery) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o DynamicGroupQueryOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicGroupQuery) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type DynamicGroupQueryArrayOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicGroupQuery)(nil)).Elem()
}

func (o DynamicGroupQueryArrayOutput) ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput {
	return o
}

func (o DynamicGroupQueryArrayOutput) ToDynamicGroupQueryArrayOutputWithContext(ctx context.Context) DynamicGroupQueryArrayOutput {
	return o
}

func (o DynamicGroupQueryArrayOutput) Index(i pulumi.IntInput) DynamicGroupQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicGroupQuery {
		return vs[0].([]DynamicGroupQuery)[vs[1].(int)]
	}).(DynamicGroupQueryOutput)
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatus struct {
	// Status of the dynamic group.
	Status *string `pulumi:"status"`
	// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
	StatusTime *string `pulumi:"statusTime"`
}

// DynamicGroupStatusInput is an input type that accepts DynamicGroupStatusArgs and DynamicGroupStatusOutput values.
// You can construct a concrete instance of `DynamicGroupStatusInput` via:
//
//          DynamicGroupStatusArgs{...}
type DynamicGroupStatusInput interface {
	pulumi.Input

	ToDynamicGroupStatusOutput() DynamicGroupStatusOutput
	ToDynamicGroupStatusOutputWithContext(context.Context) DynamicGroupStatusOutput
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatusArgs struct {
	// Status of the dynamic group.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
	StatusTime pulumi.StringPtrInput `pulumi:"statusTime"`
}

func (DynamicGroupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupStatus)(nil)).Elem()
}

func (i DynamicGroupStatusArgs) ToDynamicGroupStatusOutput() DynamicGroupStatusOutput {
	return i.ToDynamicGroupStatusOutputWithContext(context.Background())
}

func (i DynamicGroupStatusArgs) ToDynamicGroupStatusOutputWithContext(ctx context.Context) DynamicGroupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupStatusOutput)
}

func (i DynamicGroupStatusArgs) ToDynamicGroupStatusPtrOutput() DynamicGroupStatusPtrOutput {
	return i.ToDynamicGroupStatusPtrOutputWithContext(context.Background())
}

func (i DynamicGroupStatusArgs) ToDynamicGroupStatusPtrOutputWithContext(ctx context.Context) DynamicGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupStatusOutput).ToDynamicGroupStatusPtrOutputWithContext(ctx)
}

// DynamicGroupStatusPtrInput is an input type that accepts DynamicGroupStatusArgs, DynamicGroupStatusPtr and DynamicGroupStatusPtrOutput values.
// You can construct a concrete instance of `DynamicGroupStatusPtrInput` via:
//
//          DynamicGroupStatusArgs{...}
//
//  or:
//
//          nil
type DynamicGroupStatusPtrInput interface {
	pulumi.Input

	ToDynamicGroupStatusPtrOutput() DynamicGroupStatusPtrOutput
	ToDynamicGroupStatusPtrOutputWithContext(context.Context) DynamicGroupStatusPtrOutput
}

type dynamicGroupStatusPtrType DynamicGroupStatusArgs

func DynamicGroupStatusPtr(v *DynamicGroupStatusArgs) DynamicGroupStatusPtrInput {
	return (*dynamicGroupStatusPtrType)(v)
}

func (*dynamicGroupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupStatus)(nil)).Elem()
}

func (i *dynamicGroupStatusPtrType) ToDynamicGroupStatusPtrOutput() DynamicGroupStatusPtrOutput {
	return i.ToDynamicGroupStatusPtrOutputWithContext(context.Background())
}

func (i *dynamicGroupStatusPtrType) ToDynamicGroupStatusPtrOutputWithContext(ctx context.Context) DynamicGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupStatusPtrOutput)
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatusOutput struct{ *pulumi.OutputState }

func (DynamicGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupStatus)(nil)).Elem()
}

func (o DynamicGroupStatusOutput) ToDynamicGroupStatusOutput() DynamicGroupStatusOutput {
	return o
}

func (o DynamicGroupStatusOutput) ToDynamicGroupStatusOutputWithContext(ctx context.Context) DynamicGroupStatusOutput {
	return o
}

func (o DynamicGroupStatusOutput) ToDynamicGroupStatusPtrOutput() DynamicGroupStatusPtrOutput {
	return o.ToDynamicGroupStatusPtrOutputWithContext(context.Background())
}

func (o DynamicGroupStatusOutput) ToDynamicGroupStatusPtrOutputWithContext(ctx context.Context) DynamicGroupStatusPtrOutput {
	return o.ApplyT(func(v DynamicGroupStatus) *DynamicGroupStatus {
		return &v
	}).(DynamicGroupStatusPtrOutput)
}

// Status of the dynamic group.
func (o DynamicGroupStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicGroupStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
func (o DynamicGroupStatusOutput) StatusTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicGroupStatus) *string { return v.StatusTime }).(pulumi.StringPtrOutput)
}

type DynamicGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (DynamicGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupStatus)(nil)).Elem()
}

func (o DynamicGroupStatusPtrOutput) ToDynamicGroupStatusPtrOutput() DynamicGroupStatusPtrOutput {
	return o
}

func (o DynamicGroupStatusPtrOutput) ToDynamicGroupStatusPtrOutputWithContext(ctx context.Context) DynamicGroupStatusPtrOutput {
	return o
}

func (o DynamicGroupStatusPtrOutput) Elem() DynamicGroupStatusOutput {
	return o.ApplyT(func(v *DynamicGroupStatus) DynamicGroupStatus { return *v }).(DynamicGroupStatusOutput)
}

// Status of the dynamic group.
func (o DynamicGroupStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
func (o DynamicGroupStatusPtrOutput) StatusTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.StatusTime
	}).(pulumi.StringPtrOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKey struct {
	// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id *string `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
	Namespace *string `pulumi:"namespace"`
}

// EntityKeyInput is an input type that accepts EntityKeyArgs and EntityKeyOutput values.
// You can construct a concrete instance of `EntityKeyInput` via:
//
//          EntityKeyArgs{...}
type EntityKeyInput interface {
	pulumi.Input

	ToEntityKeyOutput() EntityKeyOutput
	ToEntityKeyOutputWithContext(context.Context) EntityKeyOutput
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyArgs struct {
	// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (EntityKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (i EntityKeyArgs) ToEntityKeyOutput() EntityKeyOutput {
	return i.ToEntityKeyOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput)
}

func (i EntityKeyArgs) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput).ToEntityKeyPtrOutputWithContext(ctx)
}

// EntityKeyPtrInput is an input type that accepts EntityKeyArgs, EntityKeyPtr and EntityKeyPtrOutput values.
// You can construct a concrete instance of `EntityKeyPtrInput` via:
//
//          EntityKeyArgs{...}
//
//  or:
//
//          nil
type EntityKeyPtrInput interface {
	pulumi.Input

	ToEntityKeyPtrOutput() EntityKeyPtrOutput
	ToEntityKeyPtrOutputWithContext(context.Context) EntityKeyPtrOutput
}

type entityKeyPtrType EntityKeyArgs

func EntityKeyPtr(v *EntityKeyArgs) EntityKeyPtrInput {
	return (*entityKeyPtrType)(v)
}

func (*entityKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyPtrOutput)
}

// EntityKeyArrayInput is an input type that accepts EntityKeyArray and EntityKeyArrayOutput values.
// You can construct a concrete instance of `EntityKeyArrayInput` via:
//
//          EntityKeyArray{ EntityKeyArgs{...} }
type EntityKeyArrayInput interface {
	pulumi.Input

	ToEntityKeyArrayOutput() EntityKeyArrayOutput
	ToEntityKeyArrayOutputWithContext(context.Context) EntityKeyArrayOutput
}

type EntityKeyArray []EntityKeyInput

func (EntityKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityKey)(nil)).Elem()
}

func (i EntityKeyArray) ToEntityKeyArrayOutput() EntityKeyArrayOutput {
	return i.ToEntityKeyArrayOutputWithContext(context.Background())
}

func (i EntityKeyArray) ToEntityKeyArrayOutputWithContext(ctx context.Context) EntityKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyArrayOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyOutput struct{ *pulumi.OutputState }

func (EntityKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (o EntityKeyOutput) ToEntityKeyOutput() EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (o EntityKeyOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o.ApplyT(func(v EntityKey) *EntityKey {
		return &v
	}).(EntityKeyPtrOutput)
}

// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
func (o EntityKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type EntityKeyPtrOutput struct{ *pulumi.OutputState }

func (EntityKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) Elem() EntityKeyOutput {
	return o.ApplyT(func(v *EntityKey) EntityKey { return *v }).(EntityKeyOutput)
}

// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
func (o EntityKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type EntityKeyArrayOutput struct{ *pulumi.OutputState }

func (EntityKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityKey)(nil)).Elem()
}

func (o EntityKeyArrayOutput) ToEntityKeyArrayOutput() EntityKeyArrayOutput {
	return o
}

func (o EntityKeyArrayOutput) ToEntityKeyArrayOutputWithContext(ctx context.Context) EntityKeyArrayOutput {
	return o
}

func (o EntityKeyArrayOutput) Index(i pulumi.IntInput) EntityKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityKey {
		return vs[0].([]EntityKey)[vs[1].(int)]
	}).(EntityKeyOutput)
}

// The `MembershipRole` expiry details.
type ExpiryDetail struct {
	// The time at which the `MembershipRole` will expire.
	ExpireTime *string `pulumi:"expireTime"`
}

// ExpiryDetailInput is an input type that accepts ExpiryDetailArgs and ExpiryDetailOutput values.
// You can construct a concrete instance of `ExpiryDetailInput` via:
//
//          ExpiryDetailArgs{...}
type ExpiryDetailInput interface {
	pulumi.Input

	ToExpiryDetailOutput() ExpiryDetailOutput
	ToExpiryDetailOutputWithContext(context.Context) ExpiryDetailOutput
}

// The `MembershipRole` expiry details.
type ExpiryDetailArgs struct {
	// The time at which the `MembershipRole` will expire.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
}

func (ExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpiryDetail)(nil)).Elem()
}

func (i ExpiryDetailArgs) ToExpiryDetailOutput() ExpiryDetailOutput {
	return i.ToExpiryDetailOutputWithContext(context.Background())
}

func (i ExpiryDetailArgs) ToExpiryDetailOutputWithContext(ctx context.Context) ExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailOutput)
}

func (i ExpiryDetailArgs) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return i.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (i ExpiryDetailArgs) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailOutput).ToExpiryDetailPtrOutputWithContext(ctx)
}

// ExpiryDetailPtrInput is an input type that accepts ExpiryDetailArgs, ExpiryDetailPtr and ExpiryDetailPtrOutput values.
// You can construct a concrete instance of `ExpiryDetailPtrInput` via:
//
//          ExpiryDetailArgs{...}
//
//  or:
//
//          nil
type ExpiryDetailPtrInput interface {
	pulumi.Input

	ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput
	ToExpiryDetailPtrOutputWithContext(context.Context) ExpiryDetailPtrOutput
}

type expiryDetailPtrType ExpiryDetailArgs

func ExpiryDetailPtr(v *ExpiryDetailArgs) ExpiryDetailPtrInput {
	return (*expiryDetailPtrType)(v)
}

func (*expiryDetailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpiryDetail)(nil)).Elem()
}

func (i *expiryDetailPtrType) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return i.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (i *expiryDetailPtrType) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailPtrOutput)
}

// The `MembershipRole` expiry details.
type ExpiryDetailOutput struct{ *pulumi.OutputState }

func (ExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpiryDetail)(nil)).Elem()
}

func (o ExpiryDetailOutput) ToExpiryDetailOutput() ExpiryDetailOutput {
	return o
}

func (o ExpiryDetailOutput) ToExpiryDetailOutputWithContext(ctx context.Context) ExpiryDetailOutput {
	return o
}

func (o ExpiryDetailOutput) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return o.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (o ExpiryDetailOutput) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return o.ApplyT(func(v ExpiryDetail) *ExpiryDetail {
		return &v
	}).(ExpiryDetailPtrOutput)
}

// The time at which the `MembershipRole` will expire.
func (o ExpiryDetailOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpiryDetail) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

type ExpiryDetailPtrOutput struct{ *pulumi.OutputState }

func (ExpiryDetailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpiryDetail)(nil)).Elem()
}

func (o ExpiryDetailPtrOutput) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return o
}

func (o ExpiryDetailPtrOutput) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return o
}

func (o ExpiryDetailPtrOutput) Elem() ExpiryDetailOutput {
	return o.ApplyT(func(v *ExpiryDetail) ExpiryDetail { return *v }).(ExpiryDetailOutput)
}

// The time at which the `MembershipRole` will expire.
func (o ExpiryDetailPtrOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpiryDetail) *string {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.StringPtrOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRole struct {
	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail *ExpiryDetail `pulumi:"expiryDetail"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name *string `pulumi:"name"`
}

// MembershipRoleInput is an input type that accepts MembershipRoleArgs and MembershipRoleOutput values.
// You can construct a concrete instance of `MembershipRoleInput` via:
//
//          MembershipRoleArgs{...}
type MembershipRoleInput interface {
	pulumi.Input

	ToMembershipRoleOutput() MembershipRoleOutput
	ToMembershipRoleOutputWithContext(context.Context) MembershipRoleOutput
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleArgs struct {
	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail ExpiryDetailPtrInput `pulumi:"expiryDetail"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MembershipRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArgs) ToMembershipRoleOutput() MembershipRoleOutput {
	return i.ToMembershipRoleOutputWithContext(context.Background())
}

func (i MembershipRoleArgs) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleOutput)
}

// MembershipRoleArrayInput is an input type that accepts MembershipRoleArray and MembershipRoleArrayOutput values.
// You can construct a concrete instance of `MembershipRoleArrayInput` via:
//
//          MembershipRoleArray{ MembershipRoleArgs{...} }
type MembershipRoleArrayInput interface {
	pulumi.Input

	ToMembershipRoleArrayOutput() MembershipRoleArrayOutput
	ToMembershipRoleArrayOutputWithContext(context.Context) MembershipRoleArrayOutput
}

type MembershipRoleArray []MembershipRoleInput

func (MembershipRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return i.ToMembershipRoleArrayOutputWithContext(context.Background())
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleArrayOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleOutput struct{ *pulumi.OutputState }

func (MembershipRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (o MembershipRoleOutput) ToMembershipRoleOutput() MembershipRoleOutput {
	return o
}

func (o MembershipRoleOutput) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return o
}

// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
func (o MembershipRoleOutput) ExpiryDetail() ExpiryDetailPtrOutput {
	return o.ApplyT(func(v MembershipRole) *ExpiryDetail { return v.ExpiryDetail }).(ExpiryDetailPtrOutput)
}

// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
func (o MembershipRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MembershipRoleArrayOutput struct{ *pulumi.OutputState }

func (MembershipRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) Index(i pulumi.IntInput) MembershipRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipRole {
		return vs[0].([]MembershipRole)[vs[1].(int)]
	}).(MembershipRoleOutput)
}

func init() {
	pulumi.RegisterOutputType(AndroidAttributesOutput{})
	pulumi.RegisterOutputType(AndroidAttributesPtrOutput{})
	pulumi.RegisterOutputType(DeviceTypeOutput{})
	pulumi.RegisterOutputType(DeviceTypePtrOutput{})
	pulumi.RegisterOutputType(DynamicGroupMetadataOutput{})
	pulumi.RegisterOutputType(DynamicGroupMetadataPtrOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryArrayOutput{})
	pulumi.RegisterOutputType(DynamicGroupStatusOutput{})
	pulumi.RegisterOutputType(DynamicGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(EntityKeyOutput{})
	pulumi.RegisterOutputType(EntityKeyPtrOutput{})
	pulumi.RegisterOutputType(EntityKeyArrayOutput{})
	pulumi.RegisterOutputType(ExpiryDetailOutput{})
	pulumi.RegisterOutputType(ExpiryDetailPtrOutput{})
	pulumi.RegisterOutputType(MembershipRoleOutput{})
	pulumi.RegisterOutputType(MembershipRoleArrayOutput{})
}
