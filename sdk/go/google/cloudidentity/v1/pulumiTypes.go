// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKey struct {
	// The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id *string `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
	Namespace *string `pulumi:"namespace"`
}

// EntityKeyInput is an input type that accepts EntityKeyArgs and EntityKeyOutput values.
// You can construct a concrete instance of `EntityKeyInput` via:
//
//          EntityKeyArgs{...}
type EntityKeyInput interface {
	pulumi.Input

	ToEntityKeyOutput() EntityKeyOutput
	ToEntityKeyOutputWithContext(context.Context) EntityKeyOutput
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyArgs struct {
	// The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (EntityKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (i EntityKeyArgs) ToEntityKeyOutput() EntityKeyOutput {
	return i.ToEntityKeyOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput)
}

func (i EntityKeyArgs) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput).ToEntityKeyPtrOutputWithContext(ctx)
}

// EntityKeyPtrInput is an input type that accepts EntityKeyArgs, EntityKeyPtr and EntityKeyPtrOutput values.
// You can construct a concrete instance of `EntityKeyPtrInput` via:
//
//          EntityKeyArgs{...}
//
//  or:
//
//          nil
type EntityKeyPtrInput interface {
	pulumi.Input

	ToEntityKeyPtrOutput() EntityKeyPtrOutput
	ToEntityKeyPtrOutputWithContext(context.Context) EntityKeyPtrOutput
}

type entityKeyPtrType EntityKeyArgs

func EntityKeyPtr(v *EntityKeyArgs) EntityKeyPtrInput {
	return (*entityKeyPtrType)(v)
}

func (*entityKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyPtrOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyOutput struct{ *pulumi.OutputState }

func (EntityKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (o EntityKeyOutput) ToEntityKeyOutput() EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (o EntityKeyOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o.ApplyT(func(v EntityKey) *EntityKey {
		return &v
	}).(EntityKeyPtrOutput)
}

// The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
func (o EntityKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type EntityKeyPtrOutput struct{ *pulumi.OutputState }

func (EntityKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) Elem() EntityKeyOutput {
	return o.ApplyT(func(v *EntityKey) EntityKey { return *v }).(EntityKeyOutput)
}

// The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}.
func (o EntityKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Resource representing the Android specific attributes of a Device.
type GoogleAppsCloudidentityDevicesV1AndroidAttributes struct {
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources *bool `pulumi:"enabledUnknownSources"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount *bool `pulumi:"ownerProfileAccount"`
	// Ownership privileges on device.
	OwnershipPrivilege *string `pulumi:"ownershipPrivilege"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile *bool `pulumi:"supportsWorkProfile"`
}

// GoogleAppsCloudidentityDevicesV1AndroidAttributesInput is an input type that accepts GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs and GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput values.
// You can construct a concrete instance of `GoogleAppsCloudidentityDevicesV1AndroidAttributesInput` via:
//
//          GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs{...}
type GoogleAppsCloudidentityDevicesV1AndroidAttributesInput interface {
	pulumi.Input

	ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput
	ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutputWithContext(context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput
}

// Resource representing the Android specific attributes of a Device.
type GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs struct {
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources pulumi.BoolPtrInput `pulumi:"enabledUnknownSources"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount pulumi.BoolPtrInput `pulumi:"ownerProfileAccount"`
	// Ownership privileges on device.
	OwnershipPrivilege pulumi.StringPtrInput `pulumi:"ownershipPrivilege"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile pulumi.BoolPtrInput `pulumi:"supportsWorkProfile"`
}

func (GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAppsCloudidentityDevicesV1AndroidAttributes)(nil)).Elem()
}

func (i GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput {
	return i.ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutputWithContext(context.Background())
}

func (i GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput)
}

func (i GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return i.ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(context.Background())
}

func (i GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput).ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(ctx)
}

// GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrInput is an input type that accepts GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs, GoogleAppsCloudidentityDevicesV1AndroidAttributesPtr and GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput values.
// You can construct a concrete instance of `GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrInput` via:
//
//          GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs{...}
//
//  or:
//
//          nil
type GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrInput interface {
	pulumi.Input

	ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput
	ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput
}

type googleAppsCloudidentityDevicesV1AndroidAttributesPtrType GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs

func GoogleAppsCloudidentityDevicesV1AndroidAttributesPtr(v *GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrInput {
	return (*googleAppsCloudidentityDevicesV1AndroidAttributesPtrType)(v)
}

func (*googleAppsCloudidentityDevicesV1AndroidAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAppsCloudidentityDevicesV1AndroidAttributes)(nil)).Elem()
}

func (i *googleAppsCloudidentityDevicesV1AndroidAttributesPtrType) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return i.ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(context.Background())
}

func (i *googleAppsCloudidentityDevicesV1AndroidAttributesPtrType) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput)
}

// Resource representing the Android specific attributes of a Device.
type GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput struct{ *pulumi.OutputState }

func (GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAppsCloudidentityDevicesV1AndroidAttributes)(nil)).Elem()
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput {
	return o
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput {
	return o
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return o.ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(context.Background())
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return o.ApplyT(func(v GoogleAppsCloudidentityDevicesV1AndroidAttributes) *GoogleAppsCloudidentityDevicesV1AndroidAttributes {
		return &v
	}).(GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput)
}

// Whether applications from unknown sources can be installed on device.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) EnabledUnknownSources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool { return v.EnabledUnknownSources }).(pulumi.BoolPtrOutput)
}

// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) OwnerProfileAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool { return v.OwnerProfileAccount }).(pulumi.BoolPtrOutput)
}

// Ownership privileges on device.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) OwnershipPrivilege() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleAppsCloudidentityDevicesV1AndroidAttributes) *string { return v.OwnershipPrivilege }).(pulumi.StringPtrOutput)
}

// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput) SupportsWorkProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool { return v.SupportsWorkProfile }).(pulumi.BoolPtrOutput)
}

type GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput struct{ *pulumi.OutputState }

func (GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAppsCloudidentityDevicesV1AndroidAttributes)(nil)).Elem()
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput() GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return o
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) ToGoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutputWithContext(ctx context.Context) GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput {
	return o
}

func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) Elem() GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput {
	return o.ApplyT(func(v *GoogleAppsCloudidentityDevicesV1AndroidAttributes) GoogleAppsCloudidentityDevicesV1AndroidAttributes {
		return *v
	}).(GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput)
}

// Whether applications from unknown sources can be installed on device.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) EnabledUnknownSources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledUnknownSources
	}).(pulumi.BoolPtrOutput)
}

// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) OwnerProfileAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.OwnerProfileAccount
	}).(pulumi.BoolPtrOutput)
}

// Ownership privileges on device.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) OwnershipPrivilege() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAppsCloudidentityDevicesV1AndroidAttributes) *string {
		if v == nil {
			return nil
		}
		return v.OwnershipPrivilege
	}).(pulumi.StringPtrOutput)
}

// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
func (o GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput) SupportsWorkProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleAppsCloudidentityDevicesV1AndroidAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.SupportsWorkProfile
	}).(pulumi.BoolPtrOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRole struct {
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name *string `pulumi:"name"`
}

// MembershipRoleInput is an input type that accepts MembershipRoleArgs and MembershipRoleOutput values.
// You can construct a concrete instance of `MembershipRoleInput` via:
//
//          MembershipRoleArgs{...}
type MembershipRoleInput interface {
	pulumi.Input

	ToMembershipRoleOutput() MembershipRoleOutput
	ToMembershipRoleOutputWithContext(context.Context) MembershipRoleOutput
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleArgs struct {
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MembershipRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArgs) ToMembershipRoleOutput() MembershipRoleOutput {
	return i.ToMembershipRoleOutputWithContext(context.Background())
}

func (i MembershipRoleArgs) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleOutput)
}

// MembershipRoleArrayInput is an input type that accepts MembershipRoleArray and MembershipRoleArrayOutput values.
// You can construct a concrete instance of `MembershipRoleArrayInput` via:
//
//          MembershipRoleArray{ MembershipRoleArgs{...} }
type MembershipRoleArrayInput interface {
	pulumi.Input

	ToMembershipRoleArrayOutput() MembershipRoleArrayOutput
	ToMembershipRoleArrayOutputWithContext(context.Context) MembershipRoleArrayOutput
}

type MembershipRoleArray []MembershipRoleInput

func (MembershipRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return i.ToMembershipRoleArrayOutputWithContext(context.Background())
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleArrayOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleOutput struct{ *pulumi.OutputState }

func (MembershipRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (o MembershipRoleOutput) ToMembershipRoleOutput() MembershipRoleOutput {
	return o
}

func (o MembershipRoleOutput) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return o
}

// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
func (o MembershipRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MembershipRoleArrayOutput struct{ *pulumi.OutputState }

func (MembershipRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) Index(i pulumi.IntInput) MembershipRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipRole {
		return vs[0].([]MembershipRole)[vs[1].(int)]
	}).(MembershipRoleOutput)
}

func init() {
	pulumi.RegisterOutputType(EntityKeyOutput{})
	pulumi.RegisterOutputType(EntityKeyPtrOutput{})
	pulumi.RegisterOutputType(GoogleAppsCloudidentityDevicesV1AndroidAttributesOutput{})
	pulumi.RegisterOutputType(GoogleAppsCloudidentityDevicesV1AndroidAttributesPtrOutput{})
	pulumi.RegisterOutputType(MembershipRoleOutput{})
	pulumi.RegisterOutputType(MembershipRoleArrayOutput{})
}
