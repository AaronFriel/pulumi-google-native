// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Dialogflow.V3
{
    /// <summary>
    /// Creates an Experiment in the specified Environment.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3Experiment")]
    public partial class GoogleCloudDialogflowCxV3Experiment : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a GoogleCloudDialogflowCxV3Experiment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GoogleCloudDialogflowCxV3Experiment(string name, GoogleCloudDialogflowCxV3ExperimentArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3Experiment", name, args ?? new GoogleCloudDialogflowCxV3ExperimentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GoogleCloudDialogflowCxV3Experiment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:dialogflow/v3:GoogleCloudDialogflowCxV3Experiment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GoogleCloudDialogflowCxV3Experiment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GoogleCloudDialogflowCxV3Experiment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GoogleCloudDialogflowCxV3Experiment(name, id, options);
        }
    }

    public sealed class GoogleCloudDialogflowCxV3ExperimentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time of this experiment.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The definition of the experiment.
        /// </summary>
        [Input("definition")]
        public Input<Inputs.GoogleCloudDialogflowCxV3ExperimentDefinitionArgs>? Definition { get; set; }

        /// <summary>
        /// The human-readable description of the experiment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// End time of this experiment.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
        /// </summary>
        [Input("experimentLength")]
        public Input<string>? ExperimentLength { get; set; }

        /// <summary>
        /// Last update time of this experiment.
        /// </summary>
        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        /// <summary>
        /// The name of the experiment. Format: projects//locations//agents//environments//experiments/..
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Inference result of the experiment.
        /// </summary>
        [Input("result")]
        public Input<Inputs.GoogleCloudDialogflowCxV3ExperimentResultArgs>? Result { get; set; }

        /// <summary>
        /// Start time of this experiment.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The current state of the experiment. Transition triggered by Expriments.StartExperiment: PENDING-&gt;RUNNING. Transition triggered by Expriments.CancelExperiment: PENDING-&gt;CANCELLED or RUNNING-&gt;CANCELLED.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("variantsHistory")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3VariantsHistoryArgs>? _variantsHistory;

        /// <summary>
        /// The history of updates to the experiment variants.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3VariantsHistoryArgs> VariantsHistory
        {
            get => _variantsHistory ?? (_variantsHistory = new InputList<Inputs.GoogleCloudDialogflowCxV3VariantsHistoryArgs>());
            set => _variantsHistory = value;
        }

        public GoogleCloudDialogflowCxV3ExperimentArgs()
        {
        }
    }
}
