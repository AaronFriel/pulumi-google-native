// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Datacatalog.V1beta1
{
    /// <summary>
    /// Creates a policy tag in the specified taxonomy.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1PolicyTag")]
    public partial class GoogleCloudDatacatalogV1beta1PolicyTag : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a GoogleCloudDatacatalogV1beta1PolicyTag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GoogleCloudDatacatalogV1beta1PolicyTag(string name, GoogleCloudDatacatalogV1beta1PolicyTagArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1PolicyTag", name, args ?? new GoogleCloudDatacatalogV1beta1PolicyTagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GoogleCloudDatacatalogV1beta1PolicyTag(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:datacatalog/v1beta1:GoogleCloudDatacatalogV1beta1PolicyTag", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GoogleCloudDatacatalogV1beta1PolicyTag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GoogleCloudDatacatalogV1beta1PolicyTag Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GoogleCloudDatacatalogV1beta1PolicyTag(name, id, options);
        }
    }

    public sealed class GoogleCloudDatacatalogV1beta1PolicyTagArgs : Pulumi.ResourceArgs
    {
        [Input("childPolicyTags")]
        private InputList<string>? _childPolicyTags;

        /// <summary>
        /// Output only. Resource names of child policy tags of this policy tag.
        /// </summary>
        public InputList<string> ChildPolicyTags
        {
            get => _childPolicyTags ?? (_childPolicyTags = new InputList<string>());
            set => _childPolicyTags = value;
        }

        /// <summary>
        /// Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Output only. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. Resource name of the taxonomy that the policy tag will belong to.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
        /// </summary>
        [Input("parentPolicyTag")]
        public Input<string>? ParentPolicyTag { get; set; }

        public GoogleCloudDatacatalogV1beta1PolicyTagArgs()
        {
        }
    }
}
