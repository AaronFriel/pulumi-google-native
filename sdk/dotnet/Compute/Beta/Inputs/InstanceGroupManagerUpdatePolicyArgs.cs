// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Compute.Beta.Inputs
{

    public sealed class InstanceGroupManagerUpdatePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The  instance redistribution policy for regional managed instance groups. Valid values are:  
        /// - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. 
        /// - NONE: For non-autoscaled groups, proactive redistribution is disabled.
        /// </summary>
        [Input("instanceRedistributionType")]
        public Input<string>? InstanceRedistributionType { get; set; }

        /// <summary>
        /// The maximum number of instances that can be created above the specified targetSize during the update process. By default, a fixed value of 1 is used. This value can be either a fixed number or a percentage if the instance group has 10 or more instances. If you set a percentage, the number of instances will be rounded up if necessary.
        /// 
        /// At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxSurge.
        /// </summary>
        [Input("maxSurge")]
        public Input<Inputs.FixedOrPercentArgs>? MaxSurge { get; set; }

        /// <summary>
        /// The maximum number of instances that can be unavailable during the update process. An instance is considered available if all of the following conditions are satisfied:
        /// 
        ///  
        /// - The instance's status is RUNNING. 
        /// - If there is a health check on the instance group, the instance's liveness health check result must be HEALTHY at least once. If there is no health check on the group, then the instance only needs to have a status of RUNNING to be considered available.  By default, a fixed value of 1 is used. This value can be either a fixed number or a percentage if the instance group has 10 or more instances. If you set a percentage, the number of instances will be rounded up if necessary.
        /// 
        /// At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxUnavailable.
        /// </summary>
        [Input("maxUnavailable")]
        public Input<Inputs.FixedOrPercentArgs>? MaxUnavailable { get; set; }

        /// <summary>
        /// Minimum number of seconds to wait for after a newly created instance becomes available. This value must be from range [0, 3600].
        /// </summary>
        [Input("minReadySec")]
        public Input<int>? MinReadySec { get; set; }

        /// <summary>
        /// Minimal action to be taken on an instance. You can specify either RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a RESTART, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.
        /// </summary>
        [Input("minimalAction")]
        public Input<string>? MinimalAction { get; set; }

        /// <summary>
        /// What action should be used to replace instances. See minimal_action.REPLACE
        /// </summary>
        [Input("replacementMethod")]
        public Input<string>? ReplacementMethod { get; set; }

        /// <summary>
        /// The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public InstanceGroupManagerUpdatePolicyArgs()
        {
        }
    }
}
