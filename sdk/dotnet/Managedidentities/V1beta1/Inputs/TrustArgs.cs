// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Managedidentities.V1beta1.Inputs
{

    /// <summary>
    /// Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain.
    /// </summary>
    public sealed class TrustArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. The time the instance was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Output only. The last heartbeat time when the trust was known to be connected.
        /// </summary>
        [Input("lastTrustHeartbeatTime")]
        public Input<string>? LastTrustHeartbeatTime { get; set; }

        /// <summary>
        /// The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources.
        /// </summary>
        [Input("selectiveAuthentication")]
        public Input<bool>? SelectiveAuthentication { get; set; }

        /// <summary>
        /// Output only. The current state of the trust.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. Additional information about the current state of the trust, if available.
        /// </summary>
        [Input("stateDescription")]
        public Input<string>? StateDescription { get; set; }

        [Input("targetDnsIpAddresses")]
        private InputList<string>? _targetDnsIpAddresses;

        /// <summary>
        /// The target DNS server IP addresses which can resolve the remote domain involved in the trust.
        /// </summary>
        public InputList<string> TargetDnsIpAddresses
        {
            get => _targetDnsIpAddresses ?? (_targetDnsIpAddresses = new InputList<string>());
            set => _targetDnsIpAddresses = value;
        }

        /// <summary>
        /// The fully qualified target domain name which will be in trust with the current domain.
        /// </summary>
        [Input("targetDomainName")]
        public Input<string>? TargetDomainName { get; set; }

        /// <summary>
        /// The trust direction, which decides if the current domain is trusted, trusting, or both.
        /// </summary>
        [Input("trustDirection")]
        public Input<string>? TrustDirection { get; set; }

        /// <summary>
        /// Input only. The trust secret used for the handshake with the target domain. It will not be stored.
        /// </summary>
        [Input("trustHandshakeSecret")]
        public Input<string>? TrustHandshakeSecret { get; set; }

        /// <summary>
        /// The type of trust represented by the trust resource.
        /// </summary>
        [Input("trustType")]
        public Input<string>? TrustType { get; set; }

        /// <summary>
        /// Output only. The last update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public TrustArgs()
        {
        }
    }
}
