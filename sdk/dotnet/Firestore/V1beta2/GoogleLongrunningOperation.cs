// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Firestore.V1beta2
{
    /// <summary>
    /// Creates a composite index. This returns a google.longrunning.Operation which may be used to track the status of the creation. The metadata for the operation will be the type IndexOperationMetadata.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:firestore/v1beta2:GoogleLongrunningOperation")]
    public partial class GoogleLongrunningOperation : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a GoogleLongrunningOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GoogleLongrunningOperation(string name, GoogleLongrunningOperationArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:firestore/v1beta2:GoogleLongrunningOperation", name, args ?? new GoogleLongrunningOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GoogleLongrunningOperation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:firestore/v1beta2:GoogleLongrunningOperation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GoogleLongrunningOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GoogleLongrunningOperation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GoogleLongrunningOperation(name, id, options);
        }
    }

    public sealed class GoogleLongrunningOperationArgs : Pulumi.ResourceArgs
    {
        [Input("fields")]
        private InputList<Inputs.GoogleFirestoreAdminV1beta2IndexFieldArgs>? _fields;

        /// <summary>
        /// The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.
        /// </summary>
        public InputList<Inputs.GoogleFirestoreAdminV1beta2IndexFieldArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.GoogleFirestoreAdminV1beta2IndexFieldArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A parent name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
        /// </summary>
        [Input("queryScope")]
        public Input<string>? QueryScope { get; set; }

        /// <summary>
        /// Output only. The serving state of the index.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public GoogleLongrunningOperationArgs()
        {
        }
    }
}
