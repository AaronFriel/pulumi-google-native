// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Dataflow.V1b3.Inputs
{

    /// <summary>
    /// ///////////////////////////////////////////////////////////////////////////// //// Template Catalog is used to organize user TemplateVersions. //// TemplateVersions that have the same project_id and display_name are //// belong to the same Template. //// Templates with the same project_id belong to the same Project. //// TemplateVersion may have labels and multiple labels are allowed. //// Duplicated labels in the same `TemplateVersion` are not allowed. //// TemplateVersion may have tags and multiple tags are allowed. Duplicated //// tags in the same `Template` are not allowed!
    /// </summary>
    public sealed class TemplateVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Job graph and metadata if it is a legacy Template. Container image path and metadata if it is flex Template.
        /// </summary>
        [Input("artifact")]
        public Input<Inputs.ArtifactArgs>? Artifact { get; set; }

        /// <summary>
        /// Creation time of this TemplateVersion.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Template description from the user.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A customized name for Template. Multiple TemplateVersions per Template.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for the Template Version. Labels can be duplicate within Template.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// A unique project_id. Multiple Templates per Project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Alias for version_id, helps locate a TemplateVersion.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Either LEGACY or FLEX. This should match with the type of artifact.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// An auto generated version_id for TemplateVersion.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public TemplateVersionArgs()
        {
        }
    }
}
