// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Networkconnectivity.V1alpha1
{
    /// <summary>
    /// Creates a new Spoke in a given project and location.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:networkconnectivity/v1alpha1:GoogleLongrunningOperation")]
    public partial class GoogleLongrunningOperation : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a GoogleLongrunningOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GoogleLongrunningOperation(string name, GoogleLongrunningOperationArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:networkconnectivity/v1alpha1:GoogleLongrunningOperation", name, args ?? new GoogleLongrunningOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GoogleLongrunningOperation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:networkconnectivity/v1alpha1:GoogleLongrunningOperation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GoogleLongrunningOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GoogleLongrunningOperation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GoogleLongrunningOperation(name, id, options);
        }
    }

    public sealed class GoogleLongrunningOperationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the Spoke was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Short description of the spoke resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The resource URL of the hub resource that the spoke is attached to
        /// </summary>
        [Input("hub")]
        public Input<string>? Hub { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// User-defined labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("linkedInterconnectAttachments")]
        private InputList<string>? _linkedInterconnectAttachments;

        /// <summary>
        /// The URIs of linked interconnect attachment resources
        /// </summary>
        public InputList<string> LinkedInterconnectAttachments
        {
            get => _linkedInterconnectAttachments ?? (_linkedInterconnectAttachments = new InputList<string>());
            set => _linkedInterconnectAttachments = value;
        }

        [Input("linkedRouterApplianceInstances")]
        private InputList<Inputs.RouterApplianceInstanceArgs>? _linkedRouterApplianceInstances;

        /// <summary>
        /// The URIs of linked Router appliance resources
        /// </summary>
        public InputList<Inputs.RouterApplianceInstanceArgs> LinkedRouterApplianceInstances
        {
            get => _linkedRouterApplianceInstances ?? (_linkedRouterApplianceInstances = new InputList<Inputs.RouterApplianceInstanceArgs>());
            set => _linkedRouterApplianceInstances = value;
        }

        [Input("linkedVpnTunnels")]
        private InputList<string>? _linkedVpnTunnels;

        /// <summary>
        /// The URIs of linked VPN tunnel resources
        /// </summary>
        public InputList<string> LinkedVpnTunnels
        {
            get => _linkedVpnTunnels ?? (_linkedVpnTunnels = new InputList<string>());
            set => _linkedVpnTunnels = value;
        }

        /// <summary>
        /// Immutable. The name of a Spoke resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. The parent's resource name of the Spoke.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Optional. Unique id for the Spoke to create.
        /// </summary>
        [Input("spokeId")]
        public Input<string>? SpokeId { get; set; }

        /// <summary>
        /// Output only. The current lifecycle state of this Hub.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
        /// </summary>
        [Input("uniqueId")]
        public Input<string>? UniqueId { get; set; }

        /// <summary>
        /// The time when the Spoke was updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public GoogleLongrunningOperationArgs()
        {
        }
    }
}
