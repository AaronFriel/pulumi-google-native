// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Run.V1alpha1.Inputs
{

    /// <summary>
    /// The desired state of the CloudStorageSource.
    /// </summary>
    public sealed class CloudStorageSourceSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bucket to subscribe to.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.
        /// </summary>
        [Input("ceOverrides")]
        public Input<Inputs.CloudEventOverridesArgs>? CeOverrides { get; set; }

        [Input("eventTypes")]
        private InputList<string>? _eventTypes;

        /// <summary>
        /// EventTypes to subscribe to. If unspecified, then subscribe to all events.
        /// </summary>
        public InputList<string> EventTypes
        {
            get => _eventTypes ?? (_eventTypes = new InputList<string>());
            set => _eventTypes = value;
        }

        /// <summary>
        /// ObjectNamePrefix limits the notifications to objects with this prefix.
        /// </summary>
        [Input("objectNamePrefix")]
        public Input<string>? ObjectNamePrefix { get; set; }

        /// <summary>
        /// PayloadFormat specifies the contents of the message payload. See https://cloud.google.com/storage/docs/pubsub-notifications#payload.
        /// </summary>
        [Input("payloadFormat")]
        public Input<string>? PayloadFormat { get; set; }

        /// <summary>
        /// Project is the ID of the Google Cloud Project that the PubSub Topic exists in. If omitted, defaults to same as the cluster.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// PubSubSecret is the credential to use to create Topic / PullSubscription resources. If omitted, uses Secret.
        /// </summary>
        [Input("pubsubSecret")]
        public Input<Inputs.SecretKeySelectorArgs>? PubsubSecret { get; set; }

        /// <summary>
        /// Secret is the credential to use to create the Scheduler Job. If not specified, defaults to: Name: google-cloud-key Key: key.json
        /// </summary>
        [Input("secret")]
        public Input<Inputs.SecretKeySelectorArgs>? Secret { get; set; }

        /// <summary>
        /// ServiceAccountName holds the name of the Kubernetes service account as which the underlying K8s resources should be run. If unspecified this will default to the "default" service account for the namespace in which the GCS exists.
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        /// <summary>
        /// Sink is a reference to an object that will resolve to a domain name or a URI directly to use as the sink.
        /// </summary>
        [Input("sink")]
        public Input<Inputs.DestinationArgs>? Sink { get; set; }

        public CloudStorageSourceSpecArgs()
        {
        }
    }
}
