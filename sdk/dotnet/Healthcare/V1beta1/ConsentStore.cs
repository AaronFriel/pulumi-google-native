// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Healthcare.V1beta1
{
    /// <summary>
    /// Creates a new Consent store in the parent dataset. Attempting to create a consent store with the same ID as an existing store fails with an ALREADY_EXISTS error.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:healthcare/v1beta1:ConsentStore")]
    public partial class ConsentStore : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a ConsentStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConsentStore(string name, ConsentStoreArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1beta1:ConsentStore", name, args ?? new ConsentStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConsentStore(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1beta1:ConsentStore", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConsentStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConsentStore Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConsentStore(name, id, options);
        }
    }

    public sealed class ConsentStoreArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the consent store to create. The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
        /// </summary>
        [Input("consentStoreId")]
        public Input<string>? ConsentStoreId { get; set; }

        /// <summary>
        /// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
        /// </summary>
        [Input("defaultConsentTtl")]
        public Input<string>? DefaultConsentTtl { get; set; }

        /// <summary>
        /// If true, UpdateConsent creates the consent if it does not already exist.
        /// </summary>
        [Input("enableConsentCreateOnUpdate")]
        public Input<bool>? EnableConsentCreateOnUpdate { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource name of the Consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. The name of the dataset this Consent store belongs to.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        public ConsentStoreArgs()
        {
        }
    }
}
