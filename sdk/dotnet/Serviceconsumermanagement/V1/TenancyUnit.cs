// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Serviceconsumermanagement.V1
{
    /// <summary>
    /// Creates a tenancy unit with no tenant resources. If tenancy unit already exists, it will be returned, however, in this case, returned TenancyUnit does not have tenant_resources field set and ListTenancyUnits has to be used to get a complete TenancyUnit with all fields populated.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:serviceconsumermanagement/v1:TenancyUnit")]
    public partial class TenancyUnit : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a TenancyUnit resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TenancyUnit(string name, TenancyUnitArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:serviceconsumermanagement/v1:TenancyUnit", name, args ?? new TenancyUnitArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TenancyUnit(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:serviceconsumermanagement/v1:TenancyUnit", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TenancyUnit resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TenancyUnit Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TenancyUnit(name, id, options);
        }
    }

    public sealed class TenancyUnitArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. services/{service}/{collection id}/{resource id} {collection id} is the cloud resource collection type representing the service consumer, for example 'projects', or 'organizations'. {resource id} is the consumer numeric id, such as project number: '123456'. {service} the name of a managed service, such as 'service.googleapis.com'. Enables service binding using the new tenancy unit.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.
        /// </summary>
        [Input("tenancyUnitId")]
        public Input<string>? TenancyUnitId { get; set; }

        public TenancyUnitArgs()
        {
        }
    }
}
