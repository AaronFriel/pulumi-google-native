// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Cloudkms.V1.Inputs
{

    /// <summary>
    /// A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.
    /// </summary>
    public sealed class CryptoKeyVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// Output only. Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
        /// </summary>
        [Input("attestation")]
        public Input<Inputs.KeyOperationAttestationArgs>? Attestation { get; set; }

        /// <summary>
        /// Output only. The time at which this CryptoKeyVersion was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
        /// </summary>
        [Input("destroyEventTime")]
        public Input<string>? DestroyEventTime { get; set; }

        /// <summary>
        /// Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
        /// </summary>
        [Input("destroyTime")]
        public Input<string>? DestroyTime { get; set; }

        /// <summary>
        /// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.
        /// </summary>
        [Input("externalProtectionLevelOptions")]
        public Input<Inputs.ExternalProtectionLevelOptionsArgs>? ExternalProtectionLevelOptions { get; set; }

        /// <summary>
        /// Output only. The time this CryptoKeyVersion's key material was generated.
        /// </summary>
        [Input("generateTime")]
        public Input<string>? GenerateTime { get; set; }

        /// <summary>
        /// Output only. The root cause of an import failure. Only present if state is IMPORT_FAILED.
        /// </summary>
        [Input("importFailureReason")]
        public Input<string>? ImportFailureReason { get; set; }

        /// <summary>
        /// Output only. The name of the ImportJob used to import this CryptoKeyVersion. Only present if the underlying key material was imported.
        /// </summary>
        [Input("importJob")]
        public Input<string>? ImportJob { get; set; }

        /// <summary>
        /// Output only. The time at which this CryptoKeyVersion's key material was imported.
        /// </summary>
        [Input("importTime")]
        public Input<string>? ImportTime { get; set; }

        /// <summary>
        /// Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
        /// </summary>
        [Input("protectionLevel")]
        public Input<string>? ProtectionLevel { get; set; }

        /// <summary>
        /// The current state of the CryptoKeyVersion.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public CryptoKeyVersionArgs()
        {
        }
    }
}
