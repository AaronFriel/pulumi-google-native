// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Runtimeconfig.V1beta1
{
    /// <summary>
    /// Creates a new RuntimeConfig resource. The configuration name must be unique within project.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:runtimeconfig/v1beta1:RuntimeConfig")]
    public partial class RuntimeConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a RuntimeConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuntimeConfig(string name, RuntimeConfigArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:runtimeconfig/v1beta1:RuntimeConfig", name, args ?? new RuntimeConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuntimeConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:runtimeconfig/v1beta1:RuntimeConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuntimeConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuntimeConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RuntimeConfig(name, id, options);
        }
    }

    public sealed class RuntimeConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional description of the RuntimeConfig object.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The resource name of a runtime config. The name must have the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME] The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length of `[CONFIG_NAME]` must be less than 64 characters. You pick the RuntimeConfig resource name, but the server will validate that the name adheres to this format. After you create the resource, you cannot change the resource's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848) for this request, in the format `projects/[PROJECT_ID]`.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// An optional but recommended unique `request_id`. If the server receives two `create()` requests with the same `request_id`, then the second request will be ignored and the first resource created and stored in the backend is returned. Empty `request_id` fields are ignored. It is responsibility of the client to ensure uniqueness of the `request_id` strings. `request_id` strings are limited to 64 characters.
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        public RuntimeConfigArgs()
        {
        }
    }
}
