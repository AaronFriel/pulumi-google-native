// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Networkmanagement.V1beta1.Inputs
{

    /// <summary>
    /// Results of active probing from the last run of the test.
    /// </summary>
    public sealed class ProbingDetailsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The reason probing was aborted.
        /// </summary>
        [Input("abortCause")]
        public Input<string>? AbortCause { get; set; }

        /// <summary>
        /// The source and destination endpoints derived from the test input and used for active probing.
        /// </summary>
        [Input("endpointInfo")]
        public Input<Inputs.EndpointInfoArgs>? EndpointInfo { get; set; }

        /// <summary>
        /// Details about an internal failure or the cancellation of active probing.
        /// </summary>
        [Input("error")]
        public Input<Inputs.StatusArgs>? Error { get; set; }

        /// <summary>
        /// Latency as measured by active probing in one direction: from the source to the destination endpoint.
        /// </summary>
        [Input("probingLatency")]
        public Input<Inputs.LatencyDistributionArgs>? ProbingLatency { get; set; }

        /// <summary>
        /// The overall result of active probing.
        /// </summary>
        [Input("result")]
        public Input<string>? Result { get; set; }

        /// <summary>
        /// Number of probes sent.
        /// </summary>
        [Input("sentProbeCount")]
        public Input<int>? SentProbeCount { get; set; }

        /// <summary>
        /// Number of probes that reached the destination.
        /// </summary>
        [Input("successfulProbeCount")]
        public Input<int>? SuccessfulProbeCount { get; set; }

        /// <summary>
        /// The time that reachability was assessed through active probing.
        /// </summary>
        [Input("verifyTime")]
        public Input<string>? VerifyTime { get; set; }

        public ProbingDetailsArgs()
        {
        }
    }
}
