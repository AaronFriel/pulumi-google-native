// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Networkmanagement.V1beta1.Inputs
{

    /// <summary>
    /// The details of probing from the latest run.
    /// </summary>
    public sealed class ProbingDetailsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Causes that the probing was aborted.
        /// </summary>
        [Input("abortCause")]
        public Input<string>? AbortCause { get; set; }

        /// <summary>
        /// Derived from the test input. The actual source and destination endpoint where the probing was run.
        /// </summary>
        [Input("endpointInfo")]
        public Input<Inputs.EndpointInfoArgs>? EndpointInfo { get; set; }

        /// <summary>
        /// The details of an internal failure or a cancellation of reachability analysis.
        /// </summary>
        [Input("error")]
        public Input<Inputs.StatusArgs>? Error { get; set; }

        /// <summary>
        /// One way probing latency distribution. The latency is measured as duration of packet traversal of Google Cloud network, from source to destination endpoint.
        /// </summary>
        [Input("probingLatency")]
        public Input<Inputs.LatencyDistributionArgs>? ProbingLatency { get; set; }

        /// <summary>
        /// The overall reachability result of the test.
        /// </summary>
        [Input("result")]
        public Input<string>? Result { get; set; }

        /// <summary>
        /// Number of probes sent.
        /// </summary>
        [Input("sentProbeCount")]
        public Input<int>? SentProbeCount { get; set; }

        /// <summary>
        /// Number of probes that reached destination.
        /// </summary>
        [Input("successfulProbeCount")]
        public Input<int>? SuccessfulProbeCount { get; set; }

        /// <summary>
        /// The time the reachability state was verified.
        /// </summary>
        [Input("verifyTime")]
        public Input<string>? VerifyTime { get; set; }

        public ProbingDetailsArgs()
        {
        }
    }
}
