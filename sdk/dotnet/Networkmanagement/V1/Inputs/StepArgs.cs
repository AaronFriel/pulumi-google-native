// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Networkmanagement.V1.Inputs
{

    /// <summary>
    /// A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
    /// </summary>
    public sealed class StepArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Display info of the final state "abort" and reason.
        /// </summary>
        [Input("abort")]
        public Input<Inputs.AbortInfoArgs>? Abort { get; set; }

        /// <summary>
        /// This is a step that leads to the final state Drop.
        /// </summary>
        [Input("causesDrop")]
        public Input<bool>? CausesDrop { get; set; }

        /// <summary>
        /// Display info of the final state "deliver" and reason.
        /// </summary>
        [Input("deliver")]
        public Input<Inputs.DeliverInfoArgs>? Deliver { get; set; }

        /// <summary>
        /// A description of the step. Usually this is a summary of the state.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display info of the final state "drop" and reason.
        /// </summary>
        [Input("drop")]
        public Input<Inputs.DropInfoArgs>? Drop { get; set; }

        /// <summary>
        /// Display info of the source and destination under analysis. The endpiont info in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.EndpointInfoArgs>? Endpoint { get; set; }

        /// <summary>
        /// Display info of a Compute Engine firewall rule.
        /// </summary>
        [Input("firewall")]
        public Input<Inputs.FirewallInfoArgs>? Firewall { get; set; }

        /// <summary>
        /// Display info of the final state "forward" and reason.
        /// </summary>
        [Input("forward")]
        public Input<Inputs.ForwardInfoArgs>? Forward { get; set; }

        /// <summary>
        /// Display info of a Compute Engine forwarding rule.
        /// </summary>
        [Input("forwardingRule")]
        public Input<Inputs.ForwardingRuleInfoArgs>? ForwardingRule { get; set; }

        /// <summary>
        /// Display info of a Compute Engine instance.
        /// </summary>
        [Input("instance")]
        public Input<Inputs.InstanceInfoArgs>? Instance { get; set; }

        /// <summary>
        /// Display info of the load balancers.
        /// </summary>
        [Input("loadBalancer")]
        public Input<Inputs.LoadBalancerInfoArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// Display info of a GCP network.
        /// </summary>
        [Input("network")]
        public Input<Inputs.NetworkInfoArgs>? Network { get; set; }

        /// <summary>
        /// Project ID that contains the configuration this step is validating.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Display info of a Compute Engine route.
        /// </summary>
        [Input("route")]
        public Input<Inputs.RouteInfoArgs>? Route { get; set; }

        /// <summary>
        /// Each step is in one of the pre-defined states.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Display info of a Compute Engine VPN gateway.
        /// </summary>
        [Input("vpnGateway")]
        public Input<Inputs.VpnGatewayInfoArgs>? VpnGateway { get; set; }

        /// <summary>
        /// Display info of a Compute Engine VPN tunnel.
        /// </summary>
        [Input("vpnTunnel")]
        public Input<Inputs.VpnTunnelInfoArgs>? VpnTunnel { get; set; }

        public StepArgs()
        {
        }
    }
}
