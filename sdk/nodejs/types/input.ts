// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export namespace cloudfunctions {
    export namespace v1 {
        /**
         * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
         */
        export interface AuditConfig {
            /**
             * The configuration for logging of each type of permission.
             */
            auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.cloudfunctions.v1.AuditLogConfig>[]>;
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
             */
            service?: pulumi.Input<string>;
        }

        /**
         * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
         */
        export interface AuditLogConfig {
            /**
             * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
             */
            exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The log type that this config enables.
             */
            logType?: pulumi.Input<string>;
        }

        /**
         * Associates `members` with a `role`.
         */
        export interface Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?: pulumi.Input<inputs.cloudfunctions.v1.Expr>;
            /**
             * Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
             */
            members?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
             */
            role?: pulumi.Input<string>;
        }

        /**
         * Describes EventTrigger, used to request events be sent from another service.
         */
        export interface EventTrigger {
            /**
             * Required. The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`. Event types match pattern `providers/*&#47;eventTypes/*.*`. The pattern contains: 1. namespace: For example, `cloud.storage` and `google.firebase.analytics`. 2. resource type: The type of resource on which event occurs. For example, the Google Cloud Storage API includes the type `object`. 3. action: The action that generates the event. For example, action for a Google Cloud Storage Object is 'change'. These parts are lower case.
             */
            eventType?: pulumi.Input<string>;
            /**
             * Specifies policy for failed executions.
             */
            failurePolicy?: pulumi.Input<inputs.cloudfunctions.v1.FailurePolicy>;
            /**
             * Required. The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket`. Not all syntactically correct values are accepted by all services. For example: 1. The authorization model must support it. Google Cloud Functions only allows EventTriggers to be deployed that observe resources in the same project as the `CloudFunction`. 2. The resource type must match the pattern expected for an `event_type`. For example, an `EventTrigger` that has an `event_type` of "google.pubsub.topic.publish" should have a resource that matches Google Cloud Pub/Sub topics. Additionally, some services may support short names when creating an `EventTrigger`. These will always be returned in the normalized "long" format. See each *service's* documentation for supported formats.
             */
            resource?: pulumi.Input<string>;
            /**
             * The hostname of the service that should be observed. If no string is provided, the default service implementing the API will be used. For example, `storage.googleapis.com` is the default for all event types in the `google.storage` namespace.
             */
            service?: pulumi.Input<string>;
        }

        /**
         * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
         */
        export interface Expr {
            /**
             * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
             */
            description?: pulumi.Input<string>;
            /**
             * Textual representation of an expression in Common Expression Language syntax.
             */
            expression?: pulumi.Input<string>;
            /**
             * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
             */
            location?: pulumi.Input<string>;
            /**
             * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
             */
            title?: pulumi.Input<string>;
        }

        /**
         * Describes the policy in case of function's execution failure. If empty, then defaults to ignoring failures (i.e. not retrying them).
         */
        export interface FailurePolicy {
            /**
             * If specified, then the function will be retried in case of a failure.
             */
            retry?: pulumi.Input<inputs.cloudfunctions.v1.Retry>;
        }

        /**
         * Describes HttpsTrigger, could be used to connect web hooks to function.
         */
        export interface HttpsTrigger {
            /**
             * Output only. The deployed url for the function.
             */
            url?: pulumi.Input<string>;
        }

        /**
         * An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
         */
        export interface Policy {
            /**
             * Specifies cloud audit logging configuration for this policy.
             */
            auditConfigs?: pulumi.Input<pulumi.Input<inputs.cloudfunctions.v1.AuditConfig>[]>;
            /**
             * Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.
             */
            bindings?: pulumi.Input<pulumi.Input<inputs.cloudfunctions.v1.Binding>[]>;
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?: pulumi.Input<string>;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?: pulumi.Input<number>;
        }

        /**
         * Describes the retry policy in case of function's execution failure. A function execution will be retried on any failure. A failed execution will be retried up to 7 days with an exponential backoff (capped at 10 seconds). Retried execution is charged as any other execution.
         */
        export interface Retry {
        }

        /**
         * Describes SourceRepository, used to represent parameters related to source repository where a function is hosted.
         */
        export interface SourceRepository {
            /**
             * Output only. The URL pointing to the hosted repository where the function were defined at the time of deployment. It always points to a specific commit in the format described above.
             */
            deployedUrl?: pulumi.Input<string>;
            /**
             * The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats: To refer to a specific commit: `https://source.developers.google.com/projects/*&#47;repos/*&#47;revisions/*&#47;paths/*` To refer to a moveable alias (branch): `https://source.developers.google.com/projects/*&#47;repos/*&#47;moveable-aliases/*&#47;paths/*` In particular, to refer to HEAD use `master` moveable alias. To refer to a specific fixed alias (tag): `https://source.developers.google.com/projects/*&#47;repos/*&#47;fixed-aliases/*&#47;paths/*` You may omit `paths/*` if you want to use the main directory.
             */
            url?: pulumi.Input<string>;
        }
    }
}

export namespace container {
    export namespace v1 {
        /**
         * AcceleratorConfig represents a Hardware Accelerator request.
         */
        export interface AcceleratorConfig {
            /**
             * The number of the accelerator cards exposed to an instance.
             */
            acceleratorCount?: pulumi.Input<string>;
            /**
             * The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
             */
            acceleratorType?: pulumi.Input<string>;
        }

        /**
         * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
         */
        export interface AddonsConfig {
            /**
             * Configuration for the Cloud Run addon, which allows the user to use a managed Knative service.
             */
            cloudRunConfig?: pulumi.Input<inputs.container.v1.CloudRunConfig>;
            /**
             * Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
             */
            configConnectorConfig?: pulumi.Input<inputs.container.v1.ConfigConnectorConfig>;
            /**
             * Configuration for NodeLocalDNS, a dns cache running on cluster nodes
             */
            dnsCacheConfig?: pulumi.Input<inputs.container.v1.DnsCacheConfig>;
            /**
             * Configuration for the Compute Engine Persistent Disk CSI driver.
             */
            gcePersistentDiskCsiDriverConfig?: pulumi.Input<inputs.container.v1.GcePersistentDiskCsiDriverConfig>;
            /**
             * Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
             */
            horizontalPodAutoscaling?: pulumi.Input<inputs.container.v1.HorizontalPodAutoscaling>;
            /**
             * Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
             */
            httpLoadBalancing?: pulumi.Input<inputs.container.v1.HttpLoadBalancing>;
            /**
             * Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
             */
            kubernetesDashboard?: pulumi.Input<inputs.container.v1.KubernetesDashboard>;
            /**
             * Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
             */
            networkPolicyConfig?: pulumi.Input<inputs.container.v1.NetworkPolicyConfig>;
        }

        /**
         * Configuration for returning group information from authenticators.
         */
        export interface AuthenticatorGroupsConfig {
            /**
             * Whether this cluster should return group membership lookups during authentication using a group of security groups.
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * The name of the security group-of-groups to be used. Only relevant if enabled = true.
             */
            securityGroup?: pulumi.Input<string>;
        }

        /**
         * AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.
         */
        export interface AutoUpgradeOptions {
            /**
             * [Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
             */
            autoUpgradeStartTime?: pulumi.Input<string>;
            /**
             * [Output only] This field is set when upgrades are about to commence with the description of the upgrade.
             */
            description?: pulumi.Input<string>;
        }

        /**
         * AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
         */
        export interface AutoprovisioningNodePoolDefaults {
            /**
             * The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
             */
            bootDiskKmsKey?: pulumi.Input<string>;
            /**
             * Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
             */
            diskSizeGb?: pulumi.Input<number>;
            /**
             * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
             */
            diskType?: pulumi.Input<string>;
            /**
             * Specifies the node management options for NAP created node-pools.
             */
            management?: pulumi.Input<inputs.container.v1.NodeManagement>;
            /**
             * Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) To unset the min cpu platform field pass "automatic" as field value.
             */
            minCpuPlatform?: pulumi.Input<string>;
            /**
             * Scopes that are used by NAP when creating node pools.
             */
            oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The Google Cloud Platform Service Account to be used by the node VMs.
             */
            serviceAccount?: pulumi.Input<string>;
            /**
             * Shielded Instance options.
             */
            shieldedInstanceConfig?: pulumi.Input<inputs.container.v1.ShieldedInstanceConfig>;
            /**
             * Specifies the upgrade settings for NAP created node pools
             */
            upgradeSettings?: pulumi.Input<inputs.container.v1.UpgradeSettings>;
        }

        /**
         * Parameters for using BigQuery as the destination of resource usage export.
         */
        export interface BigQueryDestination {
            /**
             * The ID of a BigQuery Dataset.
             */
            datasetId?: pulumi.Input<string>;
        }

        /**
         * Configuration for Binary Authorization.
         */
        export interface BinaryAuthorization {
            /**
             * Enable Binary Authorization for this cluster. If enabled, all container images will be validated by Binary Authorization.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * CidrBlock contains an optional name and one CIDR block.
         */
        export interface CidrBlock {
            /**
             * cidr_block must be specified in CIDR notation.
             */
            cidrBlock?: pulumi.Input<string>;
            /**
             * display_name is an optional field for users to identify CIDR blocks.
             */
            displayName?: pulumi.Input<string>;
        }

        /**
         * Configuration for client certificates on the cluster.
         */
        export interface ClientCertificateConfig {
            /**
             * Issue a client certificate.
             */
            issueClientCertificate?: pulumi.Input<boolean>;
        }

        /**
         * Configuration options for the Cloud Run feature.
         */
        export interface CloudRunConfig {
            /**
             * Whether Cloud Run addon is enabled for this cluster.
             */
            disabled?: pulumi.Input<boolean>;
            /**
             * Which load balancer type is installed for Cloud Run.
             */
            loadBalancerType?: pulumi.Input<string>;
        }

        /**
         * A Google Kubernetes Engine cluster.
         */
        export interface Cluster {
            /**
             * Configurations for the various addons available to run in the cluster.
             */
            addonsConfig?: pulumi.Input<inputs.container.v1.AddonsConfig>;
            /**
             * Configuration controlling RBAC group membership information.
             */
            authenticatorGroupsConfig?: pulumi.Input<inputs.container.v1.AuthenticatorGroupsConfig>;
            /**
             * Cluster-level autoscaling configuration.
             */
            autoscaling?: pulumi.Input<inputs.container.v1.ClusterAutoscaling>;
            /**
             * Configuration for Binary Authorization.
             */
            binaryAuthorization?: pulumi.Input<inputs.container.v1.BinaryAuthorization>;
            /**
             * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
             */
            clusterIpv4Cidr?: pulumi.Input<string>;
            /**
             * Which conditions caused the current cluster state.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.container.v1.StatusCondition>[]>;
            /**
             * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
             */
            createTime?: pulumi.Input<string>;
            /**
             * [Output only] The current software version of the master endpoint.
             */
            currentMasterVersion?: pulumi.Input<string>;
            /**
             * [Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.
             */
            currentNodeCount?: pulumi.Input<number>;
            /**
             * [Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
             */
            currentNodeVersion?: pulumi.Input<string>;
            /**
             * Configuration of etcd encryption.
             */
            databaseEncryption?: pulumi.Input<inputs.container.v1.DatabaseEncryption>;
            /**
             * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
             */
            defaultMaxPodsConstraint?: pulumi.Input<inputs.container.v1.MaxPodsConstraint>;
            /**
             * An optional description of this cluster.
             */
            description?: pulumi.Input<string>;
            /**
             * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
             */
            enableKubernetesAlpha?: pulumi.Input<boolean>;
            /**
             * Enable the ability to use Cloud TPUs in this cluster.
             */
            enableTpu?: pulumi.Input<boolean>;
            /**
             * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
             */
            endpoint?: pulumi.Input<string>;
            /**
             * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
             */
            expireTime?: pulumi.Input<string>;
            /**
             * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
             */
            initialClusterVersion?: pulumi.Input<string>;
            /**
             * The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
             */
            initialNodeCount?: pulumi.Input<number>;
            /**
             * Deprecated. Use node_pools.instance_group_urls.
             */
            instanceGroupUrls?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Configuration for cluster IP allocation.
             */
            ipAllocationPolicy?: pulumi.Input<inputs.container.v1.IPAllocationPolicy>;
            /**
             * The fingerprint of the set of labels for this cluster.
             */
            labelFingerprint?: pulumi.Input<string>;
            /**
             * Configuration for the legacy ABAC authorization mode.
             */
            legacyAbac?: pulumi.Input<inputs.container.v1.LegacyAbac>;
            /**
             * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
             */
            location?: pulumi.Input<string>;
            /**
             * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
             */
            locations?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
             */
            loggingService?: pulumi.Input<string>;
            /**
             * Configure the maintenance policy for this cluster.
             */
            maintenancePolicy?: pulumi.Input<inputs.container.v1.MaintenancePolicy>;
            /**
             * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
             */
            masterAuth?: pulumi.Input<inputs.container.v1.MasterAuth>;
            /**
             * The configuration options for master authorized networks feature.
             */
            masterAuthorizedNetworksConfig?: pulumi.Input<inputs.container.v1.MasterAuthorizedNetworksConfig>;
            /**
             * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
             */
            monitoringService?: pulumi.Input<string>;
            /**
             * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
             */
            name?: pulumi.Input<string>;
            /**
             * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
             */
            network?: pulumi.Input<string>;
            /**
             * Configuration for cluster networking.
             */
            networkConfig?: pulumi.Input<inputs.container.v1.NetworkConfig>;
            /**
             * Configuration options for the NetworkPolicy feature.
             */
            networkPolicy?: pulumi.Input<inputs.container.v1.NetworkPolicy>;
            /**
             * Parameters used in creating the cluster's nodes. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "initial_node_count") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. (For configuration of each node pool, see `node_pool.config`) If unspecified, the defaults are used. This field is deprecated, use node_pool.config instead.
             */
            nodeConfig?: pulumi.Input<inputs.container.v1.NodeConfig>;
            /**
             * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
             */
            nodeIpv4CidrSize?: pulumi.Input<number>;
            /**
             * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
             */
            nodePools?: pulumi.Input<pulumi.Input<inputs.container.v1.NodePool>[]>;
            /**
             * Configuration for private cluster.
             */
            privateClusterConfig?: pulumi.Input<inputs.container.v1.PrivateClusterConfig>;
            /**
             * Release channel configuration.
             */
            releaseChannel?: pulumi.Input<inputs.container.v1.ReleaseChannel>;
            /**
             * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
             */
            resourceLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
             */
            resourceUsageExportConfig?: pulumi.Input<inputs.container.v1.ResourceUsageExportConfig>;
            /**
             * [Output only] Server-defined URL for the resource.
             */
            selfLink?: pulumi.Input<string>;
            /**
             * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
             */
            servicesIpv4Cidr?: pulumi.Input<string>;
            /**
             * Shielded Nodes configuration.
             */
            shieldedNodes?: pulumi.Input<inputs.container.v1.ShieldedNodes>;
            /**
             * [Output only] The current status of this cluster.
             */
            status?: pulumi.Input<string>;
            /**
             * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available.
             */
            statusMessage?: pulumi.Input<string>;
            /**
             * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
             */
            subnetwork?: pulumi.Input<string>;
            /**
             * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
             */
            tpuIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * Cluster-level Vertical Pod Autoscaling configuration.
             */
            verticalPodAutoscaling?: pulumi.Input<inputs.container.v1.VerticalPodAutoscaling>;
            /**
             * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
             */
            workloadIdentityConfig?: pulumi.Input<inputs.container.v1.WorkloadIdentityConfig>;
            /**
             * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.
             */
            zone?: pulumi.Input<string>;
        }

        /**
         * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
         */
        export interface ClusterAutoscaling {
            /**
             * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
             */
            autoprovisioningLocations?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
             */
            autoprovisioningNodePoolDefaults?: pulumi.Input<inputs.container.v1.AutoprovisioningNodePoolDefaults>;
            /**
             * Enables automatic node pool creation and deletion.
             */
            enableNodeAutoprovisioning?: pulumi.Input<boolean>;
            /**
             * Contains global constraints regarding minimum and maximum amount of resources in the cluster.
             */
            resourceLimits?: pulumi.Input<pulumi.Input<inputs.container.v1.ResourceLimit>[]>;
        }

        /**
         * Configuration options for the Config Connector add-on.
         */
        export interface ConfigConnectorConfig {
            /**
             * Whether Cloud Connector is enabled for this cluster.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Parameters for controlling consumption metering.
         */
        export interface ConsumptionMeteringConfig {
            /**
             * Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Time window specified for daily maintenance operations.
         */
        export interface DailyMaintenanceWindow {
            /**
             * [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".
             */
            duration?: pulumi.Input<string>;
            /**
             * Time within the maintenance window to start the maintenance operations. Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
             */
            startTime?: pulumi.Input<string>;
        }

        /**
         * Configuration of etcd encryption.
         */
        export interface DatabaseEncryption {
            /**
             * Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
             */
            keyName?: pulumi.Input<string>;
            /**
             * Denotes the state of etcd encryption.
             */
            state?: pulumi.Input<string>;
        }

        /**
         * DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
         */
        export interface DefaultSnatStatus {
            /**
             * Disables cluster default sNAT rules.
             */
            disabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for NodeLocal DNSCache
         */
        export interface DnsCacheConfig {
            /**
             * Whether NodeLocal DNSCache is enabled for this cluster.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for the Compute Engine PD CSI driver.
         */
        export interface GcePersistentDiskCsiDriverConfig {
            /**
             * Whether the Compute Engine PD CSI driver is enabled for this cluster.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
         */
        export interface HorizontalPodAutoscaling {
            /**
             * Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring.
             */
            disabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
         */
        export interface HttpLoadBalancing {
            /**
             * Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
             */
            disabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for controlling how IPs are allocated in the cluster.
         */
        export interface IPAllocationPolicy {
            /**
             * This field is deprecated, use cluster_ipv4_cidr_block.
             */
            clusterIpv4Cidr?: pulumi.Input<string>;
            /**
             * The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
             */
            clusterIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
             */
            clusterSecondaryRangeName?: pulumi.Input<string>;
            /**
             * Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true.
             */
            createSubnetwork?: pulumi.Input<boolean>;
            /**
             * This field is deprecated, use node_ipv4_cidr_block.
             */
            nodeIpv4Cidr?: pulumi.Input<string>;
            /**
             * The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
             */
            nodeIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * This field is deprecated, use services_ipv4_cidr_block.
             */
            servicesIpv4Cidr?: pulumi.Input<string>;
            /**
             * The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
             */
            servicesIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
             */
            servicesSecondaryRangeName?: pulumi.Input<string>;
            /**
             * A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork.
             */
            subnetworkName?: pulumi.Input<string>;
            /**
             * The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
             */
            tpuIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
             */
            useIpAliases?: pulumi.Input<boolean>;
            /**
             * Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
             */
            useRoutes?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for the Kubernetes Dashboard.
         */
        export interface KubernetesDashboard {
            /**
             * Whether the Kubernetes Dashboard is enabled for this cluster.
             */
            disabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for the legacy Attribute Based Access Control authorization mode.
         */
        export interface LegacyAbac {
            /**
             * Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * MaintenancePolicy defines the maintenance policy to be used for the cluster.
         */
        export interface MaintenancePolicy {
            /**
             * A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy.
             */
            resourceVersion?: pulumi.Input<string>;
            /**
             * Specifies the maintenance window in which maintenance may be performed.
             */
            window?: pulumi.Input<inputs.container.v1.MaintenanceWindow>;
        }

        /**
         * MaintenanceWindow defines the maintenance window to be used for the cluster.
         */
        export interface MaintenanceWindow {
            /**
             * DailyMaintenanceWindow specifies a daily maintenance operation window.
             */
            dailyMaintenanceWindow?: pulumi.Input<inputs.container.v1.DailyMaintenanceWindow>;
            /**
             * Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
             */
            maintenanceExclusions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * RecurringWindow specifies some number of recurring time periods for maintenance to occur. The time windows may be overlapping. If no maintenance windows are set, maintenance can occur at any time.
             */
            recurringWindow?: pulumi.Input<inputs.container.v1.RecurringTimeWindow>;
        }

        /**
         * The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
         */
        export interface MasterAuth {
            /**
             * [Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.
             */
            clientCertificate?: pulumi.Input<string>;
            /**
             * Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued.
             */
            clientCertificateConfig?: pulumi.Input<inputs.container.v1.ClientCertificateConfig>;
            /**
             * [Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.
             */
            clientKey?: pulumi.Input<string>;
            /**
             * [Output only] Base64-encoded public certificate that is the root of trust for the cluster.
             */
            clusterCaCertificate?: pulumi.Input<string>;
            /**
             * The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
             */
            password?: pulumi.Input<string>;
            /**
             * The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
             */
            username?: pulumi.Input<string>;
        }

        /**
         * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
         */
        export interface MasterAuthorizedNetworksConfig {
            /**
             * cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
             */
            cidrBlocks?: pulumi.Input<pulumi.Input<inputs.container.v1.CidrBlock>[]>;
            /**
             * Whether or not master authorized networks is enabled.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Constraints applied to pods.
         */
        export interface MaxPodsConstraint {
            /**
             * Constraint enforced on the max num of pods per node.
             */
            maxPodsPerNode?: pulumi.Input<string>;
        }

        /**
         * NetworkConfig reports the relative names of network & subnetwork.
         */
        export interface NetworkConfig {
            /**
             * Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when default_snat_status is disabled. When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
             */
            defaultSnatStatus?: pulumi.Input<inputs.container.v1.DefaultSnatStatus>;
            /**
             * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
             */
            enableIntraNodeVisibility?: pulumi.Input<boolean>;
            /**
             * Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network
             */
            network?: pulumi.Input<string>;
            /**
             * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
             */
            privateIpv6GoogleAccess?: pulumi.Input<string>;
            /**
             * Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
             */
            subnetwork?: pulumi.Input<string>;
        }

        /**
         * Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
         */
        export interface NetworkPolicy {
            /**
             * Whether network policy is enabled on the cluster.
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * The selected network policy provider.
             */
            provider?: pulumi.Input<string>;
        }

        /**
         * Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
         */
        export interface NetworkPolicyConfig {
            /**
             * Whether NetworkPolicy is enabled for this cluster.
             */
            disabled?: pulumi.Input<boolean>;
        }

        /**
         * Parameters that describe the nodes in a cluster.
         */
        export interface NodeConfig {
            /**
             * A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
             */
            accelerators?: pulumi.Input<pulumi.Input<inputs.container.v1.AcceleratorConfig>[]>;
            /**
             *  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
             */
            bootDiskKmsKey?: pulumi.Input<string>;
            /**
             * Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
             */
            diskSizeGb?: pulumi.Input<number>;
            /**
             * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
             */
            diskType?: pulumi.Input<string>;
            /**
             * The image type to use for this node. Note that for a given image type, the latest version of it will be used.
             */
            imageType?: pulumi.Input<string>;
            /**
             * The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
             */
            localSsdCount?: pulumi.Input<number>;
            /**
             * The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
             */
            machineType?: pulumi.Input<string>;
            /**
             * The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - "cluster-location" - "cluster-name" - "cluster-uid" - "configure-sh" - "containerd-configure-sh" - "enable-os-login" - "gci-ensure-gke-docker" - "gci-metrics-enabled" - "gci-update-strategy" - "instance-template" - "kube-env" - "startup-script" - "user-data" - "disable-address-manager" - "windows-startup-script-ps1" - "common-psm1" - "k8s-node-setup-psm1" - "install-ssh-psm1" - "user-profile-psm1" The following keys are reserved for Windows nodes: - "serial-port-logging-enable" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
             */
            metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
             */
            minCpuPlatform?: pulumi.Input<string>;
            /**
             * Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
             */
            nodeGroup?: pulumi.Input<string>;
            /**
             * The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
             */
            oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.
             */
            preemptible?: pulumi.Input<boolean>;
            /**
             * The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
             */
            reservationAffinity?: pulumi.Input<inputs.container.v1.ReservationAffinity>;
            /**
             * Sandbox configuration for this node.
             */
            sandboxConfig?: pulumi.Input<inputs.container.v1.SandboxConfig>;
            /**
             * The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
             */
            serviceAccount?: pulumi.Input<string>;
            /**
             * Shielded Instance options.
             */
            shieldedInstanceConfig?: pulumi.Input<inputs.container.v1.ShieldedInstanceConfig>;
            /**
             * The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
             */
            tags?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
             */
            taints?: pulumi.Input<pulumi.Input<inputs.container.v1.NodeTaint>[]>;
            /**
             * The workload metadata configuration for this node.
             */
            workloadMetadataConfig?: pulumi.Input<inputs.container.v1.WorkloadMetadataConfig>;
        }

        /**
         * NodeManagement defines the set of node management services turned on for the node pool.
         */
        export interface NodeManagement {
            /**
             * A flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
             */
            autoRepair?: pulumi.Input<boolean>;
            /**
             * A flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
             */
            autoUpgrade?: pulumi.Input<boolean>;
            /**
             * Specifies the Auto Upgrade knobs for the node pool.
             */
            upgradeOptions?: pulumi.Input<inputs.container.v1.AutoUpgradeOptions>;
        }

        /**
         * NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.
         */
        export interface NodePool {
            /**
             * Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
             */
            autoscaling?: pulumi.Input<inputs.container.v1.NodePoolAutoscaling>;
            /**
             * Which conditions caused the current node pool state.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.container.v1.StatusCondition>[]>;
            /**
             * The node configuration of the pool.
             */
            config?: pulumi.Input<inputs.container.v1.NodeConfig>;
            /**
             * The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
             */
            initialNodeCount?: pulumi.Input<number>;
            /**
             * [Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool.
             */
            instanceGroupUrls?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.
             */
            locations?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * NodeManagement configuration for this NodePool.
             */
            management?: pulumi.Input<inputs.container.v1.NodeManagement>;
            /**
             * The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
             */
            maxPodsConstraint?: pulumi.Input<inputs.container.v1.MaxPodsConstraint>;
            /**
             * The name of the node pool.
             */
            name?: pulumi.Input<string>;
            /**
             * [Output only] The pod CIDR block size per node in this node pool.
             */
            podIpv4CidrSize?: pulumi.Input<number>;
            /**
             * [Output only] Server-defined URL for the resource.
             */
            selfLink?: pulumi.Input<string>;
            /**
             * [Output only] The status of the nodes in this pool instance.
             */
            status?: pulumi.Input<string>;
            /**
             * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
             */
            statusMessage?: pulumi.Input<string>;
            /**
             * Upgrade settings control disruption and speed of the upgrade.
             */
            upgradeSettings?: pulumi.Input<inputs.container.v1.UpgradeSettings>;
            /**
             * The version of the Kubernetes of this node.
             */
            version?: pulumi.Input<string>;
        }

        /**
         * NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
         */
        export interface NodePoolAutoscaling {
            /**
             * Can this node pool be deleted automatically.
             */
            autoprovisioned?: pulumi.Input<boolean>;
            /**
             * Is autoscaling enabled for this node pool.
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * Maximum number of nodes in the NodePool. Must be >= min_node_count. There has to enough quota to scale up the cluster.
             */
            maxNodeCount?: pulumi.Input<number>;
            /**
             * Minimum number of nodes in the NodePool. Must be >= 1 and <= max_node_count.
             */
            minNodeCount?: pulumi.Input<number>;
        }

        /**
         * Kubernetes taint is comprised of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values.
         */
        export interface NodeTaint {
            /**
             * Effect for taint.
             */
            effect?: pulumi.Input<string>;
            /**
             * Key for taint.
             */
            key?: pulumi.Input<string>;
            /**
             * Value for taint.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Configuration options for private clusters.
         */
        export interface PrivateClusterConfig {
            /**
             * Whether the master's internal IP address is used as the cluster endpoint.
             */
            enablePrivateEndpoint?: pulumi.Input<boolean>;
            /**
             * Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.
             */
            enablePrivateNodes?: pulumi.Input<boolean>;
            /**
             * Controls master global access settings.
             */
            masterGlobalAccessConfig?: pulumi.Input<inputs.container.v1.PrivateClusterMasterGlobalAccessConfig>;
            /**
             * The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
             */
            masterIpv4CidrBlock?: pulumi.Input<string>;
            /**
             * Output only. The peering name in the customer VPC used by this cluster.
             */
            peeringName?: pulumi.Input<string>;
            /**
             * Output only. The internal IP address of this cluster's master endpoint.
             */
            privateEndpoint?: pulumi.Input<string>;
            /**
             * Output only. The external IP address of this cluster's master endpoint.
             */
            publicEndpoint?: pulumi.Input<string>;
        }

        /**
         * Configuration for controlling master global access settings.
         */
        export interface PrivateClusterMasterGlobalAccessConfig {
            /**
             * Whenever master is accessible globally or not.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Represents an arbitrary window of time that recurs.
         */
        export interface RecurringTimeWindow {
            /**
             * An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.
             */
            recurrence?: pulumi.Input<string>;
            /**
             * The window of the first recurrence.
             */
            window?: pulumi.Input<inputs.container.v1.TimeWindow>;
        }

        /**
         * ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
         */
        export interface ReleaseChannel {
            /**
             * channel specifies which release channel the cluster is subscribed to.
             */
            channel?: pulumi.Input<string>;
        }

        /**
         * [ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) is the configuration of desired reservation which instances could take capacity from.
         */
        export interface ReservationAffinity {
            /**
             * Corresponds to the type of reservation consumption.
             */
            consumeReservationType?: pulumi.Input<string>;
            /**
             * Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
             */
            key?: pulumi.Input<string>;
            /**
             * Corresponds to the label value(s) of reservation resource(s).
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Contains information about amount of some resource in the cluster. For memory, value should be in GB.
         */
        export interface ResourceLimit {
            /**
             * Maximum amount of the resource in the cluster.
             */
            maximum?: pulumi.Input<string>;
            /**
             * Minimum amount of the resource in the cluster.
             */
            minimum?: pulumi.Input<string>;
            /**
             * Resource name "cpu", "memory" or gpu-specific string.
             */
            resourceType?: pulumi.Input<string>;
        }

        /**
         * Configuration for exporting cluster resource usages.
         */
        export interface ResourceUsageExportConfig {
            /**
             * Configuration to use BigQuery as usage export destination.
             */
            bigqueryDestination?: pulumi.Input<inputs.container.v1.BigQueryDestination>;
            /**
             * Configuration to enable resource consumption metering.
             */
            consumptionMeteringConfig?: pulumi.Input<inputs.container.v1.ConsumptionMeteringConfig>;
            /**
             * Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
             */
            enableNetworkEgressMetering?: pulumi.Input<boolean>;
        }

        /**
         * SandboxConfig contains configurations of the sandbox to use for the node.
         */
        export interface SandboxConfig {
            /**
             * Type of the sandbox to use for the node.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * A set of Shielded Instance options.
         */
        export interface ShieldedInstanceConfig {
            /**
             * Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.
             */
            enableIntegrityMonitoring?: pulumi.Input<boolean>;
            /**
             * Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
             */
            enableSecureBoot?: pulumi.Input<boolean>;
        }

        /**
         * Configuration of Shielded Nodes feature.
         */
        export interface ShieldedNodes {
            /**
             * Whether Shielded Nodes features are enabled on all nodes in this cluster.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * StatusCondition describes why a cluster or a node pool has a certain status (e.g., ERROR or DEGRADED).
         */
        export interface StatusCondition {
            /**
             * Machine-friendly representation of the condition
             */
            code?: pulumi.Input<string>;
            /**
             * Human-friendly representation of the condition
             */
            message?: pulumi.Input<string>;
        }

        /**
         * Represents an arbitrary window of time.
         */
        export interface TimeWindow {
            /**
             * The time that the window ends. The end time should take place after the start time.
             */
            endTime?: pulumi.Input<string>;
            /**
             * The time that the window first starts.
             */
            startTime?: pulumi.Input<string>;
        }

        /**
         * These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available.
         */
        export interface UpgradeSettings {
            /**
             * The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
             */
            maxSurge?: pulumi.Input<number>;
            /**
             * The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.
             */
            maxUnavailable?: pulumi.Input<number>;
        }

        /**
         * VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.
         */
        export interface VerticalPodAutoscaling {
            /**
             * Enables vertical pod autoscaling.
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
         */
        export interface WorkloadIdentityConfig {
            /**
             * The workload pool to attach all Kubernetes service accounts to.
             */
            workloadPool?: pulumi.Input<string>;
        }

        /**
         * WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.
         */
        export interface WorkloadMetadataConfig {
            /**
             * Mode is the configuration for how to expose metadata to workloads running on the node pool.
             */
            mode?: pulumi.Input<string>;
        }
    }
}

export namespace run {
    export namespace v1 {
        /**
         * Information for connecting over HTTP(s).
         */
        export interface Addressable {
            url?: pulumi.Input<string>;
        }

        /**
         * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
         */
        export interface AuditConfig {
            /**
             * The configuration for logging of each type of permission.
             */
            auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.run.v1.AuditLogConfig>[]>;
            /**
             * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
             */
            service?: pulumi.Input<string>;
        }

        /**
         * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
         */
        export interface AuditLogConfig {
            /**
             * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
             */
            exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The log type that this config enables.
             */
            logType?: pulumi.Input<string>;
        }

        /**
         * Associates `members` with a `role`.
         */
        export interface Binding {
            /**
             * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            condition?: pulumi.Input<inputs.run.v1.Expr>;
            /**
             * Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
             */
            members?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
             */
            role?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported ConfigMapEnvSource selects a ConfigMap to populate the environment variables with. The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
         */
        export interface ConfigMapEnvSource {
            /**
             * This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead.
             */
            localObjectReference?: pulumi.Input<inputs.run.v1.LocalObjectReference>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the ConfigMap must be defined
             */
            optional?: pulumi.Input<boolean>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key from a ConfigMap.
         */
        export interface ConfigMapKeySelector {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key to select.
             */
            key?: pulumi.Input<string>;
            /**
             * This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead.
             */
            localObjectReference?: pulumi.Input<inputs.run.v1.LocalObjectReference>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the ConfigMap or its key must be defined
             */
            optional?: pulumi.Input<boolean>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths.
         */
        export interface ConfigMapVolumeSource {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
             */
            defaultMode?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional.
             */
            items?: pulumi.Input<pulumi.Input<inputs.run.v1.KeyToPath>[]>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the config.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its keys must be defined.
             */
            optional?: pulumi.Input<boolean>;
        }

        /**
         * A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime.
         */
        export interface Container {
            /**
             * (Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
             */
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * (Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported List of environment variables to set in the container.
             */
            env?: pulumi.Input<pulumi.Input<inputs.run.v1.EnvVar>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
             */
            envFrom?: pulumi.Input<pulumi.Input<inputs.run.v1.EnvFromSource>[]>;
            /**
             * Cloud Run fully managed: only supports containers from Google Container Registry Cloud Run for Anthos: supported URL of the Container image. More info: https://kubernetes.io/docs/concepts/containers/images
             */
            image?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
             */
            imagePullPolicy?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            livenessProbe?: pulumi.Input<inputs.run.v1.Probe>;
            /**
             * (Optional) Name of the container specified as a DNS_LABEL.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
             */
            ports?: pulumi.Input<pulumi.Input<inputs.run.v1.ContainerPort>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            readinessProbe?: pulumi.Input<inputs.run.v1.Probe>;
            /**
             * (Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported Compute Resources required by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
             */
            resources?: pulumi.Input<inputs.run.v1.ResourceRequirements>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
             */
            securityContext?: pulumi.Input<inputs.run.v1.SecurityContext>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log.
             */
            terminationMessagePath?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
             */
            terminationMessagePolicy?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Pod volumes to mount into the container's filesystem.
             */
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.run.v1.VolumeMount>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
             */
            workingDir?: pulumi.Input<string>;
        }

        /**
         * ContainerPort represents a network port in a single container.
         */
        export interface ContainerPort {
            /**
             * (Optional) Port number the container listens on. This must be a valid port number, 0 < x < 65536.
             */
            containerPort?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Protocol for port. Must be "TCP". Defaults to "TCP".
             */
            protocol?: pulumi.Input<string>;
        }

        /**
         * The desired state of the Domain Mapping.
         */
        export interface DomainMappingSpec {
            /**
             * The mode of the certificate.
             */
            certificateMode?: pulumi.Input<string>;
            /**
             * If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.
             */
            forceOverride?: pulumi.Input<boolean>;
            /**
             * The name of the Knative Route that this DomainMapping applies to. The route must exist.
             */
            routeName?: pulumi.Input<string>;
        }

        /**
         * The current state of the Domain Mapping.
         */
        export interface DomainMappingStatus {
            /**
             * Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.run.v1.GoogleCloudRunV1Condition>[]>;
            /**
             * The name of the route that the mapping currently points to.
             */
            mappedRouteName?: pulumi.Input<string>;
            /**
             * ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.
             */
            resourceRecords?: pulumi.Input<pulumi.Input<inputs.run.v1.ResourceRecord>[]>;
            /**
             * Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional
             */
            url?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported EnvFromSource represents the source of a set of ConfigMaps
         */
        export interface EnvFromSource {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from
             */
            configMapRef?: pulumi.Input<inputs.run.v1.ConfigMapEnvSource>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
             */
            prefix?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The Secret to select from
             */
            secretRef?: pulumi.Input<inputs.run.v1.SecretEnvSource>;
        }

        /**
         * EnvVar represents an environment variable present in a Container.
         */
        export interface EnvVar {
            /**
             * Name of the environment variable. Must be a C_IDENTIFIER.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
             */
            value?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Source for the environment variable's value. Cannot be used if value is not empty.
             */
            valueFrom?: pulumi.Input<inputs.run.v1.EnvVarSource>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported EnvVarSource represents a source for the value of an EnvVar.
         */
        export interface EnvVarSource {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key of a ConfigMap.
             */
            configMapKeyRef?: pulumi.Input<inputs.run.v1.ConfigMapKeySelector>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key of a secret in the pod's namespace
             */
            secretKeyRef?: pulumi.Input<inputs.run.v1.SecretKeySelector>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported ExecAction describes a "run in container" action.
         */
        export interface ExecAction {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
             */
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
         */
        export interface Expr {
            /**
             * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
             */
            description?: pulumi.Input<string>;
            /**
             * Textual representation of an expression in Common Expression Language syntax.
             */
            expression?: pulumi.Input<string>;
            /**
             * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
             */
            location?: pulumi.Input<string>;
            /**
             * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
             */
            title?: pulumi.Input<string>;
        }

        /**
         * Condition defines a generic condition for a Resource
         */
        export interface GoogleCloudRunV1Condition {
            /**
             * Optional. Last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Optional. Human readable message indicating details about the current status.
             */
            message?: pulumi.Input<string>;
            /**
             * Optional. One-word CamelCase reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * Optional. How to interpret failures of this condition, one of Error, Warning, Info
             */
            severity?: pulumi.Input<string>;
            /**
             * Status of the condition, one of True, False, Unknown.
             */
            status?: pulumi.Input<string>;
            /**
             * type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPGetAction describes an action based on HTTP Get requests.
         */
        export interface HTTPGetAction {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
             */
            host?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Custom headers to set in the request. HTTP allows repeated headers.
             */
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.run.v1.HTTPHeader>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path to access on the HTTP server.
             */
            path?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Scheme to use for connecting to the host. Defaults to HTTP.
             */
            scheme?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPHeader describes a custom header to be used in HTTP probes
         */
        export interface HTTPHeader {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The header field name
             */
            name?: pulumi.Input<string>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The header field value
             */
            value?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Maps a string key to a path within a volume.
         */
        export interface KeyToPath {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key to project.
             */
            key?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on this file, must be a value between 0000 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
             */
            mode?: pulumi.Input<number>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
             */
            path?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
         */
        export interface LocalObjectReference {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
             */
            name?: pulumi.Input<string>;
        }

        /**
         * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
         */
        export interface ObjectMeta {
            /**
             * (Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
             */
            clusterName?: pulumi.Input<string>;
            /**
             * (Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
             */
            creationTimestamp?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
             */
            deletionGracePeriodSeconds?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
             */
            deletionTimestamp?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge
             */
            finalizers?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;
             */
            generateName?: pulumi.Input<string>;
            /**
             * (Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
             */
            generation?: pulumi.Input<number>;
            /**
             * (Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels
             */
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional
             */
            name?: pulumi.Input<string>;
            /**
             * Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number.
             */
            namespace?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected.
             */
            ownerReferences?: pulumi.Input<pulumi.Input<inputs.run.v1.OwnerReference>[]>;
            /**
             * (Optional) An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
             */
            resourceVersion?: pulumi.Input<string>;
            /**
             * (Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;
             */
            selfLink?: pulumi.Input<string>;
            /**
             * (Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
             */
            uid?: pulumi.Input<string>;
        }

        /**
         * OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
         */
        export interface OwnerReference {
            /**
             * API version of the referent.
             */
            apiVersion?: pulumi.Input<string>;
            /**
             * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional
             */
            blockOwnerDeletion?: pulumi.Input<boolean>;
            /**
             * If true, this reference points to the managing controller. +optional
             */
            controller?: pulumi.Input<boolean>;
            /**
             * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
             */
            kind?: pulumi.Input<string>;
            /**
             * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
             */
            name?: pulumi.Input<string>;
            /**
             * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
             */
            uid?: pulumi.Input<string>;
        }

        /**
         * An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
         */
        export interface Policy {
            /**
             * Specifies cloud audit logging configuration for this policy.
             */
            auditConfigs?: pulumi.Input<pulumi.Input<inputs.run.v1.AuditConfig>[]>;
            /**
             * Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.
             */
            bindings?: pulumi.Input<pulumi.Input<inputs.run.v1.Binding>[]>;
            /**
             * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
             */
            etag?: pulumi.Input<string>;
            /**
             * Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            version?: pulumi.Input<number>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
         */
        export interface Probe {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported One and only one of the following should be specified. Exec specifies the action to take. A field inlined from the Handler message.
             */
            exec?: pulumi.Input<inputs.run.v1.ExecAction>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
             */
            failureThreshold?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPGet specifies the http request to perform. A field inlined from the Handler message.
             */
            httpGet?: pulumi.Input<inputs.run.v1.HTTPGetAction>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            initialDelaySeconds?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
             */
            periodSeconds?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
             */
            successThreshold?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported A field inlined from the Handler message.
             */
            tcpSocket?: pulumi.Input<inputs.run.v1.TCPSocketAction>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
             */
            timeoutSeconds?: pulumi.Input<number>;
        }

        /**
         * A DNS resource record.
         */
        export interface ResourceRecord {
            /**
             * Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.
             */
            name?: pulumi.Input<string>;
            /**
             * Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
             */
            rrdata?: pulumi.Input<string>;
            /**
             * Resource record type. Example: `AAAA`.
             */
            type?: pulumi.Input<string>;
        }

        /**
         * ResourceRequirements describes the compute resource requirements.
         */
        export interface ResourceRequirements {
            /**
             * (Optional) Cloud Run fully managed: Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', and '4'. Setting 4 CPU requires at least 2Gi of memory. Cloud Run for Anthos: supported Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
             */
            limits?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * (Optional) Cloud Run fully managed: Only memory and CPU are supported. Note: The only supported values for CPU are '1' and '2'. Cloud Run for Anthos: supported Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
             */
            requests?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * RevisionSpec holds the desired state of the Revision (from the client).
         */
        export interface RevisionSpec {
            /**
             * (Optional) ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. Cloud Run fully managed: supported, defaults to 80 Cloud Run for Anthos: supported, defaults to 0, which means concurrency to the application is not limited, and the system decides the target concurrency for the autoscaler.
             */
            containerConcurrency?: pulumi.Input<number>;
            /**
             * Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided. The runtime contract is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md
             */
            containers?: pulumi.Input<pulumi.Input<inputs.run.v1.Container>[]>;
            /**
             * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run fully managed: defaults to 300 seconds (5 minutes). Maximum allowed value is 900 seconds (15 minutes). Cloud Run for Anthos: defaults to 300 seconds (5 minutes). Maximum allowed value is configurable by the cluster operator.
             */
            timeoutSeconds?: pulumi.Input<number>;
            volumes?: pulumi.Input<pulumi.Input<inputs.run.v1.Volume>[]>;
        }

        /**
         * RevisionTemplateSpec describes the data a revision should have when created from a template. Based on: https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190
         */
        export interface RevisionTemplate {
            /**
             * Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. The following annotation keys set properties of the created revision: * `autoscaling.knative.dev/minScale` sets the minimum number of instances. * `autoscaling.knative.dev/maxScale` sets the maximum number of instances. * `run.googleapis.com/cloudsql-instances` sets Cloud SQL connections. Multiple values should be comma separated. * `run.googleapis.com/vpc-access-connector` sets a Serverless VPC Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC egress. Supported values are `all` and `private-ranges-only`.
             */
            metadata?: pulumi.Input<inputs.run.v1.ObjectMeta>;
            /**
             * RevisionSpec holds the desired state of the Revision (from the client).
             */
            spec?: pulumi.Input<inputs.run.v1.RevisionSpec>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecretEnvSource selects a Secret to populate the environment variables with. The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
         */
        export interface SecretEnvSource {
            /**
             * This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead.
             */
            localObjectReference?: pulumi.Input<inputs.run.v1.LocalObjectReference>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The Secret to select from.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret must be defined
             */
            optional?: pulumi.Input<boolean>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecretKeySelector selects a key of a Secret.
         */
        export interface SecretKeySelector {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key of the secret to select from. Must be a valid secret key.
             */
            key?: pulumi.Input<string>;
            /**
             * This field should not be used directly as it is meant to be inlined directly into the message. Use the "name" field instead.
             */
            localObjectReference?: pulumi.Input<inputs.run.v1.LocalObjectReference>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the secret in the pod's namespace to select from.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its key must be defined
             */
            optional?: pulumi.Input<boolean>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.
         */
        export interface SecretVolumeSource {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on created files by default. Must be a value between 0000 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. NOTE: This is an integer representation of the mode bits. So, the integer value should look exactly as the chmod numeric notation, i.e. Unix chmod "777" (a=rwx) should have the integer value 777.
             */
            defaultMode?: pulumi.Input<number>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional.
             */
            items?: pulumi.Input<pulumi.Input<inputs.run.v1.KeyToPath>[]>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its keys must be defined.
             */
            optional?: pulumi.Input<boolean>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the secret in the container's namespace to use.
             */
            secretName?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence.
         */
        export interface SecurityContext {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
             */
            runAsUser?: pulumi.Input<number>;
        }

        /**
         * ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).
         */
        export interface ServiceSpec {
            /**
             * Template holds the latest specification for the Revision to be stamped out.
             */
            template?: pulumi.Input<inputs.run.v1.RevisionTemplate>;
            /**
             * Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations.
             */
            traffic?: pulumi.Input<pulumi.Input<inputs.run.v1.TrafficTarget>[]>;
        }

        /**
         * The current state of the Service. Output only.
         */
        export interface ServiceStatus {
            /**
             * From RouteStatus. Similar to url, information on where the service is available on HTTP.
             */
            address?: pulumi.Input<inputs.run.v1.Addressable>;
            /**
             * Conditions communicates information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Service-specific conditions include: * "ConfigurationsReady": true when the underlying Configuration is ready. * "RoutesReady": true when the underlying Route is ready. * "Ready": true when both the underlying Route and Configuration are ready.
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.run.v1.GoogleCloudRunV1Condition>[]>;
            /**
             * From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
             */
            latestCreatedRevisionName?: pulumi.Input<string>;
            /**
             * From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service's Configuration that has had its "Ready" condition become "True".
             */
            latestReadyRevisionName?: pulumi.Input<string>;
            /**
             * ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.
             */
            observedGeneration?: pulumi.Input<number>;
            /**
             * From RouteStatus. Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.
             */
            traffic?: pulumi.Input<pulumi.Input<inputs.run.v1.TrafficTarget>[]>;
            /**
             * From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
             */
            url?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported TCPSocketAction describes an action based on opening a socket
         */
        export interface TCPSocketAction {
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Optional: Host name to connect to, defaults to the pod IP.
             */
            host?: pulumi.Input<string>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. This field is currently limited to integer types only because of proto's inability to properly support the IntOrString golang type.
             */
            port?: pulumi.Input<number>;
        }

        /**
         * TrafficTarget holds a single entry of the routing table for a Route.
         */
        export interface TrafficTarget {
            /**
             * ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the "status.latestReadyRevisionName" of the referenced configuration changes, we will automatically migrate traffic from the prior "latest ready" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName.
             */
            configurationName?: pulumi.Input<string>;
            /**
             * LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional
             */
            latestRevision?: pulumi.Input<boolean>;
            /**
             * Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry.
             */
            percent?: pulumi.Input<number>;
            /**
             * RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run.
             */
            revisionName?: pulumi.Input<string>;
            /**
             * Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional
             */
            tag?: pulumi.Input<string>;
            /**
             * Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc. Not currently supported in Cloud Run.
             */
            url?: pulumi.Input<string>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Volume represents a named volume in a container.
         */
        export interface Volume {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported
             */
            configMap?: pulumi.Input<inputs.run.v1.ConfigMapVolumeSource>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Volume's name.
             */
            name?: pulumi.Input<string>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported
             */
            secret?: pulumi.Input<inputs.run.v1.SecretVolumeSource>;
        }

        /**
         * Cloud Run fully managed: not supported Cloud Run for Anthos: supported VolumeMount describes a mounting of a Volume within a container.
         */
        export interface VolumeMount {
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path within the container at which the volume should be mounted. Must not contain ':'.
             */
            mountPath?: pulumi.Input<string>;
            /**
             * Cloud Run fully managed: not supported Cloud Run for Anthos: supported This must match the Name of a Volume.
             */
            name?: pulumi.Input<string>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Only true is accepted. Defaults to true.
             */
            readOnly?: pulumi.Input<boolean>;
            /**
             * (Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
             */
            subPath?: pulumi.Input<string>;
        }
    }
}

export namespace storage {
    export namespace v1 {
        /**
         * An access-control entry.
         */
        export interface BucketAccessControl {
            /**
             * The name of the bucket.
             */
            bucket?: pulumi.Input<string>;
            /**
             * The domain associated with the entity, if any.
             */
            domain?: pulumi.Input<string>;
            /**
             * The email address associated with the entity, if any.
             */
            email?: pulumi.Input<string>;
            /**
             * The entity holding the permission, in one of the following forms: 
             * - user-userId 
             * - user-email 
             * - group-groupId 
             * - group-email 
             * - domain-domain 
             * - project-team-projectId 
             * - allUsers 
             * - allAuthenticatedUsers Examples: 
             * - The user liz@example.com would be user-liz@example.com. 
             * - The group example@googlegroups.com would be group-example@googlegroups.com. 
             * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
             */
            entity?: pulumi.Input<string>;
            /**
             * The ID for the entity, if any.
             */
            entityId?: pulumi.Input<string>;
            /**
             * HTTP 1.1 Entity tag for the access-control entry.
             */
            etag?: pulumi.Input<string>;
            /**
             * The ID of the access-control entry.
             */
            id?: pulumi.Input<string>;
            /**
             * The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
             */
            kind?: pulumi.Input<string>;
            /**
             * The project team associated with the entity, if any.
             */
            projectTeam?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The access permission for the entity.
             */
            role?: pulumi.Input<string>;
            /**
             * The link to this access-control entry.
             */
            selfLink?: pulumi.Input<string>;
        }

        /**
         * An access-control entry.
         */
        export interface ObjectAccessControl {
            /**
             * The name of the bucket.
             */
            bucket?: pulumi.Input<string>;
            /**
             * The domain associated with the entity, if any.
             */
            domain?: pulumi.Input<string>;
            /**
             * The email address associated with the entity, if any.
             */
            email?: pulumi.Input<string>;
            /**
             * The entity holding the permission, in one of the following forms: 
             * - user-userId 
             * - user-email 
             * - group-groupId 
             * - group-email 
             * - domain-domain 
             * - project-team-projectId 
             * - allUsers 
             * - allAuthenticatedUsers Examples: 
             * - The user liz@example.com would be user-liz@example.com. 
             * - The group example@googlegroups.com would be group-example@googlegroups.com. 
             * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
             */
            entity?: pulumi.Input<string>;
            /**
             * The ID for the entity, if any.
             */
            entityId?: pulumi.Input<string>;
            /**
             * HTTP 1.1 Entity tag for the access-control entry.
             */
            etag?: pulumi.Input<string>;
            /**
             * The content generation of the object, if applied to an object.
             */
            generation?: pulumi.Input<string>;
            /**
             * The ID of the access-control entry.
             */
            id?: pulumi.Input<string>;
            /**
             * The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
             */
            kind?: pulumi.Input<string>;
            /**
             * The name of the object, if applied to an object.
             */
            object?: pulumi.Input<string>;
            /**
             * The project team associated with the entity, if any.
             */
            projectTeam?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * The access permission for the entity.
             */
            role?: pulumi.Input<string>;
            /**
             * The link to this access-control entry.
             */
            selfLink?: pulumi.Input<string>;
        }
    }
}
