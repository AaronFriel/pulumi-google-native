// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates the specified index. A newly created index's initial state is `CREATING`. On completion of the returned google.longrunning.Operation, the state will be `READY`. If the index already exists, the call will return an `ALREADY_EXISTS` status. During creation, the process could result in an error, in which case the index will move to the `ERROR` state. The process can be recovered by fixing the data that caused the error, removing the index with delete, then re-creating the index with create. Indexes with a single field cannot be created.
 */
export class GoogleLongrunningOperation extends pulumi.CustomResource {
    /**
     * Get an existing GoogleLongrunningOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GoogleLongrunningOperation {
        return new GoogleLongrunningOperation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:firestore/v1beta1:GoogleLongrunningOperation';

    /**
     * Returns true if the given object is an instance of GoogleLongrunningOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GoogleLongrunningOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GoogleLongrunningOperation.__pulumiType;
    }


    /**
     * Create a GoogleLongrunningOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GoogleLongrunningOperationArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["collectionId"] = args ? args.collectionId : undefined;
            inputs["fields"] = args ? args.fields : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["state"] = args ? args.state : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(GoogleLongrunningOperation.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GoogleLongrunningOperation resource.
 */
export interface GoogleLongrunningOperationArgs {
    /**
     * The collection ID to which this index applies. Required.
     */
    readonly collectionId?: pulumi.Input<string>;
    /**
     * The fields to index.
     */
    readonly fields?: pulumi.Input<pulumi.Input<inputs.firestore.v1beta1.GoogleFirestoreAdminV1beta1IndexField>[]>;
    /**
     * The resource name of the index. Output only.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the database this index will apply to. For example: `projects/{project_id}/databases/{database_id}`
     */
    readonly parent: pulumi.Input<string>;
    /**
     * The state of the index. Output only.
     */
    readonly state?: pulumi.Input<string>;
}
