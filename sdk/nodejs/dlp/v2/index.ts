// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./googlePrivacyDlpV2DeidentifyTemplate";
export * from "./googlePrivacyDlpV2DlpJob";
export * from "./googlePrivacyDlpV2InspectTemplate";
export * from "./googlePrivacyDlpV2JobTrigger";
export * from "./googlePrivacyDlpV2StoredInfoType";

// Import resources to register:
import { GooglePrivacyDlpV2DeidentifyTemplate } from "./googlePrivacyDlpV2DeidentifyTemplate";
import { GooglePrivacyDlpV2DlpJob } from "./googlePrivacyDlpV2DlpJob";
import { GooglePrivacyDlpV2InspectTemplate } from "./googlePrivacyDlpV2InspectTemplate";
import { GooglePrivacyDlpV2JobTrigger } from "./googlePrivacyDlpV2JobTrigger";
import { GooglePrivacyDlpV2StoredInfoType } from "./googlePrivacyDlpV2StoredInfoType";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-cloud:dlp/v2:GooglePrivacyDlpV2DeidentifyTemplate":
                return new GooglePrivacyDlpV2DeidentifyTemplate(name, <any>undefined, { urn })
            case "google-cloud:dlp/v2:GooglePrivacyDlpV2DlpJob":
                return new GooglePrivacyDlpV2DlpJob(name, <any>undefined, { urn })
            case "google-cloud:dlp/v2:GooglePrivacyDlpV2InspectTemplate":
                return new GooglePrivacyDlpV2InspectTemplate(name, <any>undefined, { urn })
            case "google-cloud:dlp/v2:GooglePrivacyDlpV2JobTrigger":
                return new GooglePrivacyDlpV2JobTrigger(name, <any>undefined, { urn })
            case "google-cloud:dlp/v2:GooglePrivacyDlpV2StoredInfoType":
                return new GooglePrivacyDlpV2StoredInfoType(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-cloud", "dlp/v2", _module)
