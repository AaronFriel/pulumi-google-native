// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
 */
export class GooglePrivacyDlpV2StoredInfoType extends pulumi.CustomResource {
    /**
     * Get an existing GooglePrivacyDlpV2StoredInfoType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GooglePrivacyDlpV2StoredInfoType {
        return new GooglePrivacyDlpV2StoredInfoType(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:dlp/v2:GooglePrivacyDlpV2StoredInfoType';

    /**
     * Returns true if the given object is an instance of GooglePrivacyDlpV2StoredInfoType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GooglePrivacyDlpV2StoredInfoType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GooglePrivacyDlpV2StoredInfoType.__pulumiType;
    }


    /**
     * Create a GooglePrivacyDlpV2StoredInfoType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GooglePrivacyDlpV2StoredInfoTypeArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["config"] = args ? args.config : undefined;
            inputs["locationId"] = args ? args.locationId : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["storedInfoTypeId"] = args ? args.storedInfoTypeId : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(GooglePrivacyDlpV2StoredInfoType.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GooglePrivacyDlpV2StoredInfoType resource.
 */
export interface GooglePrivacyDlpV2StoredInfoTypeArgs {
    /**
     * Required. Configuration of the storedInfoType to create.
     */
    readonly config?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2StoredInfoTypeConfig>;
    /**
     * Deprecated. This field has no effect.
     */
    readonly locationId?: pulumi.Input<string>;
    /**
     * Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3
     */
    readonly parent: pulumi.Input<string>;
    /**
     * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     */
    readonly storedInfoTypeId?: pulumi.Input<string>;
}
