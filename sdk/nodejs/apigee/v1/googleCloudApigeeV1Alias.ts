// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
 */
export class GoogleCloudApigeeV1Alias extends pulumi.CustomResource {
    /**
     * Get an existing GoogleCloudApigeeV1Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GoogleCloudApigeeV1Alias {
        return new GoogleCloudApigeeV1Alias(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:apigee/v1:GoogleCloudApigeeV1Alias';

    /**
     * Returns true if the given object is an instance of GoogleCloudApigeeV1Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GoogleCloudApigeeV1Alias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GoogleCloudApigeeV1Alias.__pulumiType;
    }


    /**
     * Create a GoogleCloudApigeeV1Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GoogleCloudApigeeV1AliasArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.parent === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["_password"] = args ? args._password : undefined;
            inputs["alias"] = args ? args.alias : undefined;
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["data"] = args ? args.data : undefined;
            inputs["extensions"] = args ? args.extensions : undefined;
            inputs["format"] = args ? args.format : undefined;
            inputs["ignoreExpiryValidation"] = args ? args.ignoreExpiryValidation : undefined;
            inputs["ignoreNewlineValidation"] = args ? args.ignoreNewlineValidation : undefined;
            inputs["parent"] = args ? args.parent : undefined;
        } else {
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(GoogleCloudApigeeV1Alias.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GoogleCloudApigeeV1Alias resource.
 */
export interface GoogleCloudApigeeV1AliasArgs {
    /**
     * DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.
     */
    readonly _password?: pulumi.Input<string>;
    /**
     * Alias for the key/certificate pair. Values must match the regular expression `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body.
     */
    readonly alias?: pulumi.Input<string>;
    /**
     * The HTTP Content-Type header value specifying the content type of the body.
     */
    readonly contentType?: pulumi.Input<string>;
    /**
     * The HTTP request/response body as raw binary.
     */
    readonly data?: pulumi.Input<string>;
    /**
     * Application specific response metadata. Must be set in the first response for streaming APIs.
     */
    readonly extensions?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    /**
     * Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`
     */
    readonly format?: pulumi.Input<string>;
    /**
     * Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.
     */
    readonly ignoreExpiryValidation?: pulumi.Input<boolean>;
    /**
     * Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.
     */
    readonly ignoreNewlineValidation?: pulumi.Input<boolean>;
    /**
     * Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.
     */
    readonly parent: pulumi.Input<string>;
}
