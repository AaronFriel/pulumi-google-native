// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new category on the portal.
 */
export class GoogleCloudApigeeV1ApiCategory extends pulumi.CustomResource {
    /**
     * Get an existing GoogleCloudApigeeV1ApiCategory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GoogleCloudApigeeV1ApiCategory {
        return new GoogleCloudApigeeV1ApiCategory(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:apigee/v1:GoogleCloudApigeeV1ApiCategory';

    /**
     * Returns true if the given object is an instance of GoogleCloudApigeeV1ApiCategory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GoogleCloudApigeeV1ApiCategory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GoogleCloudApigeeV1ApiCategory.__pulumiType;
    }


    /**
     * Create a GoogleCloudApigeeV1ApiCategory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GoogleCloudApigeeV1ApiCategoryArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["id"] = args ? args.id : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["siteId"] = args ? args.siteId : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(GoogleCloudApigeeV1ApiCategory.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GoogleCloudApigeeV1ApiCategory resource.
 */
export interface GoogleCloudApigeeV1ApiCategoryArgs {
    /**
     * ID of the category (a UUID).
     */
    readonly id?: pulumi.Input<string>;
    /**
     * Name of the category.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`
     */
    readonly parent: pulumi.Input<string>;
    /**
     * Name of the portal.
     */
    readonly siteId?: pulumi.Input<string>;
    /**
     * Time the category was last modified in milliseconds since epoch.
     */
    readonly updateTime?: pulumi.Input<string>;
}
