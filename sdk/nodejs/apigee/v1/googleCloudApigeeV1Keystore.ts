// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
 */
export class GoogleCloudApigeeV1Keystore extends pulumi.CustomResource {
    /**
     * Get an existing GoogleCloudApigeeV1Keystore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GoogleCloudApigeeV1Keystore {
        return new GoogleCloudApigeeV1Keystore(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:apigee/v1:GoogleCloudApigeeV1Keystore';

    /**
     * Returns true if the given object is an instance of GoogleCloudApigeeV1Keystore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GoogleCloudApigeeV1Keystore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GoogleCloudApigeeV1Keystore.__pulumiType;
    }


    /**
     * Create a GoogleCloudApigeeV1Keystore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GoogleCloudApigeeV1KeystoreArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.parent === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["aliases"] = args ? args.aliases : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parent"] = args ? args.parent : undefined;
        } else {
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(GoogleCloudApigeeV1Keystore.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GoogleCloudApigeeV1Keystore resource.
 */
export interface GoogleCloudApigeeV1KeystoreArgs {
    /**
     * Output only. Aliases in this keystore.
     */
    readonly aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`
     */
    readonly parent: pulumi.Input<string>;
}
