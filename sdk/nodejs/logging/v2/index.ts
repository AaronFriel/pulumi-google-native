// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./logBucket";
export * from "./logExclusion";
export * from "./logMetric";
export * from "./logSink";
export * from "./logView";

// Import resources to register:
import { LogBucket } from "./logBucket";
import { LogExclusion } from "./logExclusion";
import { LogMetric } from "./logMetric";
import { LogSink } from "./logSink";
import { LogView } from "./logView";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-cloud:logging/v2:LogBucket":
                return new LogBucket(name, <any>undefined, { urn })
            case "google-cloud:logging/v2:LogExclusion":
                return new LogExclusion(name, <any>undefined, { urn })
            case "google-cloud:logging/v2:LogMetric":
                return new LogMetric(name, <any>undefined, { urn })
            case "google-cloud:logging/v2:LogSink":
                return new LogSink(name, <any>undefined, { urn })
            case "google-cloud:logging/v2:LogView":
                return new LogView(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-cloud", "logging/v2", _module)
