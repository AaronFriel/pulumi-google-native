// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new managed service. A managed service is immutable, and is subject to mandatory 30-day data retention. You cannot move a service or recreate it within 30 days after deletion. One producer project can own no more than 500 services. For security and reliability purposes, a production service should be hosted in a dedicated producer project. Operation
 */
export class ManagedService extends pulumi.CustomResource {
    /**
     * Get an existing ManagedService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedService {
        return new ManagedService(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:servicemanagement/v1:ManagedService';

    /**
     * Returns true if the given object is an instance of ManagedService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedService.__pulumiType;
    }


    /**
     * Create a ManagedService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagedServiceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            inputs["producerProjectId"] = args ? args.producerProjectId : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
        } else {
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ManagedService.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedService resource.
 */
export interface ManagedServiceArgs {
    /**
     * ID of the project that produces and owns this service.
     */
    readonly producerProjectId?: pulumi.Input<string>;
    /**
     * The name of the service. See the [overview](/service-management/overview) for naming requirements.
     */
    readonly serviceName?: pulumi.Input<string>;
}
