// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new game server cluster in a given project and location.
 */
export class GameServerCluster extends pulumi.CustomResource {
    /**
     * Get an existing GameServerCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GameServerCluster {
        return new GameServerCluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:gameservices/v1:GameServerCluster';

    /**
     * Returns true if the given object is an instance of GameServerCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GameServerCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GameServerCluster.__pulumiType;
    }


    /**
     * Create a GameServerCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GameServerClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            if ((!args || args.parent === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'parent'");
            }
            inputs["connectionInfo"] = args ? args.connectionInfo : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["gameServerClusterId"] = args ? args.gameServerClusterId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(GameServerCluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GameServerCluster resource.
 */
export interface GameServerClusterArgs {
    /**
     * The game server cluster connection information. This information is used to manage game server clusters.
     */
    readonly connectionInfo?: pulumi.Input<inputs.gameservices.v1.GameServerClusterConnectionInfo>;
    /**
     * Output only. The creation time.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Human readable description of the cluster.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * ETag of the resource.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * Required. The ID of the game server cluster resource to be created.
     */
    readonly gameServerClusterId?: pulumi.Input<string>;
    /**
     * The labels associated with this game server cluster. Each label is a key-value pair.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`. For example, `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Required. The parent resource name, in the following form: `projects/{project}/locations/{location}/realms/{realm-id}`.
     */
    readonly parent: pulumi.Input<string>;
    /**
     * Output only. The last-modified time.
     */
    readonly updateTime?: pulumi.Input<string>;
}
