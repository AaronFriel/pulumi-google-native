{
  "schemas": {
    "ManagedZonesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#managedZonesListResponse",
          "description": "Type of resource.",
          "type": "string"
        },
        "managedZones": {
          "description": "The managed zone resources.",
          "type": "array",
          "items": {
            "$ref": "ManagedZone"
          }
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        }
      },
      "id": "ManagedZonesListResponse"
    },
    "OperationManagedZoneContext": {
      "type": "object",
      "id": "OperationManagedZoneContext",
      "properties": {
        "oldValue": {
          "description": "The pre-operation ManagedZone resource.",
          "$ref": "ManagedZone"
        },
        "newValue": {
          "$ref": "ManagedZone",
          "description": "The post-operation ManagedZone resource."
        }
      }
    },
    "RRSetRoutingPolicyWrrPolicyWrrPolicyItem": {
      "type": "object",
      "id": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem",
      "properties": {
        "kind": {
          "default": "dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem",
          "type": "string"
        },
        "signatureRrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DNSSEC generated signatures for the above wrr_rrdata."
        },
        "weight": {
          "description": "The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be a decimal in the range [0,1].",
          "type": "number",
          "format": "double"
        },
        "rrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ManagedZoneReverseLookupConfig": {
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZoneReverseLookupConfig"
        }
      },
      "id": "ManagedZoneReverseLookupConfig",
      "type": "object"
    },
    "Change": {
      "properties": {
        "deletions": {
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "type": "array",
          "description": "Which ResourceRecordSets to remove? Must match existing data exactly."
        },
        "isServing": {
          "type": "boolean",
          "description": "If the DNS queries for the zone will be served."
        },
        "status": {
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent but the servers might not be updated yet.",
          "enum": [
            "pending",
            "done"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "startTime": {
          "type": "string",
          "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format."
        },
        "additions": {
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "description": "Which ResourceRecordSets to add?",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "dns#change"
        }
      },
      "id": "Change",
      "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.",
      "type": "object"
    },
    "ChangesListResponse": {
      "properties": {
        "changes": {
          "description": "The requested changes.",
          "type": "array",
          "items": {
            "$ref": "Change"
          }
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "kind": {
          "type": "string",
          "description": "Type of resource.",
          "default": "dns#changesListResponse"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size.",
          "type": "string"
        }
      },
      "description": "The response to a request to enumerate Changes to a ResourceRecordSets collection.",
      "type": "object",
      "id": "ChangesListResponse"
    },
    "Quota": {
      "properties": {
        "rrsetAdditionsPerChange": {
          "description": "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.",
          "format": "int32",
          "type": "integer"
        },
        "rrsetsPerManagedZone": {
          "description": "Maximum allowed number of ResourceRecordSets per zone in the project.",
          "type": "integer",
          "format": "int32"
        },
        "totalRrdataSizePerChange": {
          "format": "int32",
          "description": "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.",
          "type": "integer"
        },
        "dnsKeysPerManagedZone": {
          "description": "Maximum allowed number of DnsKeys per ManagedZone.",
          "format": "int32",
          "type": "integer"
        },
        "targetNameServersPerManagedZone": {
          "description": "Maximum allowed number of target name servers per managed forwarding zone.",
          "format": "int32",
          "type": "integer"
        },
        "resourceRecordsPerRrset": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of ResourceRecords per ResourceRecordSet."
        },
        "whitelistedKeySpecs": {
          "type": "array",
          "items": {
            "$ref": "DnsKeySpec"
          },
          "description": "DNSSEC algorithm and key length types that can be used for DnsKeys."
        },
        "gkeClustersPerPolicy": {
          "type": "integer",
          "description": "Maximum allowed number of GKE clusters per policy.",
          "format": "int32"
        },
        "kind": {
          "default": "dns#quota",
          "type": "string"
        },
        "policies": {
          "format": "int32",
          "description": "Maximum allowed number of policies per project.",
          "type": "integer"
        },
        "networksPerManagedZone": {
          "format": "int32",
          "description": "Maximum allowed number of networks to which a privately scoped zone can be attached.",
          "type": "integer"
        },
        "managedZones": {
          "type": "integer",
          "description": "Maximum allowed number of managed zones in the project.",
          "format": "int32"
        },
        "managedZonesPerNetwork": {
          "description": "Maximum allowed number of managed zones which can be attached to a network.",
          "format": "int32",
          "type": "integer"
        },
        "rrsetDeletionsPerChange": {
          "description": "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.",
          "type": "integer",
          "format": "int32"
        },
        "targetNameServersPerPolicy": {
          "type": "integer",
          "description": "Maximum allowed number of alternative target name servers per policy.",
          "format": "int32"
        },
        "networksPerPolicy": {
          "type": "integer",
          "description": "Maximum allowed number of networks per policy.",
          "format": "int32"
        }
      },
      "id": "Quota",
      "description": "Limits associated with a Project.",
      "type": "object"
    },
    "PoliciesListResponse": {
      "id": "PoliciesListResponse",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "Policy"
          },
          "description": "The policy resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "kind": {
          "description": "Type of resource.",
          "default": "dns#policiesListResponse",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size."
        }
      },
      "type": "object"
    },
    "Project": {
      "properties": {
        "number": {
          "format": "uint64",
          "description": "Unique numeric identifier for the resource; defined by the server (output only).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#project"
        },
        "quota": {
          "$ref": "Quota",
          "description": "Quotas assigned to this project (output only)."
        },
        "id": {
          "type": "string",
          "description": "User assigned unique identifier for the resource (output only)."
        }
      },
      "id": "Project",
      "description": "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console.",
      "type": "object"
    },
    "ManagedZoneServiceDirectoryConfigNamespace": {
      "id": "ManagedZoneServiceDirectoryConfigNamespace",
      "type": "object",
      "properties": {
        "namespaceUrl": {
          "description": "The fully qualified URL of the namespace associated with the zone. This should be formatted like https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZoneServiceDirectoryConfigNamespace"
        },
        "deletionTime": {
          "description": "The time that the namespace backing this zone was deleted, empty string if it still exists. This is in RFC3339 text format. Output only.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.",
      "type": "object",
      "properties": {
        "enableInboundForwarding": {
          "type": "boolean",
          "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address will be allocated from each of the sub-networks that are bound to this policy."
        },
        "kind": {
          "type": "string",
          "default": "dns#policy"
        },
        "alternativeNameServerConfig": {
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.",
          "$ref": "PolicyAlternativeNameServerConfig"
        },
        "description": {
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "User assigned name for this policy."
        },
        "enableLogging": {
          "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.",
          "type": "boolean"
        },
        "id": {
          "description": "Unique identifier for the resource; defined by the server (output only).",
          "format": "uint64",
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "PolicyNetwork"
          },
          "type": "array",
          "description": "List of network names specifying networks to which this policy is applied."
        }
      }
    },
    "ManagedZoneServiceDirectoryConfig": {
      "type": "object",
      "description": "Contains information about Service Directory-backed zones.",
      "properties": {
        "namespace": {
          "$ref": "ManagedZoneServiceDirectoryConfigNamespace",
          "description": "Contains information about the namespace associated with the zone."
        },
        "kind": {
          "default": "dns#managedZoneServiceDirectoryConfig",
          "type": "string"
        }
      },
      "id": "ManagedZoneServiceDirectoryConfig"
    },
    "DnsKeysListResponse": {
      "properties": {
        "dnsKeys": {
          "items": {
            "$ref": "DnsKey"
          },
          "description": "The requested resources.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size.",
          "type": "string"
        },
        "kind": {
          "description": "Type of resource.",
          "default": "dns#dnsKeysListResponse",
          "type": "string"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "description": "The response to a request to enumerate DnsKeys in a ManagedZone.",
      "id": "DnsKeysListResponse",
      "type": "object"
    },
    "ManagedZoneDnsSecConfig": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "DNSSEC is disabled; the zone is not signed.",
            "DNSSEC is enabled; the zone is signed and fully managed.",
            "DNSSEC is enabled, but in a \"transfer\" mode."
          ],
          "enum": [
            "off",
            "on",
            "transfer"
          ],
          "type": "string",
          "description": "Specifies whether DNSSEC is enabled, and what mode it is in."
        },
        "nonExistence": {
          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
          "type": "string",
          "enum": [
            "nsec",
            "nsec3"
          ],
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "defaultKeySpecs": {
          "items": {
            "$ref": "DnsKeySpec"
          },
          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZoneDnsSecConfig"
        }
      },
      "id": "ManagedZoneDnsSecConfig",
      "type": "object"
    },
    "ManagedZoneOperationsListResponse": {
      "id": "ManagedZoneOperationsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZoneOperationsListResponse"
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "operations": {
          "description": "The operation resources.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size."
        }
      },
      "type": "object"
    },
    "ManagedZonePrivateVisibilityConfig": {
      "type": "object",
      "id": "ManagedZonePrivateVisibilityConfig",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfig"
        },
        "networks": {
          "items": {
            "$ref": "ManagedZonePrivateVisibilityConfigNetwork"
          },
          "description": "The list of VPC networks that can see this zone.",
          "type": "array"
        }
      }
    },
    "ManagedZonePrivateVisibilityConfigNetwork": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfigNetwork"
        },
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        }
      },
      "id": "ManagedZonePrivateVisibilityConfigNetwork"
    },
    "PolicyAlternativeNameServerConfigTargetNameServer": {
      "id": "PolicyAlternativeNameServerConfigTargetNameServer",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 address to forward to."
        },
        "forwardingPath": {
          "enum": [
            "default",
            "private"
          ],
          "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses go to the VPC, non-RFC1918 addresses go to the Internet. When set to PRIVATE, Cloud DNS will always send queries through VPC for this target.",
          "enumDescriptions": [
            "Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses will forward to the target through the Internet",
            "Cloud DNS will always forward to this target through the VPC."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedZonePeeringConfig": {
      "id": "ManagedZonePeeringConfig",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZonePeeringConfig"
        },
        "targetNetwork": {
          "description": "The network with which to peer.",
          "$ref": "ManagedZonePeeringConfigTargetNetwork"
        }
      }
    },
    "DnsKey": {
      "description": "A DNSSEC key pair.",
      "id": "DnsKey",
      "properties": {
        "description": {
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, will be used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag will be cleared and this key will be used to sign only resource record sets of other types. Immutable after creation time.",
          "enum": [
            "keySigning",
            "zoneSigning"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "keyTag": {
          "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "default": "dns#dnsKey"
        },
        "isActive": {
          "description": "Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.",
          "type": "boolean"
        },
        "digests": {
          "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.",
          "items": {
            "$ref": "DnsKeyDigest"
          },
          "type": "array"
        },
        "keyLength": {
          "type": "integer",
          "format": "uint32",
          "description": "Length of the key in bits. Specified at creation time then immutable."
        },
        "algorithm": {
          "type": "string",
          "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "rsasha1",
            "rsasha256",
            "rsasha512",
            "ecdsap256sha256",
            "ecdsap384sha384"
          ]
        },
        "creationTime": {
          "type": "string",
          "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
        },
        "publicKey": {
          "description": "Base64 encoded public half of this key. Output only.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceRecordSet": {
      "type": "object",
      "id": "ResourceRecordSet",
      "properties": {
        "type": {
          "description": "The identifier of a supported record type. See the list of Supported DNS record types.",
          "type": "string"
        },
        "ttl": {
          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "default": "dns#resourceRecordSet"
        },
        "signatureRrdatas": {
          "items": {
            "type": "string"
          },
          "description": "As defined in RFC 4034 (section 3.2).",
          "type": "array"
        },
        "rrdatas": {
          "items": {
            "type": "string"
          },
          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "For example, www.example.com."
        },
        "routingPolicy": {
          "description": "Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy(dynamic). An error is returned otherwise.",
          "$ref": "RRSetRoutingPolicy"
        }
      },
      "description": "A unit of data that will be returned by the DNS servers."
    },
    "ManagedZone": {
      "id": "ManagedZone",
      "properties": {
        "creationTime": {
          "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only.",
          "type": "string"
        },
        "labels": {
          "description": "User labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "forwardingConfig": {
          "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.",
          "$ref": "ManagedZoneForwardingConfig"
        },
        "visibility": {
          "enum": [
            "public",
            "private"
          ],
          "type": "string",
          "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "serviceDirectoryConfig": {
          "$ref": "ManagedZoneServiceDirectoryConfig",
          "description": "This field links to the associated service directory namespace. This field should not be set for public zones or forwarding zones."
        },
        "id": {
          "description": "Unique identifier for the resource; defined by the server (output only)",
          "format": "uint64",
          "type": "string"
        },
        "description": {
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.",
          "type": "string"
        },
        "reverseLookupConfig": {
          "$ref": "ManagedZoneReverseLookupConfig",
          "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS will resolve reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
        },
        "name": {
          "type": "string",
          "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
        },
        "nameServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
        },
        "peeringConfig": {
          "$ref": "ManagedZonePeeringConfig",
          "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
        },
        "nameServerSet": {
          "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users will leave this field unset.",
          "type": "string"
        },
        "dnsName": {
          "description": "The DNS name of this managed zone, for instance \"example.com.\".",
          "type": "string"
        },
        "dnssecConfig": {
          "description": "DNSSEC configuration.",
          "$ref": "ManagedZoneDnsSecConfig"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZone"
        },
        "privateVisibilityConfig": {
          "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.",
          "$ref": "ManagedZonePrivateVisibilityConfig"
        }
      },
      "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.",
      "type": "object"
    },
    "PolicyAlternativeNameServerConfig": {
      "type": "object",
      "id": "PolicyAlternativeNameServerConfig",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#policyAlternativeNameServerConfig"
        },
        "targetNameServers": {
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.",
          "type": "array",
          "items": {
            "$ref": "PolicyAlternativeNameServerConfigTargetNameServer"
          }
        }
      }
    },
    "PolicyNetwork": {
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#policyNetwork"
        },
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        }
      },
      "id": "PolicyNetwork",
      "type": "object"
    },
    "ManagedZoneForwardingConfig": {
      "properties": {
        "targetNameServers": {
          "description": "List of target name servers to forward to. Cloud DNS will select the best available name server if more than one target is given.",
          "type": "array",
          "items": {
            "$ref": "ManagedZoneForwardingConfigNameServerTarget"
          }
        },
        "kind": {
          "default": "dns#managedZoneForwardingConfig",
          "type": "string"
        }
      },
      "id": "ManagedZoneForwardingConfig",
      "type": "object"
    },
    "ManagedZonePeeringConfigTargetNetwork": {
      "id": "ManagedZonePeeringConfigTargetNetwork",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZonePeeringConfigTargetNetwork"
        },
        "deactivateTime": {
          "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.",
          "type": "string"
        },
        "networkUrl": {
          "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PoliciesUpdateResponse": {
      "id": "PoliciesUpdateResponse",
      "properties": {
        "policy": {
          "$ref": "Policy"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "type": "object"
    },
    "DnsKeySpec": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#dnsKeySpec",
          "type": "string"
        },
        "keyType": {
          "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, will only be used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and will be used to sign all other types of resource record sets.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "keySigning",
            "zoneSigning"
          ]
        },
        "keyLength": {
          "description": "Length of the keys in bits.",
          "type": "integer",
          "format": "uint32"
        },
        "algorithm": {
          "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
          "type": "string",
          "enum": [
            "rsasha1",
            "rsasha256",
            "rsasha512",
            "ecdsap256sha256",
            "ecdsap384sha384"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.",
      "id": "DnsKeySpec"
    },
    "RRSetRoutingPolicy": {
      "properties": {
        "wrrPolicy": {
          "$ref": "RRSetRoutingPolicyWrrPolicy"
        },
        "geoPolicy": {
          "$ref": "RRSetRoutingPolicyGeoPolicy"
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicy",
          "type": "string"
        }
      },
      "description": "A RRSetRoutingPolicy represents ResourceRecordSet data that will be returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.",
      "id": "RRSetRoutingPolicy",
      "type": "object"
    },
    "ResponseHeader": {
      "type": "object",
      "id": "ResponseHeader",
      "properties": {
        "operationId": {
          "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).",
          "type": "string"
        }
      },
      "description": "Elements common to every response."
    },
    "RRSetRoutingPolicyGeoPolicy": {
      "id": "RRSetRoutingPolicyGeoPolicy",
      "properties": {
        "items": {
          "type": "array",
          "description": "The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.",
          "items": {
            "$ref": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem"
          }
        },
        "failovers": {
          "items": {
            "$ref": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem"
          },
          "type": "array",
          "description": "If the health check for the primary target for a geo location returns an unhealthy status, the failover target is returned instead. This failover configuration is not mandatory. If a failover is not provided, the primary target won't be healthchecked - we'll return the primarily configured rrdata irrespective of whether it is healthy or not."
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicyGeoPolicy",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceRecordSetsListResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "kind": {
          "default": "dns#resourceRecordSetsListResponse",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size."
        },
        "rrsets": {
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "type": "array",
          "description": "The resource record set resources."
        }
      },
      "type": "object",
      "id": "ResourceRecordSetsListResponse"
    },
    "ResourceRecordSetsDeleteResponse": {
      "type": "object",
      "properties": {},
      "id": "ResourceRecordSetsDeleteResponse"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "status": {
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "pending",
            "done"
          ],
          "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
          "type": "string"
        },
        "zoneContext": {
          "description": "Only populated if the operation targeted a ManagedZone (output only).",
          "$ref": "OperationManagedZoneContext"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
        },
        "dnsKeyContext": {
          "$ref": "OperationDnsKeyContext",
          "description": "Only populated if the operation targeted a DnsKey (output only)."
        },
        "type": {
          "description": "Type of the operation. Operations include insert, update, and delete (output only).",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only)."
        },
        "kind": {
          "type": "string",
          "default": "dns#operation"
        },
        "user": {
          "type": "string",
          "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"
        }
      },
      "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.",
      "type": "object"
    },
    "RRSetRoutingPolicyGeoPolicyGeoPolicyItem": {
      "type": "object",
      "properties": {
        "signatureRrdatas": {
          "description": "DNSSEC generated signatures for the above geo_rrdata.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "location": {
          "type": "string",
          "description": "The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc."
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem",
          "type": "string"
        },
        "rrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem"
    },
    "ManagedZoneForwardingConfigNameServerTarget": {
      "id": "ManagedZoneForwardingConfigNameServerTarget",
      "type": "object",
      "properties": {
        "forwardingPath": {
          "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses go to the VPC, non-RFC1918 addresses go to the Internet. When set to PRIVATE, Cloud DNS will always send queries through VPC for this target.",
          "type": "string",
          "enumDescriptions": [
            "Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses will forward to the target through the Internet",
            "Cloud DNS will always forward to this target through the VPC."
          ],
          "enum": [
            "default",
            "private"
          ]
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 address of a target name server."
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZoneForwardingConfigNameServerTarget"
        }
      }
    },
    "RRSetRoutingPolicyWrrPolicy": {
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#rRSetRoutingPolicyWrrPolicy"
        },
        "items": {
          "items": {
            "$ref": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem"
          },
          "type": "array"
        }
      },
      "id": "RRSetRoutingPolicyWrrPolicy",
      "type": "object"
    },
    "PoliciesPatchResponse": {
      "id": "PoliciesPatchResponse",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      }
    },
    "OperationDnsKeyContext": {
      "type": "object",
      "properties": {
        "oldValue": {
          "description": "The pre-operation DnsKey resource.",
          "$ref": "DnsKey"
        },
        "newValue": {
          "description": "The post-operation DnsKey resource.",
          "$ref": "DnsKey"
        }
      },
      "id": "OperationDnsKeyContext"
    },
    "DnsKeyDigest": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Specifies the algorithm used to calculate this digest.",
          "enum": [
            "sha1",
            "sha256",
            "sha384"
          ]
        },
        "digest": {
          "type": "string",
          "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
        }
      },
      "id": "DnsKeyDigest",
      "type": "object"
    }
  },
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  },
  "kind": "discovery#restDescription",
  "name": "dns",
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/dns/docs",
  "description": "",
  "version": "v1beta2",
  "id": "dns:v1beta2",
  "baseUrl": "https://dns.googleapis.com/",
  "mtlsRootUrl": "https://dns.mtls.googleapis.com/",
  "title": "Cloud DNS API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20201215",
  "rootUrl": "https://dns.googleapis.com/",
  "batchPath": "batch",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ndev.clouddns.readonly": {
          "description": "View your DNS records hosted by Google Cloud DNS"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/ndev.clouddns.readwrite": {
          "description": "View and manage your DNS records hosted by Google Cloud DNS"
        }
      }
    }
  },
  "ownerName": "Google",
  "protocol": "rest",
  "basePath": "",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "changes": {
      "methods": {
        "list": {
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "httpMethod": "GET",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "sortOrder": {
              "type": "string",
              "description": "Sorting order direction: 'ascending' or 'descending'.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return."
            },
            "managedZone": {
              "location": "path",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string"
            },
            "sortBy": {
              "default": "changeSequence",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                ""
              ],
              "description": "Sorting criterion. The only supported value is change sequence.",
              "enum": [
                "changeSequence"
              ]
            }
          },
          "response": {
            "$ref": "ChangesListResponse"
          },
          "description": "Enumerate Changes to a ResourceRecordSet collection.",
          "id": "dns.changes.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "get": {
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}",
          "parameters": {
            "changeId": {
              "type": "string",
              "description": "The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.",
              "location": "path",
              "required": true
            },
            "managedZone": {
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "location": "path"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes/{changeId}",
          "httpMethod": "GET",
          "description": "Fetch the representation of an existing Change.",
          "id": "dns.changes.get",
          "response": {
            "$ref": "Change"
          },
          "parameterOrder": [
            "project",
            "managedZone",
            "changeId"
          ]
        },
        "create": {
          "id": "dns.changes.create",
          "httpMethod": "POST",
          "response": {
            "$ref": "Change"
          },
          "request": {
            "$ref": "Change"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "parameters": {
            "managedZone": {
              "type": "string",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "description": "Atomically update the ResourceRecordSet collection.",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/changes"
        }
      }
    },
    "managedZoneOperations": {
      "methods": {
        "get": {
          "parameters": {
            "managedZone": {
              "required": true,
              "type": "string",
              "description": "Identifies the managed zone addressed by this request.",
              "location": "path"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "operation": {
              "description": "Identifies the operation addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}",
          "parameterOrder": [
            "project",
            "managedZone",
            "operation"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations/{operation}",
          "description": "Fetch the representation of an existing Operation.",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "GET",
          "id": "dns.managedZoneOperations.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations",
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            },
            "managedZone": {
              "location": "path",
              "type": "string",
              "description": "Identifies the managed zone addressed by this request.",
              "required": true
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.",
              "location": "query"
            },
            "sortBy": {
              "enum": [
                "startTime",
                "id"
              ],
              "description": "Sorting criterion. The only supported values are START_TIME and ID.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "startTime"
            }
          },
          "response": {
            "$ref": "ManagedZoneOperationsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/operations",
          "description": "Enumerate Operations for the given ManagedZone.",
          "id": "dns.managedZoneOperations.list",
          "parameterOrder": [
            "project",
            "managedZone"
          ]
        }
      }
    },
    "policies": {
      "methods": {
        "create": {
          "flatPath": "dns/v1beta2/projects/{project}/policies",
          "request": {
            "$ref": "Policy"
          },
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "id": "dns.policies.create",
          "description": "Create a new Policy",
          "path": "dns/v1beta2/projects/{project}/policies",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project"
          ],
          "response": {
            "$ref": "Policy"
          },
          "httpMethod": "POST"
        },
        "delete": {
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true
            },
            "policy": {
              "required": true,
              "location": "path",
              "description": "User given friendly name of the policy addressed by this request.",
              "type": "string"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameterOrder": [
            "project",
            "policy"
          ],
          "httpMethod": "DELETE",
          "description": "Delete a previously created Policy. Will fail if the policy is still being referenced by a network.",
          "id": "dns.policies.delete"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.policies.list",
          "description": "Enumerate all Policies associated with a project.",
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/policies",
          "parameterOrder": [
            "project"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/policies",
          "response": {
            "$ref": "PoliciesListResponse"
          },
          "parameters": {
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request."
            }
          }
        },
        "update": {
          "httpMethod": "PUT",
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "request": {
            "$ref": "Policy"
          },
          "description": "Update an existing Policy.",
          "parameters": {
            "policy": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "User given friendly name of the policy addressed by this request."
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "PoliciesUpdateResponse"
          },
          "parameterOrder": [
            "project",
            "policy"
          ],
          "id": "dns.policies.update",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}"
        },
        "get": {
          "parameters": {
            "policy": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "User given friendly name of the policy addressed by this request."
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "Policy"
          },
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameterOrder": [
            "project",
            "policy"
          ],
          "id": "dns.policies.get",
          "description": "Fetch the representation of an existing Policy.",
          "httpMethod": "GET"
        },
        "patch": {
          "description": "Apply a partial update to an existing Policy.",
          "httpMethod": "PATCH",
          "path": "dns/v1beta2/projects/{project}/policies/{policy}",
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "policy": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "User given friendly name of the policy addressed by this request."
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/policies/{policy}",
          "id": "dns.policies.patch",
          "parameterOrder": [
            "project",
            "policy"
          ],
          "response": {
            "$ref": "PoliciesPatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "request": {
            "$ref": "Policy"
          }
        }
      }
    },
    "resourceRecordSets": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets",
          "description": "Enumerate ResourceRecordSets that have been created but not yet deleted.",
          "id": "dns.resourceRecordSets.list",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "parameters": {
            "managedZone": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "name": {
              "description": "Restricts the list to return only records with this fully qualified domain name.",
              "type": "string",
              "location": "query"
            },
            "type": {
              "type": "string",
              "description": "Restricts the list to return only records of this type. If present, the \"name\" parameter must also be present.",
              "location": "query"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "format": "int32",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "ResourceRecordSetsListResponse"
          },
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets"
        }
      }
    },
    "projects": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Project"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}",
          "parameterOrder": [
            "project"
          ],
          "description": "Fetch the representation of an existing Project.",
          "parameters": {
            "project": {
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "dns.projects.get",
          "flatPath": "dns/v1beta2/projects/{project}",
          "httpMethod": "GET"
        }
      },
      "resources": {
        "managedZones": {
          "resources": {
            "rrsets": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "parameterOrder": [
                    "project",
                    "managedZone",
                    "name",
                    "type"
                  ],
                  "id": "dns.projects.managedZones.rrsets.patch",
                  "parameters": {
                    "clientOperationId": {
                      "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
                      "location": "query",
                      "type": "string"
                    },
                    "project": {
                      "description": "Identifies the project addressed by this request.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "managedZone": {
                      "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Fully qualified domain name.",
                      "type": "string"
                    },
                    "type": {
                      "required": true,
                      "description": "RRSet type.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ResourceRecordSet"
                  },
                  "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "response": {
                    "$ref": "ResourceRecordSet"
                  },
                  "description": "Apply a partial update to an existing ResourceRecordSet.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Fully qualified domain name."
                    },
                    "type": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "RRSet type."
                    },
                    "project": {
                      "description": "Identifies the project addressed by this request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "managedZone": {
                      "required": true,
                      "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
                      "type": "string",
                      "location": "path"
                    },
                    "clientOperationId": {
                      "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Fetch the representation of an existing ResourceRecordSet.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/ndev.clouddns.readonly",
                    "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
                  ],
                  "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "response": {
                    "$ref": "ResourceRecordSet"
                  },
                  "parameterOrder": [
                    "project",
                    "managedZone",
                    "name",
                    "type"
                  ],
                  "id": "dns.projects.managedZones.rrsets.get"
                },
                "create": {
                  "parameterOrder": [
                    "project",
                    "managedZone"
                  ],
                  "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets",
                  "description": "Create a new ResourceRecordSet.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
                  ],
                  "parameters": {
                    "clientOperationId": {
                      "type": "string",
                      "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
                      "location": "query"
                    },
                    "project": {
                      "required": true,
                      "description": "Identifies the project addressed by this request.",
                      "location": "path",
                      "type": "string"
                    },
                    "managedZone": {
                      "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "ResourceRecordSet"
                  },
                  "response": {
                    "$ref": "ResourceRecordSet"
                  },
                  "httpMethod": "POST",
                  "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets",
                  "id": "dns.projects.managedZones.rrsets.create"
                },
                "delete": {
                  "parameterOrder": [
                    "project",
                    "managedZone",
                    "name",
                    "type"
                  ],
                  "id": "dns.projects.managedZones.rrsets.delete",
                  "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/rrsets/{name}/{type}",
                  "description": "Delete a previously created ResourceRecordSet.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "ResourceRecordSetsDeleteResponse"
                  },
                  "parameters": {
                    "project": {
                      "required": true,
                      "description": "Identifies the project addressed by this request.",
                      "location": "path",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Fully qualified domain name."
                    },
                    "type": {
                      "location": "path",
                      "description": "RRSet type.",
                      "required": true,
                      "type": "string"
                    },
                    "managedZone": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
                    },
                    "clientOperationId": {
                      "location": "query",
                      "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "managedZones": {
      "methods": {
        "create": {
          "flatPath": "dns/v1beta2/projects/{project}/managedZones",
          "parameters": {
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "request": {
            "$ref": "ManagedZone"
          },
          "id": "dns.managedZones.create",
          "path": "dns/v1beta2/projects/{project}/managedZones",
          "parameterOrder": [
            "project"
          ],
          "response": {
            "$ref": "ManagedZone"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "POST",
          "description": "Create a new ManagedZone."
        },
        "delete": {
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "description": "Delete a previously created ManagedZone.",
          "id": "dns.managedZones.delete",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request."
            }
          },
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}"
        },
        "update": {
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "request": {
            "$ref": "ManagedZone"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.managedZones.update",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "PUT",
          "description": "Update an existing ManagedZone.",
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "managedZone": {
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "required": true
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "parameterOrder": [
            "project",
            "managedZone"
          ]
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "response": {
            "$ref": "ManagedZone"
          },
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "parameters": {
            "managedZone": {
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "dns.managedZones.get",
          "description": "Fetch the representation of an existing ManagedZone."
        },
        "list": {
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.",
              "format": "int32",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string"
            },
            "dnsName": {
              "description": "Restricts the list to return only zones with this domain name.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "dns/v1beta2/projects/{project}/managedZones",
          "response": {
            "$ref": "ManagedZonesListResponse"
          },
          "flatPath": "dns/v1beta2/projects/{project}/managedZones",
          "id": "dns.managedZones.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Enumerate ManagedZones that have been created but not yet deleted.",
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ]
        },
        "patch": {
          "description": "Apply a partial update to an existing ManagedZone.",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "parameters": {
            "managedZone": {
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "location": "path",
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true
            }
          },
          "id": "dns.managedZones.patch",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "ManagedZone"
          },
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        }
      }
    },
    "dnsKeys": {
      "methods": {
        "list": {
          "description": "Enumerate DnsKeys to a ResourceRecordSet collection.",
          "parameterOrder": [
            "project",
            "managedZone"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys",
          "parameters": {
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request."
            },
            "managedZone": {
              "type": "string",
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true
            },
            "digestType": {
              "location": "query",
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type will be computed and displayed.",
              "type": "string"
            }
          },
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys",
          "id": "dns.dnsKeys.list",
          "response": {
            "$ref": "DnsKeysListResponse"
          },
          "httpMethod": "GET"
        },
        "get": {
          "httpMethod": "GET",
          "path": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "parameters": {
            "dnsKeyId": {
              "description": "The identifier of the requested DnsKey.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "digestType": {
              "type": "string",
              "location": "query",
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type will be computed and displayed."
            },
            "managedZone": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "DnsKey"
          },
          "flatPath": "dns/v1beta2/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "parameterOrder": [
            "project",
            "managedZone",
            "dnsKeyId"
          ],
          "id": "dns.dnsKeys.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetch the representation of an existing DnsKey."
        }
      }
    }
  },
  "canonicalName": "Dns"
}
