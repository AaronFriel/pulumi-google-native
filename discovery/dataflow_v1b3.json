{
  "rootUrl": "https://dataflow.googleapis.com/",
  "title": "Dataflow API",
  "batchPath": "batch",
  "baseUrl": "https://dataflow.googleapis.com/",
  "name": "dataflow",
  "revision": "20201204",
  "version": "v1b3",
  "canonicalName": "Dataflow",
  "id": "dataflow:v1b3",
  "mtlsRootUrl": "https://dataflow.mtls.googleapis.com/",
  "description": "Manages Google Cloud Dataflow projects on Google Cloud Platform.",
  "resources": {
    "projects": {
      "methods": {
        "deleteSnapshots": {
          "parameterOrder": [
            "projectId"
          ],
          "id": "dataflow.projects.deleteSnapshots",
          "path": "v1b3/projects/{projectId}/snapshots",
          "description": "Deletes a snapshot.",
          "parameters": {
            "projectId": {
              "type": "string",
              "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
              "required": true,
              "location": "path"
            },
            "snapshotId": {
              "description": "The ID of the snapshot.",
              "type": "string",
              "location": "query"
            },
            "location": {
              "location": "query",
              "description": "The location that contains this snapshot.",
              "type": "string"
            }
          },
          "httpMethod": "DELETE",
          "response": {
            "$ref": "DeleteSnapshotResponse"
          },
          "flatPath": "v1b3/projects/{projectId}/snapshots",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "workerMessages": {
          "flatPath": "v1b3/projects/{projectId}/WorkerMessages",
          "path": "v1b3/projects/{projectId}/WorkerMessages",
          "parameters": {
            "projectId": {
              "required": true,
              "location": "path",
              "description": "The project to send the WorkerMessages to.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "id": "dataflow.projects.workerMessages",
          "description": "Send a worker_message to the service.",
          "httpMethod": "POST",
          "request": {
            "$ref": "SendWorkerMessagesRequest"
          },
          "response": {
            "$ref": "SendWorkerMessagesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/compute",
            "https://www.googleapis.com/auth/compute.readonly",
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        }
      },
      "resources": {
        "jobs": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "parameters": {
                "location": {
                  "type": "string",
                  "location": "query",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job."
                },
                "projectId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string"
                },
                "replaceJobId": {
                  "type": "string",
                  "location": "query",
                  "description": "Deprecated. This field is now in the Job message."
                },
                "view": {
                  "enumDescriptions": [
                    "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                    "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                    "Request all information available for this job.",
                    "Request summary info and limited job description data for steps, labels and environment."
                  ],
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "The level of information requested in response."
                }
              },
              "id": "dataflow.projects.jobs.create",
              "path": "v1b3/projects/{projectId}/jobs",
              "response": {
                "$ref": "Job"
              },
              "request": {
                "$ref": "Job"
              },
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "description": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "projectId"
              ]
            },
            "snapshot": {
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot",
              "request": {
                "$ref": "SnapshotJobRequest"
              },
              "id": "dataflow.projects.jobs.snapshot",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Snapshot the state of a streaming job.",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Snapshot"
              },
              "httpMethod": "POST",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The project which owns the job to be snapshotted."
                },
                "jobId": {
                  "required": true,
                  "description": "The job to be snapshotted.",
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v1b3/projects/{projectId}/jobs/{jobId}:snapshot"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Job"
              },
              "id": "dataflow.projects.jobs.get",
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "parameters": {
                "view": {
                  "location": "query",
                  "description": "The level of information requested in response.",
                  "type": "string",
                  "enumDescriptions": [
                    "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                    "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                    "Request all information available for this job.",
                    "Request summary info and limited job description data for steps, labels and environment."
                  ],
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                  "location": "query"
                },
                "jobId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The job ID."
                },
                "projectId": {
                  "type": "string",
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`."
            },
            "list": {
              "description": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "ListJobsResponse"
              },
              "flatPath": "v1b3/projects/{projectId}/jobs",
              "id": "dataflow.projects.jobs.list",
              "path": "v1b3/projects/{projectId}/jobs",
              "parameters": {
                "location": {
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "If there are many jobs, limit response to at most this many. The actual number of jobs returned will be the lesser of max_responses and an unspecified server-defined limit.",
                  "type": "integer"
                },
                "filter": {
                  "description": "The kind of filter to use.",
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ],
                  "enumDescriptions": [
                    "The filter isn't specified, or is unknown. This returns all jobs ordered on descending `JobUuid`.",
                    "Returns all running jobs first ordered on creation timestamp, then returns all terminated jobs ordered on the termination timestamp.",
                    "Filters the jobs that have a terminated state, ordered on the termination timestamp. Example terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`, `JOB_STATE_DRAINED`, etc.",
                    "Filters the jobs that are running ordered on the creation timestamp."
                  ],
                  "location": "query",
                  "type": "string"
                },
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                    "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                    "Request all information available for this job.",
                    "Request summary info and limited job description data for steps, labels and environment."
                  ],
                  "type": "string",
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ]
                },
                "projectId": {
                  "location": "path",
                  "required": true,
                  "description": "The project which owns the jobs.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Set this to the 'next_page_token' field of a previous response to request additional results in a long list.",
                  "type": "string"
                }
              }
            },
            "update": {
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}",
              "path": "v1b3/projects/{projectId}/jobs/{jobId}",
              "parameters": {
                "projectId": {
                  "required": true,
                  "description": "The ID of the Cloud Platform project that the job belongs to.",
                  "location": "path",
                  "type": "string"
                },
                "jobId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The job ID."
                },
                "location": {
                  "type": "string",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PUT",
              "request": {
                "$ref": "Job"
              },
              "description": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
              "id": "dataflow.projects.jobs.update",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Job"
              }
            },
            "getMetrics": {
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "id": "dataflow.projects.jobs.getMetrics",
              "httpMethod": "GET",
              "response": {
                "$ref": "JobMetrics"
              },
              "parameters": {
                "startTime": {
                  "description": "Return only metric data that has changed since this time. Default is to return all information about all metrics for the job.",
                  "location": "query",
                  "type": "string",
                  "format": "google-datetime"
                },
                "location": {
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                  "location": "query",
                  "type": "string"
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "description": "A project id.",
                  "location": "path"
                },
                "jobId": {
                  "type": "string",
                  "location": "path",
                  "description": "The job to get metrics for.",
                  "required": true
                }
              },
              "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/metrics",
              "description": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`."
            },
            "aggregated": {
              "flatPath": "v1b3/projects/{projectId}/jobs:aggregated",
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1b3/projects/{projectId}/jobs:aggregated",
              "parameters": {
                "view": {
                  "type": "string",
                  "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                  "location": "query",
                  "enumDescriptions": [
                    "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                    "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                    "Request all information available for this job.",
                    "Request summary info and limited job description data for steps, labels and environment."
                  ],
                  "enum": [
                    "JOB_VIEW_UNKNOWN",
                    "JOB_VIEW_SUMMARY",
                    "JOB_VIEW_ALL",
                    "JOB_VIEW_DESCRIPTION"
                  ]
                },
                "filter": {
                  "enum": [
                    "UNKNOWN",
                    "ALL",
                    "TERMINATED",
                    "ACTIVE"
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "The kind of filter to use.",
                  "enumDescriptions": [
                    "The filter isn't specified, or is unknown. This returns all jobs ordered on descending `JobUuid`.",
                    "Returns all running jobs first ordered on creation timestamp, then returns all terminated jobs ordered on the termination timestamp.",
                    "Filters the jobs that have a terminated state, ordered on the termination timestamp. Example terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`, `JOB_STATE_DRAINED`, etc.",
                    "Filters the jobs that are running ordered on the creation timestamp."
                  ]
                },
                "projectId": {
                  "location": "path",
                  "type": "string",
                  "description": "The project which owns the jobs.",
                  "required": true
                },
                "location": {
                  "type": "string",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Set this to the 'next_page_token' field of a previous response to request additional results in a long list.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "If there are many jobs, limit response to at most this many. The actual number of jobs returned will be the lesser of max_responses and an unspecified server-defined limit."
                }
              },
              "description": "List the jobs of a project across all regions.",
              "response": {
                "$ref": "ListJobsResponse"
              },
              "id": "dataflow.projects.jobs.aggregated"
            }
          },
          "resources": {
            "messages": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "parameters": {
                    "location": {
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "If specified, determines the maximum number of messages to return. If unspecified, the service may choose an appropriate default, or may return an arbitrarily large number of results.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "minimumImportance": {
                      "type": "string",
                      "enum": [
                        "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                        "JOB_MESSAGE_DEBUG",
                        "JOB_MESSAGE_DETAILED",
                        "JOB_MESSAGE_BASIC",
                        "JOB_MESSAGE_WARNING",
                        "JOB_MESSAGE_ERROR"
                      ],
                      "description": "Filter to only get messages with importance \u003e= level",
                      "enumDescriptions": [
                        "The message importance isn't specified, or is unknown.",
                        "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.",
                        "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.",
                        "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                        "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                        "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                      ],
                      "location": "query"
                    },
                    "startTime": {
                      "description": "If specified, return only messages with timestamps \u003e= start_time. The default is the job creation time (i.e. beginning of messages).",
                      "location": "query",
                      "format": "google-datetime",
                      "type": "string"
                    },
                    "endTime": {
                      "format": "google-datetime",
                      "description": "Return only messages with timestamps \u003c end_time. The default is now (i.e. return up to the latest messages available).",
                      "location": "query",
                      "type": "string"
                    },
                    "jobId": {
                      "description": "The job to get messages about.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "projectId": {
                      "description": "A project id.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "If supplied, this should be the value of next_page_token returned by an earlier call. This will cause the next page of results to be returned."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "response": {
                    "$ref": "ListJobMessagesResponse"
                  },
                  "id": "dataflow.projects.jobs.messages.list",
                  "httpMethod": "GET",
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/messages",
                  "description": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`."
                }
              }
            },
            "workItems": {
              "methods": {
                "reportStatus": {
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "request": {
                    "$ref": "ReportWorkItemStatusRequest"
                  },
                  "description": "Reports the status of dataflow WorkItems leased by a worker.",
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus",
                  "response": {
                    "$ref": "ReportWorkItemStatusResponse"
                  },
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:reportStatus",
                  "id": "dataflow.projects.jobs.workItems.reportStatus",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "jobId": {
                      "description": "The job which the WorkItem is part of.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The project which owns the WorkItem's job.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "lease": {
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease",
                  "description": "Leases a dataflow WorkItem to run.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "LeaseWorkItemRequest"
                  },
                  "id": "dataflow.projects.jobs.workItems.lease",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "LeaseWorkItemResponse"
                  },
                  "parameters": {
                    "jobId": {
                      "description": "Identifies the workflow job this worker belongs to.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Identifies the project this worker belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/workItems:lease"
                }
              }
            },
            "debug": {
              "methods": {
                "sendCapture": {
                  "description": "Send encoded debug capture data for component.",
                  "response": {
                    "$ref": "SendDebugCaptureResponse"
                  },
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/sendCapture",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SendDebugCaptureRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "jobId": {
                      "location": "path",
                      "description": "The job id.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "description": "The project id.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "dataflow.projects.jobs.debug.sendCapture",
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ]
                },
                "getConfig": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig",
                  "id": "dataflow.projects.jobs.debug.getConfig",
                  "description": "Get encoded debug configuration for component. Not cacheable.",
                  "request": {
                    "$ref": "GetDebugConfigRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "jobId": {
                      "type": "string",
                      "description": "The job id.",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "description": "The project id.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GetDebugConfigResponse"
                  },
                  "flatPath": "v1b3/projects/{projectId}/jobs/{jobId}/debug/getConfig"
                }
              }
            }
          }
        },
        "templates": {
          "methods": {
            "launch": {
              "flatPath": "v1b3/projects/{projectId}/templates:launch",
              "response": {
                "$ref": "LaunchTemplateResponse"
              },
              "description": "Launch a template.",
              "request": {
                "$ref": "LaunchTemplateParameters"
              },
              "parameters": {
                "projectId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to."
                },
                "validateOnly": {
                  "description": "If true, the request is validated but not actually executed. Defaults to false.",
                  "type": "boolean",
                  "location": "query"
                },
                "dynamicTemplate.gcsPath": {
                  "location": "query",
                  "type": "string",
                  "description": "Path to dynamic template spec file on GCS. The file must be a Json serialized DynamicTemplateFieSpec object."
                },
                "dynamicTemplate.stagingLocation": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Storage path for staging dependencies. Must be a valid Cloud Storage URL, beginning with `gs://`."
                },
                "gcsPath": {
                  "description": "A Cloud Storage path to the template from which to create the job. Must be valid Cloud Storage URL, beginning with 'gs://'.",
                  "type": "string",
                  "location": "query"
                },
                "location": {
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "dataflow.projects.templates.launch",
              "httpMethod": "POST",
              "path": "v1b3/projects/{projectId}/templates:launch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "projectId"
              ]
            },
            "create": {
              "flatPath": "v1b3/projects/{projectId}/templates",
              "response": {
                "$ref": "Job"
              },
              "id": "dataflow.projects.templates.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "description": "Creates a Cloud Dataflow job from a template.",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "CreateJobFromTemplateRequest"
              },
              "parameterOrder": [
                "projectId"
              ],
              "path": "v1b3/projects/{projectId}/templates"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "description": "Get the template associated with a template.",
              "parameters": {
                "location": {
                  "location": "query",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                  "type": "string"
                },
                "gcsPath": {
                  "type": "string",
                  "description": "Required. A Cloud Storage path to the template from which to create the job. Must be valid Cloud Storage URL, beginning with 'gs://'.",
                  "location": "query"
                },
                "projectId": {
                  "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "view": {
                  "description": "The view to retrieve. Defaults to METADATA_ONLY.",
                  "enum": [
                    "METADATA_ONLY"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Template view that retrieves only the metadata associated with the template."
                  ],
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GetTemplateResponse"
              },
              "id": "dataflow.projects.templates.get",
              "flatPath": "v1b3/projects/{projectId}/templates:get",
              "path": "v1b3/projects/{projectId}/templates:get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        },
        "locations": {
          "methods": {
            "workerMessages": {
              "flatPath": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "id": "dataflow.projects.locations.workerMessages",
              "httpMethod": "POST",
              "response": {
                "$ref": "SendWorkerMessagesResponse"
              },
              "parameterOrder": [
                "projectId",
                "location"
              ],
              "description": "Send a worker_message to the service.",
              "request": {
                "$ref": "SendWorkerMessagesRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1b3/projects/{projectId}/locations/{location}/WorkerMessages",
              "parameters": {
                "location": {
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "projectId": {
                  "description": "The project to send the WorkerMessages to.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              }
            }
          },
          "resources": {
            "jobs": {
              "resources": {
                "messages": {
                  "methods": {
                    "list": {
                      "description": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages",
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/messages",
                      "parameters": {
                        "projectId": {
                          "required": true,
                          "type": "string",
                          "description": "A project id.",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "If supplied, this should be the value of next_page_token returned by an earlier call. This will cause the next page of results to be returned.",
                          "location": "query"
                        },
                        "location": {
                          "type": "string",
                          "required": true,
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                          "location": "path"
                        },
                        "minimumImportance": {
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                            "JOB_MESSAGE_DEBUG",
                            "JOB_MESSAGE_DETAILED",
                            "JOB_MESSAGE_BASIC",
                            "JOB_MESSAGE_WARNING",
                            "JOB_MESSAGE_ERROR"
                          ],
                          "enumDescriptions": [
                            "The message importance isn't specified, or is unknown.",
                            "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.",
                            "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.",
                            "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                            "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                            "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                          ],
                          "description": "Filter to only get messages with importance \u003e= level"
                        },
                        "pageSize": {
                          "description": "If specified, determines the maximum number of messages to return. If unspecified, the service may choose an appropriate default, or may return an arbitrarily large number of results.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "endTime": {
                          "format": "google-datetime",
                          "description": "Return only messages with timestamps \u003c end_time. The default is now (i.e. return up to the latest messages available).",
                          "location": "query",
                          "type": "string"
                        },
                        "jobId": {
                          "description": "The job to get messages about.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "startTime": {
                          "format": "google-datetime",
                          "description": "If specified, return only messages with timestamps \u003e= start_time. The default is the job creation time (i.e. beginning of messages).",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListJobMessagesResponse"
                      },
                      "id": "dataflow.projects.locations.jobs.messages.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ]
                    }
                  }
                },
                "debug": {
                  "methods": {
                    "sendCapture": {
                      "description": "Send encoded debug capture data for component.",
                      "request": {
                        "$ref": "SendDebugCaptureRequest"
                      },
                      "id": "dataflow.projects.locations.jobs.debug.sendCapture",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameters": {
                        "location": {
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "projectId": {
                          "required": true,
                          "description": "The project id.",
                          "location": "path",
                          "type": "string"
                        },
                        "jobId": {
                          "type": "string",
                          "location": "path",
                          "description": "The job id.",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "SendDebugCaptureResponse"
                      },
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/sendCapture"
                    },
                    "getConfig": {
                      "description": "Get encoded debug configuration for component. Not cacheable.",
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig",
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "response": {
                        "$ref": "GetDebugConfigResponse"
                      },
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/debug/getConfig",
                      "httpMethod": "POST",
                      "id": "dataflow.projects.locations.jobs.debug.getConfig",
                      "parameters": {
                        "location": {
                          "type": "string",
                          "location": "path",
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                          "required": true
                        },
                        "jobId": {
                          "required": true,
                          "description": "The job id.",
                          "type": "string",
                          "location": "path"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The project id.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GetDebugConfigRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ]
                    }
                  }
                },
                "stages": {
                  "methods": {
                    "getExecutionDetails": {
                      "description": "Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
                      "response": {
                        "$ref": "StageExecutionDetails"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId",
                        "stageId"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/stages/{stageId}/executionDetails",
                      "parameters": {
                        "projectId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "A project id."
                        },
                        "location": {
                          "location": "path",
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                          "type": "string",
                          "required": true
                        },
                        "endTime": {
                          "description": "Upper time bound of work items to include, by start time.",
                          "type": "string",
                          "location": "query",
                          "format": "google-datetime"
                        },
                        "jobId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "The job to get execution details for."
                        },
                        "stageId": {
                          "type": "string",
                          "required": true,
                          "description": "The stage for which to fetch information.",
                          "location": "path"
                        },
                        "pageSize": {
                          "description": "If specified, determines the maximum number of work items to return. If unspecified, the service may choose an appropriate default, or may return an arbitrarily large number of results.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "startTime": {
                          "description": "Lower time bound of work items to include, by start time.",
                          "format": "google-datetime",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "If supplied, this should be the value of next_page_token returned by an earlier call. This will cause the next page of results to be returned.",
                          "location": "query"
                        }
                      },
                      "id": "dataflow.projects.locations.jobs.stages.getExecutionDetails",
                      "httpMethod": "GET",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/stages/{stageId}/executionDetails",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ]
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "list": {
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots",
                      "httpMethod": "GET",
                      "id": "dataflow.projects.locations.jobs.snapshots.list",
                      "description": "Lists snapshots.",
                      "parameters": {
                        "jobId": {
                          "description": "If specified, list snapshots created from this job.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "projectId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "The project ID to list snapshots for."
                        },
                        "location": {
                          "description": "The location to list snapshots in.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "response": {
                        "$ref": "ListSnapshotsResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/snapshots"
                    }
                  }
                },
                "workItems": {
                  "methods": {
                    "lease": {
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "id": "dataflow.projects.locations.jobs.workItems.lease",
                      "parameters": {
                        "location": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job."
                        },
                        "jobId": {
                          "description": "Identifies the workflow job this worker belongs to.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "projectId": {
                          "description": "Identifies the project this worker belongs to.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "description": "Leases a dataflow WorkItem to run.",
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:lease",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "LeaseWorkItemRequest"
                      },
                      "response": {
                        "$ref": "LeaseWorkItemResponse"
                      }
                    },
                    "reportStatus": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly",
                        "https://www.googleapis.com/auth/userinfo.email"
                      ],
                      "parameterOrder": [
                        "projectId",
                        "location",
                        "jobId"
                      ],
                      "description": "Reports the status of dataflow WorkItems leased by a worker.",
                      "id": "dataflow.projects.locations.jobs.workItems.reportStatus",
                      "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus",
                      "request": {
                        "$ref": "ReportWorkItemStatusRequest"
                      },
                      "response": {
                        "$ref": "ReportWorkItemStatusResponse"
                      },
                      "parameters": {
                        "location": {
                          "required": true,
                          "type": "string",
                          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.",
                          "location": "path"
                        },
                        "projectId": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "The project which owns the WorkItem's job."
                        },
                        "jobId": {
                          "location": "path",
                          "type": "string",
                          "description": "The job which the WorkItem is part of.",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/workItems:reportStatus"
                    }
                  }
                }
              },
              "methods": {
                "getExecutionDetails": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/executionDetails",
                  "response": {
                    "$ref": "JobExecutionDetails"
                  },
                  "description": "Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
                  "parameters": {
                    "pageSize": {
                      "description": "If specified, determines the maximum number of stages to return. If unspecified, the service may choose an appropriate default, or may return an arbitrarily large number of results.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "jobId": {
                      "type": "string",
                      "description": "The job to get execution details for.",
                      "required": true,
                      "location": "path"
                    },
                    "location": {
                      "required": true,
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "If supplied, this should be the value of next_page_token returned by an earlier call. This will cause the next page of results to be returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "A project id."
                    }
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/executionDetails",
                  "id": "dataflow.projects.locations.jobs.getExecutionDetails"
                },
                "getMetrics": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "id": "dataflow.projects.locations.jobs.getMetrics",
                  "parameters": {
                    "jobId": {
                      "type": "string",
                      "description": "The job to get metrics for.",
                      "required": true,
                      "location": "path"
                    },
                    "location": {
                      "type": "string",
                      "location": "path",
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
                      "required": true
                    },
                    "startTime": {
                      "format": "google-datetime",
                      "description": "Return only metric data that has changed since this time. Default is to return all information about all metrics for the job.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "A project id.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}/metrics",
                  "description": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "JobMetrics"
                  }
                },
                "create": {
                  "description": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "view": {
                      "description": "The level of information requested in response.",
                      "enumDescriptions": [
                        "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                        "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                        "Request all information available for this job.",
                        "Request summary info and limited job description data for steps, labels and environment."
                      ],
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ]
                    },
                    "replaceJobId": {
                      "location": "query",
                      "description": "Deprecated. This field is now in the Job message.",
                      "type": "string"
                    },
                    "projectId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The ID of the Cloud Platform project that the job belongs to."
                    },
                    "location": {
                      "type": "string",
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "id": "dataflow.projects.locations.jobs.create",
                  "request": {
                    "$ref": "Job"
                  },
                  "httpMethod": "POST"
                },
                "list": {
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "id": "dataflow.projects.locations.jobs.list",
                  "httpMethod": "GET",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs",
                  "description": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Set this to the 'next_page_token' field of a previous response to request additional results in a long list."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "If there are many jobs, limit response to at most this many. The actual number of jobs returned will be the lesser of max_responses and an unspecified server-defined limit.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "enum": [
                        "UNKNOWN",
                        "ALL",
                        "TERMINATED",
                        "ACTIVE"
                      ],
                      "description": "The kind of filter to use.",
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "The filter isn't specified, or is unknown. This returns all jobs ordered on descending `JobUuid`.",
                        "Returns all running jobs first ordered on creation timestamp, then returns all terminated jobs ordered on the termination timestamp.",
                        "Filters the jobs that have a terminated state, ordered on the termination timestamp. Example terminated states: `JOB_STATE_STOPPED`, `JOB_STATE_UPDATED`, `JOB_STATE_DRAINED`, etc.",
                        "Filters the jobs that are running ordered on the creation timestamp."
                      ]
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "description": "The project which owns the jobs.",
                      "location": "path"
                    },
                    "view": {
                      "description": "Level of information requested in response. Default is `JOB_VIEW_SUMMARY`.",
                      "enumDescriptions": [
                        "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                        "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                        "Request all information available for this job.",
                        "Request summary info and limited job description data for steps, labels and environment."
                      ],
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ]
                    }
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs"
                },
                "snapshot": {
                  "parameters": {
                    "jobId": {
                      "description": "The job to be snapshotted.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "description": "The project which owns the job to be snapshotted.",
                      "location": "path"
                    },
                    "location": {
                      "description": "The location that contains this job.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot",
                  "request": {
                    "$ref": "SnapshotJobRequest"
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}:snapshot",
                  "description": "Snapshot the state of a streaming job.",
                  "id": "dataflow.projects.locations.jobs.snapshot"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ],
                  "id": "dataflow.projects.locations.jobs.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Job"
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "description": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true
                    },
                    "view": {
                      "enumDescriptions": [
                        "The job view to return isn't specified, or is unknown. Responses will contain at least the `JOB_VIEW_SUMMARY` information, and may contain additional information.",
                        "Request summary information only: Project ID, Job ID, job name, job type, job status, start/end time, and Cloud SDK version details.",
                        "Request all information available for this job.",
                        "Request summary info and limited job description data for steps, labels and environment."
                      ],
                      "location": "query",
                      "enum": [
                        "JOB_VIEW_UNKNOWN",
                        "JOB_VIEW_SUMMARY",
                        "JOB_VIEW_ALL",
                        "JOB_VIEW_DESCRIPTION"
                      ],
                      "description": "The level of information requested in response.",
                      "type": "string"
                    },
                    "location": {
                      "location": "path",
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "required": true,
                      "location": "path",
                      "description": "The job ID.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}"
                },
                "update": {
                  "description": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "Job"
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "location": "path",
                      "description": "The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string"
                    },
                    "jobId": {
                      "description": "The job ID.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "location": {
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "id": "dataflow.projects.locations.jobs.update",
                  "path": "v1b3/projects/{projectId}/locations/{location}/jobs/{jobId}",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "jobId"
                  ]
                }
              }
            },
            "sql": {
              "methods": {
                "validate": {
                  "response": {
                    "$ref": "ValidateResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/sql:validate",
                  "path": "v1b3/projects/{projectId}/locations/{location}/sql:validate",
                  "parameters": {
                    "query": {
                      "type": "string",
                      "description": "The sql query to validate.",
                      "location": "query"
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "location": "path"
                    },
                    "location": {
                      "type": "string",
                      "location": "path",
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "description": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm the given query parses correctly, and if able to look up schema information from DataCatalog, will validate that the query analyzes properly as well.",
                  "id": "dataflow.projects.locations.sql.validate",
                  "httpMethod": "GET"
                }
              }
            },
            "snapshots": {
              "methods": {
                "delete": {
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "description": "Deletes a snapshot.",
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "response": {
                    "$ref": "DeleteSnapshotResponse"
                  },
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to."
                    },
                    "snapshotId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The ID of the snapshot."
                    },
                    "location": {
                      "required": true,
                      "type": "string",
                      "description": "The location that contains this snapshot.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "dataflow.projects.locations.snapshots.delete",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots",
                  "description": "Lists snapshots.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "jobId": {
                      "type": "string",
                      "description": "If specified, list snapshots created from this job.",
                      "location": "query"
                    },
                    "location": {
                      "description": "The location to list snapshots in.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "The project ID to list snapshots for.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListSnapshotsResponse"
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots",
                  "id": "dataflow.projects.locations.snapshots.list",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "parameterOrder": [
                    "projectId",
                    "location",
                    "snapshotId"
                  ],
                  "httpMethod": "GET",
                  "id": "dataflow.projects.locations.snapshots.get",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "description": "The ID of the Cloud Platform project that the snapshot belongs to.",
                      "type": "string",
                      "location": "path"
                    },
                    "location": {
                      "type": "string",
                      "description": "The location that contains this snapshot.",
                      "required": true,
                      "location": "path"
                    },
                    "snapshotId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The ID of the snapshot."
                    }
                  },
                  "response": {
                    "$ref": "Snapshot"
                  },
                  "description": "Gets information about a snapshot.",
                  "path": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/snapshots/{snapshotId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            },
            "templates": {
              "methods": {
                "launch": {
                  "id": "dataflow.projects.locations.templates.launch",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "description": "Launch a template.",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:launch",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "description": "If true, the request is validated but not actually executed. Defaults to false.",
                      "type": "boolean"
                    },
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "type": "string"
                    },
                    "location": {
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "dynamicTemplate.gcsPath": {
                      "description": "Path to dynamic template spec file on GCS. The file must be a Json serialized DynamicTemplateFieSpec object.",
                      "location": "query",
                      "type": "string"
                    },
                    "dynamicTemplate.stagingLocation": {
                      "description": "Cloud Storage path for staging dependencies. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                      "location": "query",
                      "type": "string"
                    },
                    "gcsPath": {
                      "type": "string",
                      "location": "query",
                      "description": "A Cloud Storage path to the template from which to create the job. Must be valid Cloud Storage URL, beginning with 'gs://'."
                    }
                  },
                  "response": {
                    "$ref": "LaunchTemplateResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "LaunchTemplateParameters"
                  }
                },
                "get": {
                  "description": "Get the template associated with a template.",
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "response": {
                    "$ref": "GetTemplateResponse"
                  },
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "Template view that retrieves only the metadata associated with the template."
                      ],
                      "type": "string",
                      "description": "The view to retrieve. Defaults to METADATA_ONLY.",
                      "enum": [
                        "METADATA_ONLY"
                      ],
                      "location": "query"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "location": {
                      "required": true,
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                      "location": "path",
                      "type": "string"
                    },
                    "gcsPath": {
                      "type": "string",
                      "description": "Required. A Cloud Storage path to the template from which to create the job. Must be valid Cloud Storage URL, beginning with 'gs://'.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates:get",
                  "id": "dataflow.projects.locations.templates.get",
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ]
                },
                "create": {
                  "path": "v1b3/projects/{projectId}/locations/{location}/templates",
                  "description": "Creates a Cloud Dataflow job from a template.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "request": {
                    "$ref": "CreateJobFromTemplateRequest"
                  },
                  "httpMethod": "POST",
                  "id": "dataflow.projects.locations.templates.create",
                  "parameters": {
                    "location": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request."
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to."
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/templates"
                }
              }
            },
            "flexTemplates": {
              "methods": {
                "launch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/compute",
                    "https://www.googleapis.com/auth/compute.readonly",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "dataflow.projects.locations.flexTemplates.launch",
                  "description": "Launch a job with a FlexTemplate.",
                  "parameters": {
                    "location": {
                      "description": "Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. E.g., us-central1, us-west1.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "LaunchFlexTemplateResponse"
                  },
                  "path": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch",
                  "request": {
                    "$ref": "LaunchFlexTemplateRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "location"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch"
                }
              }
            }
          }
        },
        "snapshots": {
          "methods": {
            "list": {
              "description": "Lists snapshots.",
              "httpMethod": "GET",
              "id": "dataflow.projects.snapshots.list",
              "path": "v1b3/projects/{projectId}/snapshots",
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "location": {
                  "description": "The location to list snapshots in.",
                  "location": "query",
                  "type": "string"
                },
                "jobId": {
                  "description": "If specified, list snapshots created from this job.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The project ID to list snapshots for."
                }
              },
              "flatPath": "v1b3/projects/{projectId}/snapshots",
              "parameterOrder": [
                "projectId"
              ]
            },
            "get": {
              "response": {
                "$ref": "Snapshot"
              },
              "flatPath": "v1b3/projects/{projectId}/snapshots/{snapshotId}",
              "id": "dataflow.projects.snapshots.get",
              "path": "v1b3/projects/{projectId}/snapshots/{snapshotId}",
              "parameterOrder": [
                "projectId",
                "snapshotId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/compute",
                "https://www.googleapis.com/auth/compute.readonly",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets information about a snapshot.",
              "parameters": {
                "snapshotId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID of the snapshot.",
                  "type": "string"
                },
                "projectId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The ID of the Cloud Platform project that the snapshot belongs to."
                },
                "location": {
                  "location": "query",
                  "description": "The location that contains this snapshot.",
                  "type": "string"
                }
              }
            }
          }
        },
        "catalogTemplates": {
          "methods": {
            "label": {
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:label",
              "path": "v1b3/{+name}:label",
              "description": "Updates the label of the TemplateVersion. Label can be duplicated in Template, so either add or remove the label in the TemplateVersion.",
              "request": {
                "$ref": "ModifyTemplateVersionLabelRequest"
              },
              "response": {
                "$ref": "ModifyTemplateVersionLabelResponse"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name includes project_id, display_name, and version_id. Updates by project_id(pid1), display_name(tid1), and version_id(vid1): Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "id": "dataflow.projects.catalogTemplates.label"
            },
            "commit": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The location of the template, name includes project_id and display_name. Commit using project_id(pid1) and display_name(tid1). Format: projects/{pid1}/catalogTemplates/{tid1}"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "TemplateVersion"
              },
              "description": "Creates a new TemplateVersion (Important: not new Template) entry in the spanner table. Requires project_id and display_name (template).",
              "httpMethod": "POST",
              "path": "v1b3/{+name}:commit",
              "parameterOrder": [
                "name"
              ],
              "id": "dataflow.projects.catalogTemplates.commit",
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:commit",
              "request": {
                "$ref": "CommitTemplateVersionRequest"
              }
            },
            "tag": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Resource name includes project_id, display_name, and version_id. Updates by project_id(pid1), display_name(tid1), and version_id(vid1): Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates the tag of the TemplateVersion, and tag is unique in Template. If tag exists in another TemplateVersion in the Template, updates the tag to this TemplateVersion will remove it from the old TemplateVersion and add it to this TemplateVersion. If request is remove_only (remove_only = true), remove the tag from this TemplateVersion.",
              "request": {
                "$ref": "ModifyTemplateVersionTagRequest"
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}:tag",
              "path": "v1b3/{+name}:tag",
              "id": "dataflow.projects.catalogTemplates.tag",
              "response": {
                "$ref": "ModifyTemplateVersionTagResponse"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "name includes project_id and display_name. Delete by project_id(pid1) and display_name(tid1). Format: projects/{pid1}/catalogTemplates/{tid1}",
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}",
              "id": "dataflow.projects.catalogTemplates.delete",
              "description": "Deletes an existing Template. Do nothing if Template does not exist.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1b3/{+name}"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}",
              "description": "Get TemplateVersion using project_id and display_name with an optional version_id field. Get latest (has tag \"latest\") TemplateVersion if version_id not set.",
              "httpMethod": "GET",
              "id": "dataflow.projects.catalogTemplates.get",
              "path": "v1b3/{+name}",
              "response": {
                "$ref": "TemplateVersion"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Resource name includes project_id and display_name. version_id is optional. Get the latest TemplateVersion if version_id not set. Get by project_id(pid1) and display_name(tid1): Format: projects/{pid1}/catalogTemplates/{tid1} Get by project_id(pid1), display_name(tid1), and version_id(vid1): Format: projects/{pid1}/catalogTemplates/{tid1@vid}",
                  "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$"
                }
              }
            }
          },
          "resources": {
            "templateVersions": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "TemplateVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/catalogTemplates/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The parent project and template that the TemplateVersion will be created under. Create using project_id(pid1) and display_name(tid1). Format: projects/{pid1}/catalogTemplates/{tid1}"
                    }
                  },
                  "path": "v1b3/{+parent}/templateVersions",
                  "request": {
                    "$ref": "CreateTemplateVersionRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new Template with TemplateVersion. Requires project_id(projects) and template display_name(catalogTemplates). The template display_name is set by the user.",
                  "id": "dataflow.projects.catalogTemplates.templateVersions.create",
                  "flatPath": "v1b3/projects/{projectsId}/catalogTemplates/{catalogTemplatesId}/templateVersions"
                }
              }
            }
          }
        },
        "templateVersions": {
          "methods": {
            "list": {
              "path": "v1b3/{+parent}/templateVersions",
              "description": "List TemplateVersions using project_id and an optional display_name field. List all the TemplateVersions in the Template if display set. List all the TemplateVersions in the Project if display_name not set.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of TemplateVersions to return per page.",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The page token, received from a previous ListTemplateVersions call. Provide this to retrieve the subsequent page."
                },
                "parent": {
                  "description": "parent includes project_id, and display_name is optional. List by project_id(pid1) and display_name(tid1). Format: projects/{pid1}/catalogTemplates/{tid1} List by project_id(pid1). Format: projects/{pid1}",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "response": {
                "$ref": "ListTemplateVersionsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1b3/projects/{projectsId}/templateVersions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "dataflow.projects.templateVersions.list"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    }
  },
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "servicePath": "",
  "schemas": {
    "SourceSplitResponse": {
      "id": "SourceSplitResponse",
      "type": "object",
      "description": "The response to a SourceSplitRequest.",
      "properties": {
        "bundles": {
          "items": {
            "$ref": "DerivedSource"
          },
          "description": "If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.",
          "type": "array"
        },
        "shards": {
          "type": "array",
          "items": {
            "$ref": "SourceSplitShard"
          },
          "description": "DEPRECATED in favor of bundles."
        },
        "outcome": {
          "enum": [
            "SOURCE_SPLIT_OUTCOME_UNKNOWN",
            "SOURCE_SPLIT_OUTCOME_USE_CURRENT",
            "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED"
          ],
          "type": "string",
          "description": "Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed \"as is\" without splitting. \"bundles\" is ignored in this case. If this is SPLITTING_HAPPENED, then \"bundles\" contains a list of bundles into which the source was split.",
          "enumDescriptions": [
            "The source split outcome is unknown, or unspecified.",
            "The current source should be processed \"as is\" without splitting.",
            "Splitting produced a list of bundles."
          ]
        }
      }
    },
    "WorkItemServiceState": {
      "type": "object",
      "id": "WorkItemServiceState",
      "properties": {
        "nextReportIndex": {
          "format": "int64",
          "description": "The index value to use for the next report sent by the worker. Note: If the report call fails for whatever reason, the worker should reuse this index for subsequent report attempts.",
          "type": "string"
        },
        "hotKeyDetection": {
          "$ref": "HotKeyDetection",
          "description": "A hot key is a symptom of poor data distribution in which there are enough elements mapped to a single key to impact pipeline performance. When present, this field includes metadata associated with any hot key."
        },
        "splitRequest": {
          "description": "The progress point in the WorkItem where the Dataflow service suggests that the worker truncate the task.",
          "$ref": "ApproximateSplitRequest"
        },
        "reportStatusInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "New recommended reporting interval."
        },
        "leaseExpireTime": {
          "format": "google-datetime",
          "description": "Time at which the current lease will expire.",
          "type": "string"
        },
        "suggestedStopPoint": {
          "$ref": "ApproximateProgress",
          "description": "DEPRECATED in favor of split_request."
        },
        "completeWorkStatus": {
          "description": "If set, a request to complete the work item with the given status. This will not be set to OK, unless supported by the specific kind of WorkItem. It can be used for the backend to indicate a WorkItem must terminate, e.g., for aborting work.",
          "$ref": "Status"
        },
        "metricShortId": {
          "items": {
            "$ref": "MetricShortId"
          },
          "description": "The short ids that workers should use in subsequent metric updates. Workers should strive to use short ids whenever possible, but it is ok to request the short_id again if a worker lost track of it (e.g. if the worker is recovering from a crash). NOTE: it is possible that the response may have short ids for a subset of the metrics.",
          "type": "array"
        },
        "harnessData": {
          "description": "Other data returned by the service, specific to the particular worker harness.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "suggestedStopPosition": {
          "description": "Obsolete, always empty.",
          "$ref": "Position"
        }
      },
      "description": "The Dataflow service's idea of the current state of a WorkItem being processed by a worker."
    },
    "StreamingComputationTask": {
      "description": "A task which describes what action should be performed for the specified streaming computation ranges.",
      "id": "StreamingComputationTask",
      "properties": {
        "computationRanges": {
          "type": "array",
          "items": {
            "$ref": "StreamingComputationRanges"
          },
          "description": "Contains ranges of a streaming computation this task should apply to."
        },
        "taskType": {
          "type": "string",
          "description": "A type of streaming computation task.",
          "enumDescriptions": [
            "The streaming computation task is unknown, or unspecified.",
            "Stop processing specified streaming computation range(s).",
            "Start processing specified streaming computation range(s)."
          ],
          "enum": [
            "STREAMING_COMPUTATION_TASK_UNKNOWN",
            "STREAMING_COMPUTATION_TASK_STOP",
            "STREAMING_COMPUTATION_TASK_START"
          ]
        },
        "dataDisks": {
          "description": "Describes the set of data disks this task should apply to.",
          "type": "array",
          "items": {
            "$ref": "MountedDataDisk"
          }
        }
      },
      "type": "object"
    },
    "StageSource": {
      "description": "Description of an input or output of an execution stage.",
      "id": "StageSource",
      "properties": {
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this source."
        },
        "originalTransformOrCollection": {
          "type": "string",
          "description": "User name for the original user transform or collection with which this source is most closely associated."
        },
        "userName": {
          "type": "string",
          "description": "Human-readable name for this source; may be user or system generated."
        },
        "sizeBytes": {
          "format": "int64",
          "description": "Size of the source, if measurable.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "KeyRangeDataDiskAssignment": {
      "description": "Data disk assignment information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.",
      "type": "object",
      "id": "KeyRangeDataDiskAssignment",
      "properties": {
        "start": {
          "type": "string",
          "description": "The start (inclusive) of the key range."
        },
        "end": {
          "description": "The end (exclusive) of the key range.",
          "type": "string"
        },
        "dataDisk": {
          "type": "string",
          "description": "The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\"."
        }
      }
    },
    "DisplayData": {
      "id": "DisplayData",
      "properties": {
        "int64Value": {
          "type": "string",
          "format": "int64",
          "description": "Contains value if the data is of int64 type."
        },
        "strValue": {
          "description": "Contains value if the data is of string type.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "An optional full URL."
        },
        "floatValue": {
          "type": "number",
          "description": "Contains value if the data is of float type.",
          "format": "float"
        },
        "namespace": {
          "description": "The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.",
          "type": "string"
        },
        "key": {
          "description": "The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.",
          "type": "string"
        },
        "javaClassValue": {
          "description": "Contains value if the data is of java class type.",
          "type": "string"
        },
        "shortStrValue": {
          "type": "string",
          "description": "A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip."
        },
        "timestampValue": {
          "type": "string",
          "format": "google-datetime",
          "description": "Contains value if the data is of timestamp type."
        },
        "durationValue": {
          "description": "Contains value if the data is of duration type.",
          "type": "string",
          "format": "google-duration"
        },
        "boolValue": {
          "description": "Contains value if the data is of a boolean type.",
          "type": "boolean"
        },
        "label": {
          "description": "An optional label to display in a dax UI for the element.",
          "type": "string"
        }
      },
      "description": "Data provided with a pipeline or transform to provide descriptive info.",
      "type": "object"
    },
    "LeaseWorkItemRequest": {
      "description": "Request to lease WorkItems.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.",
          "type": "string"
        },
        "unifiedWorkerRequest": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Untranslated bag-of-bytes WorkRequest from UnifiedWorker."
        },
        "workerCapabilities": {
          "type": "array",
          "description": "Worker capabilities. WorkItems might be limited to workers with specific capabilities.",
          "items": {
            "type": "string"
          }
        },
        "workerId": {
          "description": "Identifies the worker leasing work -- typically the ID of the virtual machine running the worker.",
          "type": "string"
        },
        "currentWorkerTime": {
          "description": "The current timestamp at the worker.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedLeaseDuration": {
          "description": "The initial lease period.",
          "type": "string",
          "format": "google-duration"
        },
        "workItemTypes": {
          "type": "array",
          "description": "Filter for WorkItem type.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "LeaseWorkItemRequest"
    },
    "WorkerSettings": {
      "type": "object",
      "description": "Provides data to pass through to the worker harness.",
      "id": "WorkerSettings",
      "properties": {
        "tempStoragePrefix": {
          "description": "The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "servicePath": {
          "description": "The Cloud Dataflow service path relative to the root URL, for example, \"dataflow/v1b3/projects\".",
          "type": "string"
        },
        "reportingEnabled": {
          "description": "Whether to send work progress updates to the service.",
          "type": "boolean"
        },
        "baseUrl": {
          "description": "The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\"",
          "type": "string"
        },
        "workerId": {
          "description": "The ID of the worker running this pipeline.",
          "type": "string"
        },
        "shuffleServicePath": {
          "description": "The Shuffle service path relative to the root URL, for example, \"shuffle/v1beta1\".",
          "type": "string"
        }
      }
    },
    "SourceSplitRequest": {
      "id": "SourceSplitRequest",
      "properties": {
        "source": {
          "description": "Specification of the source to be split.",
          "$ref": "Source"
        },
        "options": {
          "description": "Hints for tuning the splitting process.",
          "$ref": "SourceSplitOptions"
        }
      },
      "type": "object",
      "description": "Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used \"as is\". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it."
    },
    "Package": {
      "description": "The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user's code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.",
      "id": "Package",
      "properties": {
        "location": {
          "description": "The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/",
          "type": "string"
        },
        "name": {
          "description": "The name of the package.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Disk": {
      "properties": {
        "mountPoint": {
          "description": "Directory in a VM where disk is mounted.",
          "type": "string"
        },
        "sizeGb": {
          "description": "Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.",
          "format": "int32",
          "type": "integer"
        },
        "diskType": {
          "description": "Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Disk",
      "description": "Describes the data disk used by a workflow job."
    },
    "StateFamilyConfig": {
      "properties": {
        "stateFamily": {
          "type": "string",
          "description": "The state family value."
        },
        "isRead": {
          "description": "If true, this family corresponds to a read operation.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "StateFamilyConfig",
      "description": "State family configuration."
    },
    "TemplateVersion": {
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string",
          "description": "An auto generated version_id for TemplateVersion."
        },
        "artifact": {
          "$ref": "Artifact",
          "description": "Job graph and metadata if it is a legacy Template. Container image path and metadata if it is flex Template."
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "Alias for version_id, helps locate a TemplateVersion.",
          "type": "array"
        },
        "description": {
          "description": "Template description from the user.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels for the Template Version. Labels can be duplicate within Template.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Creation time of this TemplateVersion.",
          "type": "string",
          "format": "google-datetime"
        },
        "projectId": {
          "type": "string",
          "description": "A unique project_id. Multiple Templates per Project."
        },
        "type": {
          "description": "Either LEGACY or FLEX. This should match with the type of artifact.",
          "type": "string",
          "enumDescriptions": [
            "Default value. Not a useful zero case.",
            "Legacy Template.",
            "Flex Template."
          ],
          "enum": [
            "TEMPLATE_TYPE_UNSPECIFIED",
            "LEGACY",
            "FLEX"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "A customized name for Template. Multiple TemplateVersions per Template."
        }
      },
      "id": "TemplateVersion",
      "description": "///////////////////////////////////////////////////////////////////////////// //// Template Catalog is used to organize user TemplateVersions. //// TemplateVersions that have the same project_id and display_name are //// belong to the same Template. //// Templates with the same project_id belong to the same Project. //// TemplateVersion may have labels and multiple labels are allowed. //// Duplicated labels in the same `TemplateVersion` are not allowed. //// TemplateVersion may have tags and multiple tags are allowed. Duplicated //// tags in the same `Template` are not allowed!"
    },
    "ResourceUtilizationReport": {
      "properties": {
        "containers": {
          "description": "Per container information. Key: container name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "ResourceUtilizationReport"
          }
        },
        "cpuTime": {
          "description": "CPU utilization samples.",
          "items": {
            "$ref": "CPUTime"
          },
          "type": "array"
        },
        "memoryInfo": {
          "type": "array",
          "items": {
            "$ref": "MemInfo"
          },
          "description": "Memory utilization samples."
        }
      },
      "type": "object",
      "id": "ResourceUtilizationReport",
      "description": "Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals."
    },
    "SplitInt64": {
      "id": "SplitInt64",
      "type": "object",
      "properties": {
        "lowBits": {
          "format": "uint32",
          "description": "The low order bits: n & 0xffffffff.",
          "type": "integer"
        },
        "highBits": {
          "format": "int32",
          "description": "The high order bits, including the sign: n \u003e\u003e 32.",
          "type": "integer"
        }
      },
      "description": "A representation of an int64, n, that is immune to precision loss when encoded in JSON."
    },
    "SeqMapTaskOutputInfo": {
      "properties": {
        "sink": {
          "$ref": "Sink",
          "description": "The sink to write the output value to."
        },
        "tag": {
          "description": "The id of the TupleTag the user code will tag the output value by.",
          "type": "string"
        }
      },
      "description": "Information about an output of a SeqMapTask.",
      "type": "object",
      "id": "SeqMapTaskOutputInfo"
    },
    "JobMetadata": {
      "properties": {
        "fileDetails": {
          "items": {
            "$ref": "FileIODetails"
          },
          "description": "Identification of a File source used in the Dataflow job.",
          "type": "array"
        },
        "sdkVersion": {
          "$ref": "SdkVersion",
          "description": "The SDK version used to run the job."
        },
        "bigTableDetails": {
          "description": "Identification of a BigTable source used in the Dataflow job.",
          "type": "array",
          "items": {
            "$ref": "BigTableIODetails"
          }
        },
        "pubsubDetails": {
          "items": {
            "$ref": "PubSubIODetails"
          },
          "description": "Identification of a PubSub source used in the Dataflow job.",
          "type": "array"
        },
        "spannerDetails": {
          "type": "array",
          "items": {
            "$ref": "SpannerIODetails"
          },
          "description": "Identification of a Spanner source used in the Dataflow job."
        },
        "datastoreDetails": {
          "type": "array",
          "items": {
            "$ref": "DatastoreIODetails"
          },
          "description": "Identification of a Datastore source used in the Dataflow job."
        },
        "bigqueryDetails": {
          "description": "Identification of a BigQuery source used in the Dataflow job.",
          "items": {
            "$ref": "BigQueryIODetails"
          },
          "type": "array"
        }
      },
      "description": "Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.",
      "type": "object",
      "id": "JobMetadata"
    },
    "FlexTemplateRuntimeEnvironment": {
      "id": "FlexTemplateRuntimeEnvironment",
      "properties": {
        "additionalExperiments": {
          "type": "array",
          "description": "Additional experiment flags for the job.",
          "items": {
            "type": "string"
          }
        },
        "zone": {
          "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
          "type": "string"
        },
        "workerRegion": {
          "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
          "type": "string"
        },
        "serviceAccountEmail": {
          "description": "The email address of the service account to run the job as.",
          "type": "string"
        },
        "maxWorkers": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000."
        },
        "enableStreamingEngine": {
          "type": "boolean",
          "description": "Whether to enable Streaming Engine for the job."
        },
        "ipConfiguration": {
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ],
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs.",
          "type": "string"
        },
        "workerZone": {
          "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\"."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/"
        },
        "numWorkers": {
          "format": "int32",
          "type": "integer",
          "description": "The initial number of Google Compute Engine instances for the job."
        },
        "additionalUserLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }."
        },
        "machineType": {
          "description": "The machine type to use for the job. Defaults to the value from the template if not specified.",
          "type": "string"
        },
        "subnetwork": {
          "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
          "type": "string"
        },
        "tempLocation": {
          "type": "string",
          "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`."
        }
      },
      "type": "object",
      "description": "The environment values to be set at runtime for flex template."
    },
    "GetDebugConfigRequest": {
      "description": "Request to get updated debug configuration for component.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
          "type": "string"
        },
        "workerId": {
          "type": "string",
          "description": "The worker id, i.e., VM hostname."
        },
        "componentId": {
          "type": "string",
          "description": "The internal component id for which debug configuration is requested."
        }
      },
      "id": "GetDebugConfigRequest"
    },
    "Step": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job."
        },
        "properties": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL."
        },
        "kind": {
          "description": "The kind of step in the Cloud Dataflow job.",
          "type": "string"
        }
      },
      "id": "Step",
      "description": "Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. Here's an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection's elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce."
    },
    "IntegerMean": {
      "properties": {
        "count": {
          "description": "The number of values being aggregated.",
          "$ref": "SplitInt64"
        },
        "sum": {
          "$ref": "SplitInt64",
          "description": "The sum of all values being aggregated."
        }
      },
      "id": "IntegerMean",
      "description": "A representation of an integer mean metric contribution.",
      "type": "object"
    },
    "TemplateMetadata": {
      "description": "Metadata describing a template.",
      "id": "TemplateMetadata",
      "properties": {
        "description": {
          "description": "Optional. A description of the template.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters for the template.",
          "items": {
            "$ref": "ParameterMetadata"
          },
          "type": "array"
        },
        "name": {
          "description": "Required. The name of the template.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransformSummary": {
      "type": "object",
      "description": "Description of the type, names/ids, and input/outputs for a transform.",
      "id": "TransformSummary",
      "properties": {
        "kind": {
          "description": "Type of transform.",
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ]
        },
        "id": {
          "type": "string",
          "description": "SDK generated id of this transform instance."
        },
        "inputCollectionName": {
          "description": "User names for all collection inputs to this transform.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "outputCollectionName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User names for all collection outputs to this transform."
        },
        "displayData": {
          "type": "array",
          "description": "Transform-specific display data.",
          "items": {
            "$ref": "DisplayData"
          }
        },
        "name": {
          "description": "User provided name for this transform instance.",
          "type": "string"
        }
      }
    },
    "WorkerPool": {
      "id": "WorkerPool",
      "description": "Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.",
      "type": "object",
      "properties": {
        "numWorkers": {
          "format": "int32",
          "description": "Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.",
          "type": "integer"
        },
        "diskType": {
          "type": "string",
          "description": "Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default."
        },
        "diskSourceImage": {
          "type": "string",
          "description": "Fully qualified source image for disks."
        },
        "onHostMaintenance": {
          "type": "string",
          "description": "The action to take on host maintenance, as defined by the Google Compute Engine API."
        },
        "kind": {
          "type": "string",
          "description": "The kind of the worker pool; currently only `harness` and `shuffle` are supported."
        },
        "defaultPackageSet": {
          "enumDescriptions": [
            "The default set of packages to stage is unknown, or unspecified.",
            "Indicates that no packages should be staged at the worker unless explicitly specified by the job.",
            "Stage packages typically useful to workers written in Java.",
            "Stage pacakges typically useful to workers written in Python."
          ],
          "enum": [
            "DEFAULT_PACKAGE_SET_UNKNOWN",
            "DEFAULT_PACKAGE_SET_NONE",
            "DEFAULT_PACKAGE_SET_JAVA",
            "DEFAULT_PACKAGE_SET_PYTHON"
          ],
          "type": "string",
          "description": "The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language."
        },
        "diskSizeGb": {
          "description": "Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.",
          "type": "integer",
          "format": "int32"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Metadata to set on the Google Compute Engine VMs."
        },
        "ipConfiguration": {
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ],
          "type": "string",
          "description": "Configuration for VM IPs.",
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ]
        },
        "poolArgs": {
          "type": "object",
          "description": "Extra arguments for this worker pool.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "Disk"
          },
          "description": "Data disks that are used by a VM in this workflow."
        },
        "taskrunnerSettings": {
          "$ref": "TaskRunnerSettings",
          "description": "Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field."
        },
        "teardownPolicy": {
          "type": "string",
          "description": "Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user's project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.",
          "enumDescriptions": [
            "The teardown policy isn't specified, or is unknown.",
            "Always teardown the resource.",
            "Teardown the resource on success. This is useful for debugging failures.",
            "Never teardown the resource. This is useful for debugging and development."
          ],
          "enum": [
            "TEARDOWN_POLICY_UNKNOWN",
            "TEARDOWN_ALWAYS",
            "TEARDOWN_ON_SUCCESS",
            "TEARDOWN_NEVER"
          ]
        },
        "numThreadsPerWorker": {
          "format": "int32",
          "description": "The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).",
          "type": "integer"
        },
        "packages": {
          "items": {
            "$ref": "Package"
          },
          "type": "array",
          "description": "Packages to be installed on workers."
        },
        "autoscalingSettings": {
          "description": "Settings for autoscaling of this WorkerPool.",
          "$ref": "AutoscalingSettings"
        },
        "machineType": {
          "type": "string",
          "description": "Machine type (e.g. \"n1-standard-1\"). If empty or unspecified, the service will attempt to choose a reasonable default."
        },
        "zone": {
          "description": "Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.",
          "type": "string"
        },
        "network": {
          "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
          "type": "string"
        },
        "subnetwork": {
          "description": "Subnetwork to which VMs will be assigned, if desired. Expected to be of the form \"regions/REGION/subnetworks/SUBNETWORK\".",
          "type": "string"
        },
        "sdkHarnessContainerImages": {
          "type": "array",
          "items": {
            "$ref": "SdkHarnessContainerImage"
          },
          "description": "Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries."
        },
        "workerHarnessContainerImage": {
          "description": "Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.",
          "type": "string"
        }
      }
    },
    "WorkerHealthReport": {
      "type": "object",
      "properties": {
        "msg": {
          "description": "A message describing any unusual health reports.",
          "type": "string"
        },
        "pods": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": "The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker."
        },
        "reportInterval": {
          "type": "string",
          "description": "The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker.",
          "format": "google-duration"
        },
        "vmStartupTime": {
          "format": "google-datetime",
          "description": "The time the VM was booted.",
          "type": "string"
        },
        "vmIsHealthy": {
          "type": "boolean",
          "description": "Whether the VM is currently healthy."
        },
        "vmIsBroken": {
          "description": "Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work.",
          "type": "boolean"
        }
      },
      "id": "WorkerHealthReport",
      "description": "WorkerHealthReport contains information about the health of a worker. The VM should be identified by the labels attached to the WorkerMessage that this health ping belongs to."
    },
    "ParameterMetadata": {
      "id": "ParameterMetadata",
      "description": "Metadata for a specific parameter.",
      "type": "object",
      "properties": {
        "isOptional": {
          "description": "Optional. Whether the parameter is optional. Defaults to false.",
          "type": "boolean"
        },
        "label": {
          "description": "Required. The label to display for the parameter.",
          "type": "string"
        },
        "paramType": {
          "enum": [
            "DEFAULT",
            "TEXT",
            "GCS_READ_BUCKET",
            "GCS_WRITE_BUCKET",
            "GCS_READ_FILE",
            "GCS_WRITE_FILE",
            "GCS_READ_FOLDER",
            "GCS_WRITE_FOLDER",
            "PUBSUB_TOPIC",
            "PUBSUB_SUBSCRIPTION"
          ],
          "type": "string",
          "description": "Optional. The type of the parameter. Used for selecting input picker.",
          "enumDescriptions": [
            "Default input type.",
            "The parameter specifies generic text input.",
            "The parameter specifies a GCS Bucket to read from.",
            "The parameter specifies a GCS Bucket to write to.",
            "The parameter specifies a GCS file path to read from.",
            "The parameter specifies a GCS file path to write to.",
            "The parameter specifies a GCS folder path to read from.",
            "The parameter specifies a GCS folder to write to.",
            "The parameter specifies a Pub/Sub Topic.",
            "The parameter specifies a Pub/Sub Subscription."
          ]
        },
        "regexes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Regexes that the parameter must match."
        },
        "name": {
          "description": "Required. The name of the parameter.",
          "type": "string"
        },
        "helpText": {
          "description": "Required. The help text to display for the parameter.",
          "type": "string"
        }
      }
    },
    "CreateTemplateVersionRequest": {
      "id": "CreateTemplateVersionRequest",
      "properties": {
        "templateVersion": {
          "description": "The TemplateVersion object to create.",
          "$ref": "TemplateVersion"
        }
      },
      "type": "object",
      "description": "Creates a new Template with TemplateVersions."
    },
    "FloatingPointList": {
      "id": "FloatingPointList",
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "description": "Elements of the list.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "description": "A metric value representing a list of floating point numbers."
    },
    "StreamingComputationRanges": {
      "type": "object",
      "description": "Describes full or partial data disk assignment information of the computation ranges.",
      "id": "StreamingComputationRanges",
      "properties": {
        "rangeAssignments": {
          "type": "array",
          "description": "Data disk assignments for ranges from this computation.",
          "items": {
            "$ref": "KeyRangeDataDiskAssignment"
          }
        },
        "computationId": {
          "type": "string",
          "description": "The ID of the computation."
        }
      }
    },
    "ApproximateReportedProgress": {
      "properties": {
        "position": {
          "description": "A Position within the work to represent a progress.",
          "$ref": "Position"
        },
        "consumedParallelism": {
          "description": "Total amount of parallelism in the portion of input of this task that has already been consumed and is no longer active. In the first two examples above (see remaining_parallelism), the value should be 29 or 2 respectively. The sum of remaining_parallelism and consumed_parallelism should equal the total amount of parallelism in this work item. If specified, must be finite.",
          "$ref": "ReportedParallelism"
        },
        "remainingParallelism": {
          "$ref": "ReportedParallelism",
          "description": "Total amount of parallelism in the input of this task that remains, (i.e. can be delegated to this task and any new tasks via dynamic splitting). Always at least 1 for non-finished work items and 0 for finished. \"Amount of parallelism\" refers to how many non-empty parts of the input can be read in parallel. This does not necessarily equal number of records. An input that can be read in parallel down to the individual records is called \"perfectly splittable\". An example of non-perfectly parallelizable input is a block-compressed file format where a block of records has to be read as a whole, but different blocks can be read in parallel. Examples: * If we are processing record #30 (starting at 1) out of 50 in a perfectly splittable 50-record input, this value should be 21 (20 remaining + 1 current). * If we are reading through block 3 in a block-compressed file consisting of 5 blocks, this value should be 3 (since blocks 4 and 5 can be processed in parallel by new tasks via dynamic splitting and the current task remains processing block 3). * If we are reading through the last block in a block-compressed file, or reading or processing the last record in a perfectly splittable input, this value should be 1, because apart from the current task, no additional remainder can be split off."
        },
        "fractionConsumed": {
          "description": "Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object",
      "id": "ApproximateReportedProgress",
      "description": "A progress measurement of a WorkItem by a worker."
    },
    "CreateJobFromTemplateRequest": {
      "type": "object",
      "id": "CreateJobFromTemplateRequest",
      "properties": {
        "parameters": {
          "description": "The runtime parameters to pass to the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request."
        },
        "environment": {
          "description": "The runtime environment for the job.",
          "$ref": "RuntimeEnvironment"
        },
        "gcsPath": {
          "description": "Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        }
      },
      "description": "A request to create a Cloud Dataflow job from a template."
    },
    "InstructionInput": {
      "description": "An input of an instruction, as a reference to an output of a producer instruction.",
      "type": "object",
      "id": "InstructionInput",
      "properties": {
        "producerInstructionIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask."
        },
        "outputNum": {
          "format": "int32",
          "type": "integer",
          "description": "The output index (origin zero) within the producer."
        }
      }
    },
    "WorkerMessageCode": {
      "type": "object",
      "id": "WorkerMessageCode",
      "description": "A message code is used to report status and error messages to the service. The message codes are intended to be machine readable. The service will take care of translating these into user understandable messages if necessary. Example use cases: 1. Worker processes reporting successful startup. 2. Worker processes reporting specific errors (e.g. package staging failure).",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has started. 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading a GCS file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change."
        },
        "parameters": {
          "description": "Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a \"HARNESS_STARTED\" message parameters might provide the name of the worker and additional data like timing information. 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing the GCS objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn't typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      }
    },
    "ListTemplateVersionsResponse": {
      "id": "ListTemplateVersionsResponse",
      "type": "object",
      "description": "Respond a list of TemplateVersions.",
      "properties": {
        "templateVersions": {
          "type": "array",
          "items": {
            "$ref": "TemplateVersion"
          },
          "description": "A list of TemplateVersions."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "PubsubLocation": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "A pubsub topic, in the form of \"pubsub.googleapis.com/topics//\""
        },
        "withAttributes": {
          "description": "If true, then the client has requested to get pubsub attributes.",
          "type": "boolean"
        },
        "timestampLabel": {
          "type": "string",
          "description": "If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival."
        },
        "dropLateData": {
          "description": "Indicates whether the pipeline allows late-arriving data.",
          "type": "boolean"
        },
        "trackingSubscription": {
          "description": "If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.",
          "type": "string"
        },
        "subscription": {
          "description": "A pubsub subscription, in the form of \"pubsub.googleapis.com/subscriptions//\"",
          "type": "string"
        },
        "idLabel": {
          "type": "string",
          "description": "If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort."
        }
      },
      "id": "PubsubLocation",
      "description": "Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job."
    },
    "MemInfo": {
      "properties": {
        "currentLimitBytes": {
          "description": "Instantenous memory limit in bytes.",
          "format": "uint64",
          "type": "string"
        },
        "currentRssBytes": {
          "type": "string",
          "description": "Instantenous memory (RSS) size in bytes.",
          "format": "uint64"
        },
        "totalGbMs": {
          "type": "string",
          "description": "Total memory (RSS) usage since start up in GB * ms.",
          "format": "uint64"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of the measurement.",
          "format": "google-datetime"
        }
      },
      "id": "MemInfo",
      "type": "object",
      "description": "Information about the memory usage of a worker or a container within a worker."
    },
    "CounterStructuredName": {
      "type": "object",
      "id": "CounterStructuredName",
      "properties": {
        "originalRequestingStepName": {
          "type": "string",
          "description": "The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs."
        },
        "originNamespace": {
          "description": "A string containing a more specific namespace of the counter's origin.",
          "type": "string"
        },
        "origin": {
          "description": "One of the standard Origins defined above.",
          "enum": [
            "SYSTEM",
            "USER"
          ],
          "type": "string",
          "enumDescriptions": [
            "Counter was created by the Dataflow system.",
            "Counter was created by the user."
          ]
        },
        "executionStepName": {
          "type": "string",
          "description": "Name of the stage. An execution step contains multiple component steps."
        },
        "originalStepName": {
          "description": "System generated name of the original step in the user's graph, before optimization.",
          "type": "string"
        },
        "workerId": {
          "type": "string",
          "description": "ID of a particular worker."
        },
        "inputIndex": {
          "format": "int32",
          "type": "integer",
          "description": "Index of an input collection that's being read from/written to as a side input. The index identifies a step's side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them."
        },
        "name": {
          "type": "string",
          "description": "Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required."
        },
        "portion": {
          "type": "string",
          "enum": [
            "ALL",
            "KEY",
            "VALUE"
          ],
          "enumDescriptions": [
            "Counter portion has not been set.",
            "Counter reports a key.",
            "Counter reports a value."
          ],
          "description": "Portion of this counter, either key or value."
        },
        "componentStepName": {
          "description": "Name of the optimized step being executed by the workers.",
          "type": "string"
        }
      },
      "description": "Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job."
    },
    "SourceOperationResponse": {
      "description": "The result of a SourceOperationRequest, specified in ReportWorkItemStatusRequest.source_operation when the work item is completed.",
      "properties": {
        "split": {
          "description": "A response to a request to split a source.",
          "$ref": "SourceSplitResponse"
        },
        "getMetadata": {
          "$ref": "SourceGetMetadataResponse",
          "description": "A response to a request to get metadata about a source."
        }
      },
      "id": "SourceOperationResponse",
      "type": "object"
    },
    "PipelineDescription": {
      "type": "object",
      "properties": {
        "displayData": {
          "type": "array",
          "description": "Pipeline level display data.",
          "items": {
            "$ref": "DisplayData"
          }
        },
        "originalPipelineTransform": {
          "type": "array",
          "items": {
            "$ref": "TransformSummary"
          },
          "description": "Description of each transform in the pipeline and collections between them."
        },
        "executionPipelineStage": {
          "description": "Description of each stage of execution of the pipeline.",
          "items": {
            "$ref": "ExecutionStageSummary"
          },
          "type": "array"
        }
      },
      "id": "PipelineDescription",
      "description": "A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics."
    },
    "StructuredMessage": {
      "id": "StructuredMessage",
      "description": "A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The structured data associated with this message."
        },
        "messageText": {
          "description": "Human-readable version of message.",
          "type": "string"
        },
        "messageKey": {
          "type": "string",
          "description": "Identifier for this message type. Used by external systems to internationalize or personalize message."
        }
      },
      "type": "object"
    },
    "ResourceUtilizationReportResponse": {
      "properties": {},
      "description": "Service-side response to WorkerMessage reporting resource utilization.",
      "type": "object",
      "id": "ResourceUtilizationReportResponse"
    },
    "DistributionUpdate": {
      "description": "A metric value representing a distribution.",
      "properties": {
        "sum": {
          "description": "Use an int64 since we'd prefer the added precision. If overflow is a common problem we can detect it and use an additional int64 or a double.",
          "$ref": "SplitInt64"
        },
        "count": {
          "$ref": "SplitInt64",
          "description": "The count of the number of elements present in the distribution."
        },
        "sumOfSquares": {
          "format": "double",
          "description": "Use a double since the sum of squares is likely to overflow int64.",
          "type": "number"
        },
        "min": {
          "$ref": "SplitInt64",
          "description": "The minimum value present in the distribution."
        },
        "max": {
          "$ref": "SplitInt64",
          "description": "The maximum value present in the distribution."
        },
        "histogram": {
          "$ref": "Histogram",
          "description": "(Optional) Histogram of value counts for the distribution."
        }
      },
      "type": "object",
      "id": "DistributionUpdate"
    },
    "StreamingSideInputLocation": {
      "id": "StreamingSideInputLocation",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Identifies the particular side input within the streaming Dataflow job."
        },
        "stateFamily": {
          "description": "Identifies the state family where this side input is stored.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Identifies the location of a streaming side input."
    },
    "SendWorkerMessagesRequest": {
      "properties": {
        "workerMessages": {
          "description": "The WorkerMessages to send.",
          "items": {
            "$ref": "WorkerMessage"
          },
          "type": "array"
        },
        "location": {
          "type": "string",
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job."
        }
      },
      "type": "object",
      "description": "A request for sending worker messages to the service.",
      "id": "SendWorkerMessagesRequest"
    },
    "StreamingComputationConfig": {
      "type": "object",
      "id": "StreamingComputationConfig",
      "properties": {
        "instructions": {
          "items": {
            "$ref": "ParallelInstruction"
          },
          "description": "Instructions that comprise the computation.",
          "type": "array"
        },
        "computationId": {
          "type": "string",
          "description": "Unique identifier for this computation."
        },
        "stageName": {
          "type": "string",
          "description": "Stage name of this computation."
        },
        "transformUserNameToStateFamily": {
          "type": "object",
          "description": "Map from user name of stateful transforms in this stage to their state family.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemName": {
          "description": "System defined name for this computation.",
          "type": "string"
        }
      },
      "description": "Configuration information for a single streaming computation."
    },
    "DeleteSnapshotResponse": {
      "type": "object",
      "description": "Response from deleting a snapshot.",
      "id": "DeleteSnapshotResponse",
      "properties": {}
    },
    "Artifact": {
      "description": "Job information for templates.",
      "id": "Artifact",
      "properties": {
        "containerSpec": {
          "$ref": "ContainerSpec",
          "description": "Container image path set for flex Template."
        },
        "metadata": {
          "$ref": "TemplateMetadata",
          "description": "Metadata set for legacy Template."
        },
        "jobGraphGcsPath": {
          "description": "job_graph_gcs_path set for legacy Template.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkItem": {
      "properties": {
        "leaseExpireTime": {
          "description": "Time when the lease on this Work will expire.",
          "format": "google-datetime",
          "type": "string"
        },
        "shellTask": {
          "$ref": "ShellTask",
          "description": "Additional information for ShellTask WorkItems."
        },
        "projectId": {
          "type": "string",
          "description": "Identifies the cloud project this WorkItem belongs to."
        },
        "packages": {
          "description": "Any required packages that need to be fetched in order to execute this WorkItem.",
          "items": {
            "$ref": "Package"
          },
          "type": "array"
        },
        "streamingComputationTask": {
          "description": "Additional information for StreamingComputationTask WorkItems.",
          "$ref": "StreamingComputationTask"
        },
        "sourceOperationTask": {
          "description": "Additional information for source operation WorkItems.",
          "$ref": "SourceOperationRequest"
        },
        "initialReportIndex": {
          "type": "string",
          "description": "The initial index to use when reporting the status of the WorkItem.",
          "format": "int64"
        },
        "jobId": {
          "type": "string",
          "description": "Identifies the workflow job this WorkItem belongs to."
        },
        "reportStatusInterval": {
          "description": "Recommended reporting interval.",
          "type": "string",
          "format": "google-duration"
        },
        "mapTask": {
          "description": "Additional information for MapTask WorkItems.",
          "$ref": "MapTask"
        },
        "seqMapTask": {
          "description": "Additional information for SeqMapTask WorkItems.",
          "$ref": "SeqMapTask"
        },
        "id": {
          "description": "Identifies this WorkItem.",
          "format": "int64",
          "type": "string"
        },
        "configuration": {
          "description": "Work item-specific configuration as an opaque blob.",
          "type": "string"
        },
        "streamingSetupTask": {
          "$ref": "StreamingSetupTask",
          "description": "Additional information for StreamingSetupTask WorkItems."
        },
        "streamingConfigTask": {
          "description": "Additional information for StreamingConfigTask WorkItems.",
          "$ref": "StreamingConfigTask"
        }
      },
      "type": "object",
      "description": "WorkItem represents basic information about a WorkItem to be executed in the cloud.",
      "id": "WorkItem"
    },
    "HotKeyDetection": {
      "properties": {
        "userStepName": {
          "type": "string",
          "description": "User-provided name of the step that contains this hot key."
        },
        "systemName": {
          "description": "System-defined name of the step containing this hot key. Unique across the workflow.",
          "type": "string"
        },
        "hotKeyAge": {
          "type": "string",
          "description": "The age of the hot key measured from when it was first detected.",
          "format": "google-duration"
        }
      },
      "type": "object",
      "id": "HotKeyDetection",
      "description": "Proto describing a hot key detected on a given WorkItem."
    },
    "KeyRangeLocation": {
      "description": "Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.",
      "properties": {
        "dataDisk": {
          "description": "The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\".",
          "type": "string"
        },
        "start": {
          "type": "string",
          "description": "The start (inclusive) of the key range."
        },
        "end": {
          "type": "string",
          "description": "The end (exclusive) of the key range."
        },
        "deliveryEndpoint": {
          "description": "The physical location of this range assignment to be used for streaming computation cross-worker message delivery.",
          "type": "string"
        },
        "deprecatedPersistentDirectory": {
          "description": "DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "KeyRangeLocation"
    },
    "SendWorkerMessagesResponse": {
      "properties": {
        "workerMessageResponses": {
          "type": "array",
          "description": "The servers response to the worker messages.",
          "items": {
            "$ref": "WorkerMessageResponse"
          }
        }
      },
      "id": "SendWorkerMessagesResponse",
      "description": "The response to the worker messages.",
      "type": "object"
    },
    "Environment": {
      "description": "Describes the environment in which a Dataflow Job runs.",
      "properties": {
        "tempStoragePrefix": {
          "type": "string",
          "description": "The prefix of the resources the system should use for temporary storage. The system will append the suffix \"/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
        },
        "sdkPipelineOptions": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.",
          "type": "object"
        },
        "internalExperiments": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Experimental settings."
        },
        "serviceKmsKeyName": {
          "type": "string",
          "description": "If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
        },
        "userAgent": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "A description of the process that generated the request."
        },
        "workerRegion": {
          "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
          "type": "string"
        },
        "experiments": {
          "description": "The list of experiments to enable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterManagerApiService": {
          "description": "The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. \"compute.googleapis.com\".",
          "type": "string"
        },
        "workerPools": {
          "items": {
            "$ref": "WorkerPool"
          },
          "description": "The worker pools. At least one \"harness\" worker pool must be specified in order for the job to have workers.",
          "type": "array"
        },
        "workerZone": {
          "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity.",
          "type": "string"
        },
        "serviceAccountEmail": {
          "type": "string",
          "description": "Identity to run virtual machines as. Defaults to the default account."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}"
        },
        "flexResourceSchedulingGoal": {
          "description": "Which Flexible Resource Scheduling mode to run in.",
          "enum": [
            "FLEXRS_UNSPECIFIED",
            "FLEXRS_SPEED_OPTIMIZED",
            "FLEXRS_COST_OPTIMIZED"
          ],
          "enumDescriptions": [
            "Run in the default mode.",
            "Optimize for lower execution time.",
            "Optimize for lower cost."
          ],
          "type": "string"
        },
        "version": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A structure describing which components and their versions of the service are required in order to run the job.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "Environment"
    },
    "Sink": {
      "type": "object",
      "description": "A sink that records can be encoded and written to.",
      "id": "Sink",
      "properties": {
        "spec": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The sink to write to, plus its parameters.",
          "type": "object"
        },
        "codec": {
          "description": "The codec to use to encode data written to the sink.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "SourceFork": {
      "type": "object",
      "properties": {
        "residual": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        },
        "primary": {
          "$ref": "SourceSplitShard",
          "description": "DEPRECATED"
        },
        "residualSource": {
          "$ref": "DerivedSource",
          "description": "DEPRECATED"
        },
        "primarySource": {
          "description": "DEPRECATED",
          "$ref": "DerivedSource"
        }
      },
      "id": "SourceFork",
      "description": "DEPRECATED in favor of DynamicSourceSplit."
    },
    "SDKInfo": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. The SDK version."
        },
        "language": {
          "description": "Required. The SDK Language.",
          "enumDescriptions": [
            "UNKNOWN Language.",
            "Java.",
            "Python."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "JAVA",
            "PYTHON"
          ]
        }
      },
      "description": "SDK Information.",
      "type": "object",
      "id": "SDKInfo"
    },
    "DynamicSourceSplit": {
      "type": "object",
      "id": "DynamicSourceSplit",
      "description": "When a task splits using WorkItemStatus.dynamic_source_split, this message describes the two parts of the split relative to the description of the current task's input.",
      "properties": {
        "residual": {
          "$ref": "DerivedSource",
          "description": "Residual part (returned to the pool of work). Specified relative to the previously-current source."
        },
        "primary": {
          "description": "Primary part (continued to be processed by worker). Specified relative to the previously-current source. Becomes current.",
          "$ref": "DerivedSource"
        }
      }
    },
    "SourceOperationRequest": {
      "description": "A work item that represents the different operations that can be performed on a user-defined Source specification.",
      "id": "SourceOperationRequest",
      "properties": {
        "getMetadata": {
          "$ref": "SourceGetMetadataRequest",
          "description": "Information about a request to get metadata about a source."
        },
        "split": {
          "$ref": "SourceSplitRequest",
          "description": "Information about a request to split a source."
        },
        "name": {
          "type": "string",
          "description": "User-provided name of the Read instruction for this source."
        },
        "originalName": {
          "description": "System-defined name for the Read instruction for this source in the original workflow graph.",
          "type": "string"
        },
        "stageName": {
          "description": "System-defined name of the stage containing the source operation. Unique across the workflow.",
          "type": "string"
        },
        "systemName": {
          "type": "string",
          "description": "System-defined name of the Read instruction for this source. Unique across the workflow."
        }
      },
      "type": "object"
    },
    "ContainerSpec": {
      "type": "object",
      "description": "Container Spec.",
      "id": "ContainerSpec",
      "properties": {
        "metadata": {
          "description": "Metadata describing a template including description and validation rules.",
          "$ref": "TemplateMetadata"
        },
        "image": {
          "type": "string",
          "description": "Name of the docker container image. E.g., gcr.io/project/some-image"
        },
        "defaultEnvironment": {
          "description": "Default runtime environment for the job.",
          "$ref": "FlexTemplateRuntimeEnvironment"
        },
        "sdkInfo": {
          "description": "Required. SDK info of the Flex Template.",
          "$ref": "SDKInfo"
        }
      }
    },
    "StreamingApplianceSnapshotConfig": {
      "type": "object",
      "description": "Streaming appliance snapshot configuration.",
      "id": "StreamingApplianceSnapshotConfig",
      "properties": {
        "snapshotId": {
          "description": "If set, indicates the snapshot id for the snapshot being performed.",
          "type": "string"
        },
        "importStateEndpoint": {
          "description": "Indicates which endpoint is used to import appliance state.",
          "type": "string"
        }
      }
    },
    "LeaseWorkItemResponse": {
      "type": "object",
      "description": "Response to a request to lease WorkItems.",
      "id": "LeaseWorkItemResponse",
      "properties": {
        "workItems": {
          "items": {
            "$ref": "WorkItem"
          },
          "description": "A list of the leased WorkItems.",
          "type": "array"
        },
        "unifiedWorkerResponse": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Untranslated bag-of-bytes WorkResponse for UnifiedWorker.",
          "type": "object"
        }
      }
    },
    "WorkItemStatus": {
      "type": "object",
      "description": "Conveys a worker's progress through the work described by a WorkItem.",
      "id": "WorkItemStatus",
      "properties": {
        "reportedProgress": {
          "description": "The worker's progress through this WorkItem.",
          "$ref": "ApproximateReportedProgress"
        },
        "dynamicSourceSplit": {
          "description": "See documentation of stop_position.",
          "$ref": "DynamicSourceSplit"
        },
        "reportIndex": {
          "description": "The report index. When a WorkItem is leased, the lease will contain an initial report index. When a WorkItem's status is reported to the system, the report should be sent with that report index, and the response will contain the index the worker should use for the next report. Reports received with unexpected index values will be rejected by the service. In order to preserve idempotency, the worker should not alter the contents of a report, even if the worker must submit the same report multiple times before getting back a response. The worker should not submit a subsequent report until the response for the previous report had been received from the service.",
          "type": "string",
          "format": "int64"
        },
        "totalThrottlerWaitTimeSeconds": {
          "type": "number",
          "format": "double",
          "description": "Total time the worker spent being throttled by external systems."
        },
        "completed": {
          "type": "boolean",
          "description": "True if the WorkItem was completed (successfully or unsuccessfully)."
        },
        "metricUpdates": {
          "type": "array",
          "items": {
            "$ref": "MetricUpdate"
          },
          "description": "DEPRECATED in favor of counter_updates."
        },
        "progress": {
          "description": "DEPRECATED in favor of reported_progress.",
          "$ref": "ApproximateProgress"
        },
        "errors": {
          "items": {
            "$ref": "Status"
          },
          "type": "array",
          "description": "Specifies errors which occurred during processing. If errors are provided, and completed = true, then the WorkItem is considered to have failed."
        },
        "requestedLeaseDuration": {
          "description": "Amount of time the worker requests for its lease.",
          "format": "google-duration",
          "type": "string"
        },
        "workItemId": {
          "description": "Identifies the WorkItem.",
          "type": "string"
        },
        "stopPosition": {
          "$ref": "Position",
          "description": "A worker may split an active map task in two parts, \"primary\" and \"residual\", continuing to process the primary part and returning the residual part into the pool of available work. This event is called a \"dynamic split\" and is critical to the dynamic work rebalancing feature. The two obtained sub-tasks are called \"parts\" of the split. The parts, if concatenated, must represent the same input as would be read by the current task if the split did not happen. The exact way in which the original task is decomposed into the two parts is specified either as a position demarcating them (stop_position), or explicitly as two DerivedSources, if this task consumes a user-defined source type (dynamic_source_split). The \"current\" task is adjusted as a result of the split: after a task with range [A, B) sends a stop_position update at C, its range is considered to be [A, C), e.g.: * Progress should be interpreted relative to the new range, e.g. \"75% completed\" means \"75% of [A, C) completed\" * The worker should interpret proposed_stop_position relative to the new range, e.g. \"split at 68%\" should be interpreted as \"split at 68% of [A, C)\". * If the worker chooses to split again using stop_position, only stop_positions in [A, C) will be accepted. * Etc. dynamic_source_split has similar semantics: e.g., if a task with source S splits using dynamic_source_split into {P, R} (where P and R must be together equivalent to S), then subsequent progress and proposed_stop_position should be interpreted relative to P, and in a potential subsequent dynamic_source_split into {P', R'}, P' and R' must be together equivalent to P, etc."
        },
        "sourceOperationResponse": {
          "description": "If the work item represented a SourceOperationRequest, and the work is completed, contains the result of the operation.",
          "$ref": "SourceOperationResponse"
        },
        "counterUpdates": {
          "items": {
            "$ref": "CounterUpdate"
          },
          "description": "Worker output counters for this WorkItem.",
          "type": "array"
        },
        "sourceFork": {
          "$ref": "SourceFork",
          "description": "DEPRECATED in favor of dynamic_source_split."
        }
      }
    },
    "SendDebugCaptureResponse": {
      "type": "object",
      "id": "SendDebugCaptureResponse",
      "properties": {},
      "description": "Response to a send capture request. nothing"
    },
    "IntegerList": {
      "id": "IntegerList",
      "type": "object",
      "properties": {
        "elements": {
          "items": {
            "$ref": "SplitInt64"
          },
          "type": "array",
          "description": "Elements of the list."
        }
      },
      "description": "A metric value representing a list of integers."
    },
    "ReportWorkItemStatusRequest": {
      "description": "Request to report the status of WorkItems.",
      "id": "ReportWorkItemStatusRequest",
      "properties": {
        "workItemStatuses": {
          "description": "The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here.",
          "items": {
            "$ref": "WorkItemStatus"
          },
          "type": "array"
        },
        "workerId": {
          "description": "The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response).",
          "type": "string"
        },
        "location": {
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.",
          "type": "string"
        },
        "unifiedWorkerRequest": {
          "type": "object",
          "description": "Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "currentWorkerTime": {
          "description": "The current timestamp at the worker.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportWorkItemStatusResponse": {
      "description": "Response from a request to report the status of WorkItems.",
      "id": "ReportWorkItemStatusResponse",
      "properties": {
        "unifiedWorkerResponse": {
          "description": "Untranslated bag-of-bytes WorkProgressUpdateResponse for UnifiedWorker.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "workItemServiceStates": {
          "description": "A set of messages indicating the service-side state for each WorkItem whose status was reported, in the same order as the WorkItemStatus messages in the ReportWorkItemStatusRequest which resulting in this response.",
          "items": {
            "$ref": "WorkItemServiceState"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListJobsResponse": {
      "description": "Response to a request to list Cloud Dataflow jobs in a project. This might be a partial response, depending on the page size in the ListJobsRequest. However, if the project does not have any jobs, an instance of ListJobsResponse is not returned and the requests's response body is empty {}.",
      "type": "object",
      "properties": {
        "failedLocation": {
          "type": "array",
          "description": "Zero or more messages describing the [regional endpoints] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.",
          "items": {
            "$ref": "FailedLocation"
          }
        },
        "jobs": {
          "description": "A subset of the requested job information.",
          "items": {
            "$ref": "Job"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Set if there may be more results than fit in this response."
        }
      },
      "id": "ListJobsResponse"
    },
    "LaunchFlexTemplateParameter": {
      "description": "Launch FlexTemplate Parameter.",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The parameters for FlexTemplate. Ex. {\"num_workers\":\"5\"}"
        },
        "jobName": {
          "type": "string",
          "description": "Required. The job name to use for the created job. For update job request, job name should be same as the existing running job."
        },
        "transformNameMappings": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Users need to set transform_name_mappings Ex:{\"oldTransformName\":\"newTransformName\",...}'"
        },
        "containerSpecGcsPath": {
          "type": "string",
          "description": "Gcs path to a file with json serialized ContainerSpec as content."
        },
        "update": {
          "description": "Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.",
          "type": "boolean"
        },
        "environment": {
          "$ref": "FlexTemplateRuntimeEnvironment",
          "description": "The runtime environment for the FlexTemplate job"
        },
        "launchOptions": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters."
        },
        "containerSpec": {
          "description": "Spec about the container image to launch.",
          "$ref": "ContainerSpec"
        }
      },
      "id": "LaunchFlexTemplateParameter"
    },
    "ReportedParallelism": {
      "description": "Represents the level of parallelism in a WorkItem's input, reported by the worker.",
      "id": "ReportedParallelism",
      "properties": {
        "value": {
          "type": "number",
          "description": "Specifies the level of parallelism in case it is finite.",
          "format": "double"
        },
        "isInfinite": {
          "type": "boolean",
          "description": "Specifies whether the parallelism is infinite. If true, \"value\" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack."
        }
      },
      "type": "object"
    },
    "ValidateResponse": {
      "description": "Response to the validation request.",
      "id": "ValidateResponse",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Will be empty if validation succeeds.",
          "type": "string"
        },
        "queryInfo": {
          "$ref": "QueryInfo",
          "description": "Information about the validated query. Not defined if validation fails."
        }
      }
    },
    "GetTemplateResponse": {
      "id": "GetTemplateResponse",
      "type": "object",
      "properties": {
        "templateType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "LEGACY",
            "FLEX"
          ],
          "enumDescriptions": [
            "Unknown Template Type.",
            "Legacy Template.",
            "Flex Template."
          ],
          "description": "Template Type."
        },
        "metadata": {
          "description": "The template metadata describing the template name, available parameters, etc.",
          "$ref": "TemplateMetadata"
        },
        "runtimeMetadata": {
          "description": "Describes the runtime metadata with SDKInfo and available parameters.",
          "$ref": "RuntimeMetadata"
        },
        "status": {
          "$ref": "Status",
          "description": "The status of the get template request. Any problems with the request will be indicated in the error_details."
        }
      },
      "description": "The response to a GetTemplate request."
    },
    "PartialGroupByKeyInstruction": {
      "type": "object",
      "description": "An instruction that does a partial group-by-key. One input and one output.",
      "id": "PartialGroupByKeyInstruction",
      "properties": {
        "originalCombineValuesStepName": {
          "description": "If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.",
          "type": "string"
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "Describes the input to the partial group-by-key instruction."
        },
        "inputElementCodec": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "The codec to use for interpreting an element in the input PTable."
        },
        "sideInputs": {
          "items": {
            "$ref": "SideInputInfo"
          },
          "description": "Zero or more side inputs.",
          "type": "array"
        },
        "valueCombiningFn": {
          "description": "The value combining function to invoke.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "originalCombineValuesInputStoreName": {
          "type": "string",
          "description": "If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues."
        }
      }
    },
    "ListSnapshotsResponse": {
      "description": "List of snapshots.",
      "type": "object",
      "properties": {
        "snapshots": {
          "items": {
            "$ref": "Snapshot"
          },
          "description": "Returned snapshots.",
          "type": "array"
        }
      },
      "id": "ListSnapshotsResponse"
    },
    "DerivedSource": {
      "id": "DerivedSource",
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "Specification of the source."
        },
        "derivationMode": {
          "type": "string",
          "description": "What source to base the produced source on (if any).",
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ],
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ]
        }
      },
      "description": "Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.",
      "type": "object"
    },
    "ConcatPosition": {
      "id": "ConcatPosition",
      "properties": {
        "position": {
          "$ref": "Position",
          "description": "Position within the inner source."
        },
        "index": {
          "format": "int32",
          "description": "Index of the inner source.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources."
    },
    "ComponentTransform": {
      "description": "Description of a transform executed as part of an execution stage.",
      "type": "object",
      "id": "ComponentTransform",
      "properties": {
        "userName": {
          "description": "Human-readable name for this transform; may be user or system generated.",
          "type": "string"
        },
        "originalTransform": {
          "type": "string",
          "description": "User name for the original user transform with which this transform is most closely associated."
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this source."
        }
      }
    },
    "WorkerMessage": {
      "type": "object",
      "id": "WorkerMessage",
      "description": "WorkerMessage provides information to the backend about a worker.",
      "properties": {
        "workerShutdownNotice": {
          "$ref": "WorkerShutdownNotice",
          "description": "Shutdown notice by workers."
        },
        "time": {
          "type": "string",
          "description": "The timestamp of the worker_message.",
          "format": "google-datetime"
        },
        "workerMetrics": {
          "$ref": "ResourceUtilizationReport",
          "description": "Resource metrics reported by workers."
        },
        "workerLifecycleEvent": {
          "$ref": "WorkerLifecycleEvent",
          "description": "Record of worker lifecycle events."
        },
        "workerHealthReport": {
          "description": "The health of a worker.",
          "$ref": "WorkerHealthReport"
        },
        "workerMessageCode": {
          "description": "A worker message code.",
          "$ref": "WorkerMessageCode"
        },
        "labels": {
          "description": "Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \"JOB_ID\": \"2015-04-22\", \"WORKER_ID\": \"wordcount-vm-2015…\" \"CONTAINER_TYPE\": \"worker\", \"CONTAINER_ID\": \"ac1234def\"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "ListJobMessagesResponse": {
      "id": "ListJobMessagesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The token to obtain the next page of results if there are more.",
          "type": "string"
        },
        "autoscalingEvents": {
          "type": "array",
          "items": {
            "$ref": "AutoscalingEvent"
          },
          "description": "Autoscaling events in ascending timestamp order."
        },
        "jobMessages": {
          "items": {
            "$ref": "JobMessage"
          },
          "description": "Messages in ascending timestamp order.",
          "type": "array"
        }
      },
      "description": "Response to a request to list job messages."
    },
    "Parameter": {
      "description": "Structured data associated with this message.",
      "type": "object",
      "id": "Parameter",
      "properties": {
        "value": {
          "description": "Value for this parameter.",
          "type": "any"
        },
        "key": {
          "type": "string",
          "description": "Key or name for this parameter."
        }
      }
    },
    "NameAndKind": {
      "type": "object",
      "description": "Basic metadata about a counter.",
      "id": "NameAndKind",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the counter."
        },
        "kind": {
          "type": "string",
          "description": "Counter aggregation kind.",
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ],
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ]
        }
      }
    },
    "LaunchTemplateResponse": {
      "description": "Response to the request to launch a template.",
      "type": "object",
      "id": "LaunchTemplateResponse",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "The job that was launched, if the request was not a dry run and the job was successfully launched."
        }
      }
    },
    "ApproximateSplitRequest": {
      "properties": {
        "position": {
          "description": "A Position at which to split the work item.",
          "$ref": "Position"
        },
        "fractionOfRemainder": {
          "description": "The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).",
          "format": "double",
          "type": "number"
        },
        "fractionConsumed": {
          "format": "double",
          "type": "number",
          "description": "A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input)."
        }
      },
      "description": "A suggestion by the service to the worker to dynamically split the WorkItem.",
      "type": "object",
      "id": "ApproximateSplitRequest"
    },
    "StreamingStageLocation": {
      "description": "Identifies the location of a streaming computation stage, for stage-to-stage communication.",
      "id": "StreamingStageLocation",
      "type": "object",
      "properties": {
        "streamId": {
          "description": "Identifies the particular stream within the streaming Dataflow job.",
          "type": "string"
        }
      }
    },
    "StringList": {
      "type": "object",
      "id": "StringList",
      "description": "A metric value representing a list of strings.",
      "properties": {
        "elements": {
          "type": "array",
          "description": "Elements of the list.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IntegerGauge": {
      "id": "IntegerGauge",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "The time at which this value was measured. Measured as msecs from epoch.",
          "type": "string",
          "format": "google-datetime"
        },
        "value": {
          "$ref": "SplitInt64",
          "description": "The value of the variable represented by this gauge."
        }
      },
      "description": "A metric value representing temporal values of a variable."
    },
    "AutoscalingSettings": {
      "description": "Settings for WorkerPool autoscaling.",
      "type": "object",
      "id": "AutoscalingSettings",
      "properties": {
        "maxNumWorkers": {
          "description": "The maximum number of workers to cap scaling at.",
          "type": "integer",
          "format": "int32"
        },
        "algorithm": {
          "enum": [
            "AUTOSCALING_ALGORITHM_UNKNOWN",
            "AUTOSCALING_ALGORITHM_NONE",
            "AUTOSCALING_ALGORITHM_BASIC"
          ],
          "enumDescriptions": [
            "The algorithm is unknown, or unspecified.",
            "Disable autoscaling.",
            "Increase worker count over time to reduce job execution time."
          ],
          "description": "The algorithm to use for autoscaling.",
          "type": "string"
        }
      }
    },
    "SpannerIODetails": {
      "description": "Metadata for a Spanner connector used by the job.",
      "id": "SpannerIODetails",
      "type": "object",
      "properties": {
        "instanceId": {
          "description": "InstanceId accessed in the connection.",
          "type": "string"
        },
        "databaseId": {
          "type": "string",
          "description": "DatabaseId accessed in the connection."
        },
        "projectId": {
          "type": "string",
          "description": "ProjectId accessed in the connection."
        }
      }
    },
    "ShellTask": {
      "properties": {
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Exit code for the task."
        },
        "command": {
          "type": "string",
          "description": "The shell command to run."
        }
      },
      "type": "object",
      "description": "A task which consists of a shell command for the worker to execute.",
      "id": "ShellTask"
    },
    "ModifyTemplateVersionLabelResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "All the label in the TemplateVersion."
        }
      },
      "id": "ModifyTemplateVersionLabelResponse",
      "description": "Respond the labels in the TemplateVersion."
    },
    "GetDebugConfigResponse": {
      "id": "GetDebugConfigResponse",
      "properties": {
        "config": {
          "type": "string",
          "description": "The encoded debug configuration for the requested component."
        }
      },
      "description": "Response to a get debug configuration request.",
      "type": "object"
    },
    "WorkerLifecycleEvent": {
      "type": "object",
      "id": "WorkerLifecycleEvent",
      "description": "A report of an event in a worker's lifecycle. The proto contains one event, because the worker is expected to asynchronously send each message immediately after the event. Due to this asynchrony, messages may arrive out of order (or missing), and it is up to the consumer to interpret. The timestamp of the event is in the enclosing WorkerMessage proto.",
      "properties": {
        "metadata": {
          "description": "Other stats that can accompany an event. E.g. { \"downloaded_bytes\" : \"123456\" }",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "containerStartTime": {
          "type": "string",
          "description": "The start time of this container. All events will report this so that events can be grouped together across container/VM restarts.",
          "format": "google-datetime"
        },
        "event": {
          "type": "string",
          "enum": [
            "UNKNOWN_EVENT",
            "OS_START",
            "CONTAINER_START",
            "NETWORK_UP",
            "STAGING_FILES_DOWNLOAD_START",
            "STAGING_FILES_DOWNLOAD_FINISH",
            "SDK_INSTALL_START",
            "SDK_INSTALL_FINISH"
          ],
          "description": "The event being reported.",
          "enumDescriptions": [
            "Invalid event.",
            "The time the VM started.",
            "Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.",
            "The worker has a functional external network connection.",
            "Started downloading staging files.",
            "Finished downloading all staging files.",
            "For applicable SDKs, started installation of SDK and worker packages.",
            "Finished installing SDK."
          ]
        }
      }
    },
    "Position": {
      "description": "Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.",
      "id": "Position",
      "type": "object",
      "properties": {
        "recordIndex": {
          "type": "string",
          "description": "Position is a record index.",
          "format": "int64"
        },
        "byteOffset": {
          "type": "string",
          "description": "Position is a byte offset.",
          "format": "int64"
        },
        "concatPosition": {
          "$ref": "ConcatPosition",
          "description": "CloudPosition is a concat position."
        },
        "end": {
          "type": "boolean",
          "description": "Position is past all other positions. Also useful for the end position of an unbounded range."
        },
        "key": {
          "type": "string",
          "description": "Position is a string key, ordered lexicographically."
        },
        "shufflePosition": {
          "type": "string",
          "description": "CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding)."
        }
      }
    },
    "FailedLocation": {
      "properties": {
        "name": {
          "description": "The name of the [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that failed to respond.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Indicates which [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) failed to respond to a request for data.",
      "id": "FailedLocation"
    },
    "WriteInstruction": {
      "type": "object",
      "properties": {
        "input": {
          "description": "The input.",
          "$ref": "InstructionInput"
        },
        "sink": {
          "description": "The sink to write to.",
          "$ref": "Sink"
        }
      },
      "id": "WriteInstruction",
      "description": "An instruction that writes records. Takes one input, produces no outputs."
    },
    "ModifyTemplateVersionTagRequest": {
      "properties": {
        "removeOnly": {
          "description": "The flag that indicates if the request is only for remove tag from TemplateVersion.",
          "type": "boolean"
        },
        "tag": {
          "type": "string",
          "description": "The tag for update."
        }
      },
      "type": "object",
      "id": "ModifyTemplateVersionTagRequest",
      "description": "Add a tag to the current TemplateVersion. If tag exist in another TemplateVersion in the Template, remove the tag before add it to the current TemplateVersion. If remove_only set, remove the tag from the current TemplateVersion."
    },
    "BigQueryIODetails": {
      "id": "BigQueryIODetails",
      "properties": {
        "query": {
          "type": "string",
          "description": "Query used to access data in the connection."
        },
        "table": {
          "type": "string",
          "description": "Table accessed in the connection."
        },
        "dataset": {
          "description": "Dataset accessed in the connection.",
          "type": "string"
        },
        "projectId": {
          "description": "Project accessed in the connection.",
          "type": "string"
        }
      },
      "description": "Metadata for a BigQuery connector used by the job.",
      "type": "object"
    },
    "ExecutionStageState": {
      "id": "ExecutionStageState",
      "description": "A message describing the state of a particular execution stage.",
      "properties": {
        "currentStateTime": {
          "type": "string",
          "description": "The time at which the stage transitioned to this state.",
          "format": "google-datetime"
        },
        "executionStageName": {
          "description": "The name of the execution stage.",
          "type": "string"
        },
        "executionStageState": {
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
            "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
            "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are intersted."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED",
            "JOB_STATE_RESOURCE_CLEANING_UP"
          ],
          "type": "string",
          "description": "Executions stage states allow the same set of values as JobState."
        }
      },
      "type": "object"
    },
    "SendDebugCaptureRequest": {
      "type": "object",
      "description": "Request to send encoded debug information.",
      "id": "SendDebugCaptureRequest",
      "properties": {
        "workerId": {
          "type": "string",
          "description": "The worker id, i.e., VM hostname."
        },
        "location": {
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.",
          "type": "string"
        },
        "componentId": {
          "description": "The internal component id for which debug information is sent.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "The encoded debug information."
        }
      }
    },
    "StreamingConfigTask": {
      "id": "StreamingConfigTask",
      "description": "A task that carries configuration information for streaming computations.",
      "properties": {
        "windmillServiceEndpoint": {
          "description": "If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.",
          "type": "string"
        },
        "windmillServicePort": {
          "description": "If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.",
          "type": "string",
          "format": "int64"
        },
        "userStepToStateFamilyNameMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map from user step names to state families."
        },
        "getDataStreamChunkSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Chunk size for get data streams from the harness to windmill."
        },
        "commitStreamChunkSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "Chunk size for commit streams from the harness to windmill."
        },
        "streamingComputationConfigs": {
          "type": "array",
          "items": {
            "$ref": "StreamingComputationConfig"
          },
          "description": "Set of computation configuration information."
        },
        "maxWorkItemCommitBytes": {
          "format": "int64",
          "type": "string",
          "description": "Maximum size for work item commit supported windmill storage layer."
        }
      },
      "type": "object"
    },
    "CustomSourceLocation": {
      "properties": {
        "stateful": {
          "description": "Whether this source is stateful.",
          "type": "boolean"
        }
      },
      "id": "CustomSourceLocation",
      "description": "Identifies the location of a custom souce.",
      "type": "object"
    },
    "Point": {
      "description": "A point in the timeseries.",
      "properties": {
        "value": {
          "description": "The value of the point.",
          "format": "double",
          "type": "number"
        },
        "time": {
          "description": "The timestamp of the point.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "Point"
    },
    "WorkerShutdownNoticeResponse": {
      "properties": {},
      "id": "WorkerShutdownNoticeResponse",
      "description": "Service-side response to WorkerMessage issuing shutdown notice.",
      "type": "object"
    },
    "CPUTime": {
      "properties": {
        "rate": {
          "description": "Average CPU utilization rate (% non-idle cpu / second) since previous sample.",
          "type": "number",
          "format": "double"
        },
        "totalMs": {
          "description": "Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up.",
          "type": "string",
          "format": "uint64"
        },
        "timestamp": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp of the measurement."
        }
      },
      "type": "object",
      "description": "Modeled after information exposed by /proc/stat.",
      "id": "CPUTime"
    },
    "ModifyTemplateVersionTagResponse": {
      "description": "Respond the current tags in the TemplateVersion.",
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "All the tags in the TemplateVersion.",
          "type": "array"
        }
      },
      "id": "ModifyTemplateVersionTagResponse",
      "type": "object"
    },
    "FloatingPointMean": {
      "type": "object",
      "id": "FloatingPointMean",
      "description": "A representation of a floating point mean metric contribution.",
      "properties": {
        "sum": {
          "type": "number",
          "description": "The sum of all values being aggregated.",
          "format": "double"
        },
        "count": {
          "description": "The number of values being aggregated.",
          "$ref": "SplitInt64"
        }
      }
    },
    "Source": {
      "id": "Source",
      "properties": {
        "baseSpecs": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            },
            "type": "object"
          },
          "type": "array",
          "description": "While splitting, sources may specify the produced bundles as differences against another source, in order to save backend-side memory and allow bigger jobs. For details, see SourceSplitRequest. To support this use case, the full set of parameters of the source is logically obtained by taking the latest explicitly specified value of each parameter in the order: base_specs (later items win), spec (overrides anything in base_specs)."
        },
        "doesNotNeedSplitting": {
          "description": "Setting this value to true hints to the framework that the source doesn't need splitting, and using SourceSplitRequest on it would yield SOURCE_SPLIT_OUTCOME_USE_CURRENT. E.g. a file splitter may set this to true when splitting a single file into a set of byte ranges of appropriate size, and set this to false when splitting a filepattern into individual files. However, for efficiency, a file splitter may decide to produce file subranges directly from the filepattern to avoid a splitting round-trip. See SourceSplitRequest for an overview of the splitting process. This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don't have this field populated.",
          "type": "boolean"
        },
        "spec": {
          "type": "object",
          "description": "The source to read from, plus its parameters.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "Optionally, metadata for this source can be supplied right away, avoiding a SourceGetMetadataOperation roundtrip (see SourceOperationRequest). This field is meaningful only in the Source objects populated by the user (e.g. when filling in a DerivedSource). Source objects supplied by the framework to the user don't have this field populated."
        },
        "codec": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "The codec to use to decode data read from the source."
        }
      },
      "type": "object",
      "description": "A source that records can be read and decoded from."
    },
    "CounterUpdate": {
      "id": "CounterUpdate",
      "description": "An update to a Counter sent from a worker.",
      "type": "object",
      "properties": {
        "boolean": {
          "description": "Boolean value for And, Or.",
          "type": "boolean"
        },
        "floatingPointMean": {
          "$ref": "FloatingPointMean",
          "description": "Floating point mean aggregation value for Mean."
        },
        "floatingPoint": {
          "format": "double",
          "description": "Floating point value for Sum, Max, Min.",
          "type": "number"
        },
        "nameAndKind": {
          "description": "Counter name and aggregation type.",
          "$ref": "NameAndKind"
        },
        "shortId": {
          "format": "int64",
          "type": "string",
          "description": "The service-generated short identifier for this counter. The short_id -\u003e (name, metadata) mapping is constant for the lifetime of a job."
        },
        "integerGauge": {
          "description": "Gauge data",
          "$ref": "IntegerGauge"
        },
        "stringList": {
          "$ref": "StringList",
          "description": "List of strings, for Set."
        },
        "structuredNameAndMetadata": {
          "description": "Counter structured name and metadata.",
          "$ref": "CounterStructuredNameAndMetadata"
        },
        "internal": {
          "description": "Value for internally-defined counters used by the Dataflow service.",
          "type": "any"
        },
        "integerList": {
          "description": "List of integers, for Set.",
          "$ref": "IntegerList"
        },
        "cumulative": {
          "description": "True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta.",
          "type": "boolean"
        },
        "integerMean": {
          "description": "Integer mean aggregation value for Mean.",
          "$ref": "IntegerMean"
        },
        "floatingPointList": {
          "description": "List of floating point numbers, for Set.",
          "$ref": "FloatingPointList"
        },
        "distribution": {
          "$ref": "DistributionUpdate",
          "description": "Distribution data"
        },
        "integer": {
          "$ref": "SplitInt64",
          "description": "Integer value for Sum, Max, Min."
        }
      }
    },
    "ExecutionStageSummary": {
      "id": "ExecutionStageSummary",
      "type": "object",
      "description": "Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.",
      "properties": {
        "prerequisiteStage": {
          "description": "Other stages that must complete before this stage can run.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Dataflow service generated id for this stage."
        },
        "outputSource": {
          "type": "array",
          "description": "Output sources for this stage.",
          "items": {
            "$ref": "StageSource"
          }
        },
        "componentTransform": {
          "type": "array",
          "description": "Transforms that comprise this execution stage.",
          "items": {
            "$ref": "ComponentTransform"
          }
        },
        "name": {
          "type": "string",
          "description": "Dataflow service generated name for this stage."
        },
        "inputSource": {
          "description": "Input sources for this stage.",
          "items": {
            "$ref": "StageSource"
          },
          "type": "array"
        },
        "kind": {
          "enumDescriptions": [
            "Unrecognized transform type.",
            "ParDo transform.",
            "Group By Key transform.",
            "Flatten transform.",
            "Read transform.",
            "Write transform.",
            "Constructs from a constant value, such as with Create.of.",
            "Creates a Singleton view of a collection.",
            "Opening or closing a shuffle session, often as part of a GroupByKey."
          ],
          "description": "Type of tranform this stage is executing.",
          "type": "string",
          "enum": [
            "UNKNOWN_KIND",
            "PAR_DO_KIND",
            "GROUP_BY_KEY_KIND",
            "FLATTEN_KIND",
            "READ_KIND",
            "WRITE_KIND",
            "CONSTANT_KIND",
            "SINGLETON_KIND",
            "SHUFFLE_KIND"
          ]
        },
        "componentSource": {
          "items": {
            "$ref": "ComponentSource"
          },
          "type": "array",
          "description": "Collections produced and consumed by component transforms of this stage."
        }
      }
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SourceSplitShard": {
      "properties": {
        "source": {
          "description": "DEPRECATED",
          "$ref": "Source"
        },
        "derivationMode": {
          "type": "string",
          "enum": [
            "SOURCE_DERIVATION_MODE_UNKNOWN",
            "SOURCE_DERIVATION_MODE_INDEPENDENT",
            "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",
            "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
          ],
          "description": "DEPRECATED",
          "enumDescriptions": [
            "The source derivation is unknown, or unspecified.",
            "Produce a completely independent Source with no base.",
            "Produce a Source based on the Source being split.",
            "Produce a Source based on the base of the Source being split."
          ]
        }
      },
      "description": "DEPRECATED in favor of DerivedSource.",
      "type": "object",
      "id": "SourceSplitShard"
    },
    "SideInputInfo": {
      "properties": {
        "kind": {
          "description": "How to interpret the source element(s) as a side input value.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "tag": {
          "type": "string",
          "description": "The id of the tag the user code will access this side input by; this should correspond to the tag of some MultiOutputInfo."
        },
        "sources": {
          "description": "The source(s) to read element(s) from to get the value of this side input. If more than one source, then the elements are taken from the sources, in the specified order if order matters. At least one source is required.",
          "items": {
            "$ref": "Source"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Information about a side input of a DoFn or an input of a SeqDoFn.",
      "id": "SideInputInfo"
    },
    "JobMessage": {
      "type": "object",
      "id": "JobMessage",
      "properties": {
        "id": {
          "description": "Deprecated.",
          "type": "string"
        },
        "messageText": {
          "description": "The text of the message.",
          "type": "string"
        },
        "messageImportance": {
          "enumDescriptions": [
            "The message importance isn't specified, or is unknown.",
            "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.",
            "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.",
            "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
            "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
            "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
          ],
          "type": "string",
          "description": "Importance level of the message.",
          "enum": [
            "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
            "JOB_MESSAGE_DEBUG",
            "JOB_MESSAGE_DETAILED",
            "JOB_MESSAGE_BASIC",
            "JOB_MESSAGE_WARNING",
            "JOB_MESSAGE_ERROR"
          ]
        },
        "time": {
          "description": "The timestamp of the message.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "A particular message pertaining to a Dataflow job."
    },
    "FileIODetails": {
      "type": "object",
      "id": "FileIODetails",
      "description": "Metadata for a File connector used by the job.",
      "properties": {
        "filePattern": {
          "description": "File Pattern used to access files by the connector.",
          "type": "string"
        }
      }
    },
    "WorkItemDetails": {
      "properties": {
        "taskId": {
          "description": "Name of this work item.",
          "type": "string"
        },
        "metrics": {
          "items": {
            "$ref": "MetricUpdate"
          },
          "type": "array",
          "description": "Metrics for this work item."
        },
        "attemptId": {
          "description": "Attempt ID of this work item",
          "type": "string"
        },
        "progress": {
          "description": "Progress of this work item.",
          "$ref": "ProgressTimeseries"
        },
        "startTime": {
          "description": "Start time of this work item attempt.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "State of this work item.",
          "enumDescriptions": [
            "The component state is unknown or unspecified.",
            "The component is not yet running.",
            "The component is currently running.",
            "The component succeeded.",
            "The component failed.",
            "Execution of the component was cancelled."
          ],
          "type": "string",
          "enum": [
            "EXECUTION_STATE_UNKNOWN",
            "EXECUTION_STATE_NOT_STARTED",
            "EXECUTION_STATE_RUNNING",
            "EXECUTION_STATE_SUCCEEDED",
            "EXECUTION_STATE_FAILED",
            "EXECUTION_STATE_CANCELLED"
          ]
        },
        "endTime": {
          "description": "End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "WorkItemDetails",
      "description": "Information about an individual work item execution.",
      "type": "object"
    },
    "ReadInstruction": {
      "properties": {
        "source": {
          "description": "The source to read from.",
          "$ref": "Source"
        }
      },
      "id": "ReadInstruction",
      "type": "object",
      "description": "An instruction that reads records. Takes no inputs, produces one output."
    },
    "WorkerDetails": {
      "type": "object",
      "description": "Information about a worker",
      "properties": {
        "workItems": {
          "type": "array",
          "description": "Work items processed by this worker, sorted by time.",
          "items": {
            "$ref": "WorkItemDetails"
          }
        },
        "workerName": {
          "description": "Name of this worker",
          "type": "string"
        }
      },
      "id": "WorkerDetails"
    },
    "WorkerShutdownNotice": {
      "properties": {
        "reason": {
          "description": "The reason for the worker shutdown. Current possible values are: \"UNKNOWN\": shutdown reason is unknown. \"PREEMPTION\": shutdown reason is preemption. Other possible reasons may be added in the future.",
          "type": "string"
        }
      },
      "description": "Shutdown notification from workers. This is to be sent by the shutdown script of the worker VM so that the backend knows that the VM is being shut down.",
      "id": "WorkerShutdownNotice",
      "type": "object"
    },
    "SdkVersion": {
      "id": "SdkVersion",
      "type": "object",
      "description": "The version of the SDK used to run the job.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of the SDK used to run the job."
        },
        "versionDisplayName": {
          "description": "A readable string describing the version of the SDK.",
          "type": "string"
        },
        "sdkSupportStatus": {
          "description": "The support status for this SDK version.",
          "enum": [
            "UNKNOWN",
            "SUPPORTED",
            "STALE",
            "DEPRECATED",
            "UNSUPPORTED"
          ],
          "enumDescriptions": [
            "Cloud Dataflow is unaware of this version.",
            "This is a known version of an SDK, and is supported.",
            "A newer version of the SDK family exists, and an update is recommended.",
            "This version of the SDK is deprecated and will eventually be no longer supported.",
            "Support for this SDK version has ended and it should no longer be used."
          ],
          "type": "string"
        }
      }
    },
    "BigTableIODetails": {
      "type": "object",
      "id": "BigTableIODetails",
      "properties": {
        "tableId": {
          "description": "TableId accessed in the connection.",
          "type": "string"
        },
        "instanceId": {
          "type": "string",
          "description": "InstanceId accessed in the connection."
        },
        "projectId": {
          "description": "ProjectId accessed in the connection.",
          "type": "string"
        }
      },
      "description": "Metadata for a BigTable connector used by the job."
    },
    "DataDiskAssignment": {
      "description": "Data disk assignment for a given VM instance.",
      "type": "object",
      "properties": {
        "vmInstance": {
          "description": "VM instance name the data disks mounted to, for example \"myproject-1014-104817-4c2-harness-0\".",
          "type": "string"
        },
        "dataDisks": {
          "description": "Mounted data disks. The order is important a data disk's 0-based index in this list defines which persistent directory the disk is mounted to, for example the list of { \"myproject-1014-104817-4c2-harness-0-disk-0\" }, { \"myproject-1014-104817-4c2-harness-0-disk-1\" }.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "DataDiskAssignment"
    },
    "QueryInfo": {
      "type": "object",
      "properties": {
        "queryProperty": {
          "items": {
            "enumDescriptions": [
              "The query property is unknown or unspecified.",
              "Indicates this query reads from \u003e= 1 unbounded source."
            ],
            "enum": [
              "QUERY_PROPERTY_UNSPECIFIED",
              "HAS_UNBOUNDED_SOURCE"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Includes an entry for each satisfied QueryProperty."
        }
      },
      "description": "Information about a validated query.",
      "id": "QueryInfo"
    },
    "StreamLocation": {
      "properties": {
        "streamingStageLocation": {
          "description": "The stream is part of another computation within the current streaming Dataflow job.",
          "$ref": "StreamingStageLocation"
        },
        "customSourceLocation": {
          "$ref": "CustomSourceLocation",
          "description": "The stream is a custom source."
        },
        "pubsubLocation": {
          "$ref": "PubsubLocation",
          "description": "The stream is a pubsub stream."
        },
        "sideInputLocation": {
          "description": "The stream is a streaming side input.",
          "$ref": "StreamingSideInputLocation"
        }
      },
      "description": "Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.",
      "type": "object",
      "id": "StreamLocation"
    },
    "JobExecutionInfo": {
      "type": "object",
      "id": "JobExecutionInfo",
      "description": "Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.",
      "properties": {
        "stages": {
          "description": "A mapping from each stage to the information about that stage.",
          "type": "object",
          "additionalProperties": {
            "$ref": "JobExecutionStageInfo"
          }
        }
      }
    },
    "StreamingSetupTask": {
      "type": "object",
      "id": "StreamingSetupTask",
      "description": "A task which initializes part of a streaming Dataflow job.",
      "properties": {
        "drain": {
          "description": "The user has requested drain.",
          "type": "boolean"
        },
        "workerHarnessPort": {
          "type": "integer",
          "description": "The TCP port used by the worker to communicate with the Dataflow worker harness.",
          "format": "int32"
        },
        "receiveWorkPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port on which the worker should listen for messages from other streaming computation workers."
        },
        "streamingComputationTopology": {
          "description": "The global topology of the streaming Dataflow job.",
          "$ref": "TopologyConfig"
        },
        "snapshotConfig": {
          "$ref": "StreamingApplianceSnapshotConfig",
          "description": "Configures streaming appliance snapshot."
        }
      }
    },
    "LaunchTemplateParameters": {
      "id": "LaunchTemplateParameters",
      "properties": {
        "parameters": {
          "description": "The runtime parameters to pass to the job.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "environment": {
          "$ref": "RuntimeEnvironment",
          "description": "The runtime environment for the job."
        },
        "transformNameMapping": {
          "type": "object",
          "description": "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jobName": {
          "description": "Required. The job name to use for the created job.",
          "type": "string"
        },
        "update": {
          "type": "boolean",
          "description": "If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state."
        }
      },
      "type": "object",
      "description": "Parameters to provide to the template being launched."
    },
    "FlattenInstruction": {
      "description": "An instruction that copies its inputs (zero or more) to its (single) output.",
      "type": "object",
      "properties": {
        "inputs": {
          "items": {
            "$ref": "InstructionInput"
          },
          "type": "array",
          "description": "Describes the inputs to the flatten instruction."
        }
      },
      "id": "FlattenInstruction"
    },
    "ModifyTemplateVersionLabelRequest": {
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key for update."
        },
        "op": {
          "enum": [
            "OPERATION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ],
          "type": "string",
          "description": "Requests for add label to TemplateVersion or remove label from TemplateVersion.",
          "enumDescriptions": [
            "Default value.",
            "Add the label to the TemplateVersion object.",
            "Remove the label from the TemplateVersion object."
          ]
        },
        "value": {
          "description": "The label value for update.",
          "type": "string"
        }
      },
      "description": "Either add the label to TemplateVersion or remove it from the TemplateVersion.",
      "id": "ModifyTemplateVersionLabelRequest",
      "type": "object"
    },
    "Job": {
      "description": "Defines a job to be run by the Cloud Dataflow service.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service."
        },
        "replaceJobId": {
          "description": "If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.",
          "type": "string"
        },
        "pipelineDescription": {
          "description": "Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.",
          "$ref": "PipelineDescription"
        },
        "jobMetadata": {
          "$ref": "JobMetadata",
          "description": "This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher."
        },
        "type": {
          "type": "string",
          "description": "The type of Cloud Dataflow job.",
          "enumDescriptions": [
            "The type of the job is unspecified, or unknown.",
            "A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done.",
            "A continuously streaming job with no end: data is read, processed, and written continuously."
          ],
          "enum": [
            "JOB_TYPE_UNKNOWN",
            "JOB_TYPE_BATCH",
            "JOB_TYPE_STREAMING"
          ]
        },
        "transformNameMapping": {
          "description": "The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "tempFiles": {
          "type": "array",
          "description": "A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
          "items": {
            "type": "string"
          }
        },
        "currentStateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp associated with the current state."
        },
        "labels": {
          "description": "User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be \u003c= 128 bytes in size.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "createdFromSnapshotId": {
          "description": "If this is specified, the job's initial state is populated from the given snapshot.",
          "type": "string"
        },
        "stepsLocation": {
          "description": "The GCS location where the steps are stored.",
          "type": "string"
        },
        "requestedState": {
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
            "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
            "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are intersted."
          ],
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED",
            "JOB_STATE_RESOURCE_CLEANING_UP"
          ],
          "type": "string",
          "description": "The job's requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job's requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state."
        },
        "stageStates": {
          "description": "This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.",
          "type": "array",
          "items": {
            "$ref": "ExecutionStageState"
          }
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.",
          "type": "string"
        },
        "name": {
          "description": "The user-specified Cloud Dataflow job name. Only one Job with a given name may exist in a project at any given time. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,38}[a-z0-9])?`",
          "type": "string"
        },
        "executionInfo": {
          "description": "Deprecated.",
          "$ref": "JobExecutionInfo"
        },
        "currentState": {
          "enumDescriptions": [
            "The job's run state isn't specified.",
            "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
            "`JOB_STATE_RUNNING` indicates that the job is currently running.",
            "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
            "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
            "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
            "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
            "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
            "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
            "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
            "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are intersted."
          ],
          "type": "string",
          "enum": [
            "JOB_STATE_UNKNOWN",
            "JOB_STATE_STOPPED",
            "JOB_STATE_RUNNING",
            "JOB_STATE_DONE",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_UPDATED",
            "JOB_STATE_DRAINING",
            "JOB_STATE_DRAINED",
            "JOB_STATE_PENDING",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_QUEUED",
            "JOB_STATE_RESOURCE_CLEANING_UP"
          ],
          "description": "The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it."
        },
        "projectId": {
          "description": "The ID of the Cloud Platform project that the job belongs to.",
          "type": "string"
        },
        "clientRequestId": {
          "description": "The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.",
          "type": "string"
        },
        "replacedByJobId": {
          "description": "If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job."
        },
        "id": {
          "description": "The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.",
          "type": "string"
        },
        "environment": {
          "description": "The environment for the job.",
          "$ref": "Environment"
        },
        "steps": {
          "items": {
            "$ref": "Step"
          },
          "type": "array",
          "description": "Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL."
        }
      },
      "type": "object",
      "id": "Job"
    },
    "MultiOutputInfo": {
      "type": "object",
      "description": "Information about an output of a multi-output DoFn.",
      "properties": {
        "tag": {
          "description": "The id of the tag the user code will emit to this output by; this should correspond to the tag of some SideInputInfo.",
          "type": "string"
        }
      },
      "id": "MultiOutputInfo"
    },
    "JobExecutionStageInfo": {
      "description": "Contains information about how a particular google.dataflow.v1beta3.Step will be executed.",
      "id": "JobExecutionStageInfo",
      "type": "object",
      "properties": {
        "stepName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage."
        }
      }
    },
    "PubsubSnapshotMetadata": {
      "id": "PubsubSnapshotMetadata",
      "type": "object",
      "description": "Represents a Pubsub snapshot.",
      "properties": {
        "topicName": {
          "type": "string",
          "description": "The name of the Pubsub topic."
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The expire time of the Pubsub snapshot."
        },
        "snapshotName": {
          "description": "The name of the Pubsub snapshot.",
          "type": "string"
        }
      }
    },
    "JobMetrics": {
      "type": "object",
      "description": "JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring.",
      "id": "JobMetrics",
      "properties": {
        "metricTime": {
          "description": "Timestamp as of which metric values are current.",
          "format": "google-datetime",
          "type": "string"
        },
        "metrics": {
          "description": "All metrics for this job.",
          "items": {
            "$ref": "MetricUpdate"
          },
          "type": "array"
        }
      }
    },
    "CounterMetadata": {
      "properties": {
        "standardUnits": {
          "enum": [
            "BYTES",
            "BYTES_PER_SEC",
            "MILLISECONDS",
            "MICROSECONDS",
            "NANOSECONDS",
            "TIMESTAMP_MSEC",
            "TIMESTAMP_USEC",
            "TIMESTAMP_NSEC"
          ],
          "type": "string",
          "enumDescriptions": [
            "Counter returns a value in bytes.",
            "Counter returns a value in bytes per second.",
            "Counter returns a value in milliseconds.",
            "Counter returns a value in microseconds.",
            "Counter returns a value in nanoseconds.",
            "Counter returns a timestamp in milliseconds.",
            "Counter returns a timestamp in microseconds.",
            "Counter returns a timestamp in nanoseconds."
          ],
          "description": "System defined Units, see above enum."
        },
        "description": {
          "description": "Human-readable description of the counter semantics.",
          "type": "string"
        },
        "kind": {
          "enumDescriptions": [
            "Counter aggregation kind was not set.",
            "Aggregated value is the sum of all contributed values.",
            "Aggregated value is the max of all contributed values.",
            "Aggregated value is the min of all contributed values.",
            "Aggregated value is the mean of all contributed values.",
            "Aggregated value represents the logical 'or' of all contributed values.",
            "Aggregated value represents the logical 'and' of all contributed values.",
            "Aggregated value is a set of unique contributed values.",
            "Aggregated value captures statistics about a distribution.",
            "Aggregated value tracks the latest value of a variable."
          ],
          "type": "string",
          "description": "Counter aggregation kind.",
          "enum": [
            "INVALID",
            "SUM",
            "MAX",
            "MIN",
            "MEAN",
            "OR",
            "AND",
            "SET",
            "DISTRIBUTION",
            "LATEST_VALUE"
          ]
        },
        "otherUnits": {
          "description": "A string referring to the unit type.",
          "type": "string"
        }
      },
      "id": "CounterMetadata",
      "type": "object",
      "description": "CounterMetadata includes all static non-name non-value counter attributes."
    },
    "RuntimeEnvironment": {
      "properties": {
        "serviceAccountEmail": {
          "description": "The email address of the service account to run the job as.",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
          "type": "string"
        },
        "numWorkers": {
          "description": "The initial number of Google Compute Engine instnaces for the job.",
          "type": "integer",
          "format": "int32"
        },
        "machineType": {
          "type": "string",
          "description": "The machine type to use for the job. Defaults to the value from the template if not specified."
        },
        "subnetwork": {
          "type": "string",
          "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL."
        },
        "maxWorkers": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000."
        },
        "additionalExperiments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Additional experiment flags for the job."
        },
        "tempLocation": {
          "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
          "type": "string"
        },
        "ipConfiguration": {
          "enum": [
            "WORKER_IP_UNSPECIFIED",
            "WORKER_IP_PUBLIC",
            "WORKER_IP_PRIVATE"
          ],
          "description": "Configuration for VM IPs.",
          "type": "string",
          "enumDescriptions": [
            "The configuration is unknown, or unspecified.",
            "Workers should have public IP addresses.",
            "Workers should have private IP addresses."
          ]
        },
        "network": {
          "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
          "type": "string"
        },
        "enableStreamingEngine": {
          "type": "boolean",
          "description": "Whether to enable Streaming Engine for the job."
        },
        "bypassTempDirValidation": {
          "type": "boolean",
          "description": "Whether to bypass the safety checks for the job's temporary directory. Use with caution."
        },
        "workerRegion": {
          "type": "string",
          "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region."
        },
        "zone": {
          "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
          "type": "string"
        },
        "workerZone": {
          "type": "string",
          "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence."
        },
        "additionalUserLabels": {
          "description": "Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "The environment values to set at runtime.",
      "id": "RuntimeEnvironment",
      "type": "object"
    },
    "CounterStructuredNameAndMetadata": {
      "id": "CounterStructuredNameAndMetadata",
      "description": "A single message which encapsulates structured name and metadata for a given counter.",
      "properties": {
        "metadata": {
          "description": "Metadata associated with a counter",
          "$ref": "CounterMetadata"
        },
        "name": {
          "description": "Structured name of the counter.",
          "$ref": "CounterStructuredName"
        }
      },
      "type": "object"
    },
    "SourceGetMetadataResponse": {
      "description": "The result of a SourceGetMetadataOperation.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "SourceMetadata",
          "description": "The computed metadata."
        }
      },
      "id": "SourceGetMetadataResponse"
    },
    "Snapshot": {
      "description": "Represents a snapshot of a job.",
      "properties": {
        "ttl": {
          "type": "string",
          "description": "The time after which this snapshot will be automatically deleted.",
          "format": "google-duration"
        },
        "state": {
          "enum": [
            "UNKNOWN_SNAPSHOT_STATE",
            "PENDING",
            "RUNNING",
            "READY",
            "FAILED",
            "DELETED"
          ],
          "enumDescriptions": [
            "Unknown state.",
            "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
            "Snapshotting is being performed.",
            "Snapshot has been created and is ready to be used.",
            "Snapshot failed to be created.",
            "Snapshot has been deleted."
          ],
          "type": "string",
          "description": "State of the snapshot."
        },
        "id": {
          "type": "string",
          "description": "The unique ID of this snapshot."
        },
        "projectId": {
          "description": "The project this snapshot belongs to.",
          "type": "string"
        },
        "creationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this snapshot was created."
        },
        "diskSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
        },
        "description": {
          "description": "User specified description of the snapshot. Maybe empty.",
          "type": "string"
        },
        "sourceJobId": {
          "type": "string",
          "description": "The job this snapshot was created from."
        },
        "pubsubMetadata": {
          "description": "PubSub snapshot metadata.",
          "items": {
            "$ref": "PubsubSnapshotMetadata"
          },
          "type": "array"
        }
      },
      "id": "Snapshot",
      "type": "object"
    },
    "WorkerHealthReportResponse": {
      "type": "object",
      "description": "WorkerHealthReportResponse contains information returned to the worker in response to a health ping.",
      "properties": {
        "reportInterval": {
          "format": "google-duration",
          "description": "A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server.",
          "type": "string"
        }
      },
      "id": "WorkerHealthReportResponse"
    },
    "MetricUpdate": {
      "description": "Describes the state of a metric.",
      "properties": {
        "meanCount": {
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.",
          "type": "any"
        },
        "internal": {
          "type": "any",
          "description": "Worker-computed aggregate value for internal use by the Dataflow service."
        },
        "distribution": {
          "type": "any",
          "description": "A struct value describing properties of a distribution of numeric values."
        },
        "meanSum": {
          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double.",
          "type": "any"
        },
        "name": {
          "description": "Name of the metric.",
          "$ref": "MetricStructuredName"
        },
        "kind": {
          "type": "string",
          "description": "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."
        },
        "set": {
          "type": "any",
          "description": "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type."
        },
        "scalar": {
          "type": "any",
          "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."
        },
        "cumulative": {
          "type": "boolean",
          "description": "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API."
        },
        "gauge": {
          "description": "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value.",
          "type": "any"
        }
      },
      "type": "object",
      "id": "MetricUpdate"
    },
    "StageExecutionDetails": {
      "id": "StageExecutionDetails",
      "properties": {
        "workers": {
          "description": "Workers that have done work on the stage.",
          "type": "array",
          "items": {
            "$ref": "WorkerDetails"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value."
        }
      },
      "type": "object",
      "description": "Information about the workers and work items within a stage."
    },
    "ComputationTopology": {
      "properties": {
        "inputs": {
          "items": {
            "$ref": "StreamLocation"
          },
          "description": "The inputs to the computation.",
          "type": "array"
        },
        "systemStageName": {
          "description": "The system stage name.",
          "type": "string"
        },
        "stateFamilies": {
          "items": {
            "$ref": "StateFamilyConfig"
          },
          "description": "The state family values.",
          "type": "array"
        },
        "keyRanges": {
          "type": "array",
          "description": "The key ranges processed by the computation.",
          "items": {
            "$ref": "KeyRangeLocation"
          }
        },
        "outputs": {
          "type": "array",
          "description": "The outputs from the computation.",
          "items": {
            "$ref": "StreamLocation"
          }
        },
        "computationId": {
          "type": "string",
          "description": "The ID of the computation."
        }
      },
      "id": "ComputationTopology",
      "type": "object",
      "description": "All configuration data for a particular Computation."
    },
    "Histogram": {
      "id": "Histogram",
      "description": "Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use \"1,2,5 bucketing\": The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.",
      "type": "object",
      "properties": {
        "bucketCounts": {
          "description": "Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19).",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "firstBucketOffset": {
          "description": "Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SeqMapTask": {
      "id": "SeqMapTask",
      "description": "Describes a particular function to invoke.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user-provided name of the SeqDo operation."
        },
        "userFn": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "The user function to invoke."
        },
        "stageName": {
          "type": "string",
          "description": "System-defined name of the stage containing the SeqDo operation. Unique across the workflow."
        },
        "systemName": {
          "description": "System-defined name of the SeqDo operation. Unique across the workflow.",
          "type": "string"
        },
        "outputInfos": {
          "description": "Information about each of the outputs.",
          "type": "array",
          "items": {
            "$ref": "SeqMapTaskOutputInfo"
          }
        },
        "inputs": {
          "description": "Information about each of the inputs.",
          "items": {
            "$ref": "SideInputInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InstructionOutput": {
      "description": "An output of an instruction.",
      "properties": {
        "onlyCountValueBytes": {
          "description": "For system-generated byte and mean byte metrics, certain instructions should only report the value size.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The user-provided name of this output."
        },
        "codec": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The codec to use to encode data being written via this output."
        },
        "onlyCountKeyBytes": {
          "description": "For system-generated byte and mean byte metrics, certain instructions should only report the key size.",
          "type": "boolean"
        },
        "systemName": {
          "description": "System-defined name of this output. Unique across the workflow.",
          "type": "string"
        },
        "originalName": {
          "description": "System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.",
          "type": "string"
        }
      },
      "id": "InstructionOutput",
      "type": "object"
    },
    "StageSummary": {
      "description": "Information about a particular execution stage of a job.",
      "type": "object",
      "id": "StageSummary",
      "properties": {
        "stageId": {
          "type": "string",
          "description": "ID of this stage"
        },
        "metrics": {
          "items": {
            "$ref": "MetricUpdate"
          },
          "type": "array",
          "description": "Metrics for this stage."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time."
        },
        "progress": {
          "description": "Progress for this stage. Only applicable to Batch jobs.",
          "$ref": "ProgressTimeseries"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Start time of this stage."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The component state is unknown or unspecified.",
            "The component is not yet running.",
            "The component is currently running.",
            "The component succeeded.",
            "The component failed.",
            "Execution of the component was cancelled."
          ],
          "description": "State of this stage.",
          "enum": [
            "EXECUTION_STATE_UNKNOWN",
            "EXECUTION_STATE_NOT_STARTED",
            "EXECUTION_STATE_RUNNING",
            "EXECUTION_STATE_SUCCEEDED",
            "EXECUTION_STATE_FAILED",
            "EXECUTION_STATE_CANCELLED"
          ]
        }
      }
    },
    "ParDoInstruction": {
      "properties": {
        "numOutputs": {
          "type": "integer",
          "description": "The number of outputs.",
          "format": "int32"
        },
        "sideInputs": {
          "type": "array",
          "items": {
            "$ref": "SideInputInfo"
          },
          "description": "Zero or more side inputs."
        },
        "userFn": {
          "description": "The user function to invoke.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "input": {
          "$ref": "InstructionInput",
          "description": "The input."
        },
        "multiOutputInfos": {
          "items": {
            "$ref": "MultiOutputInfo"
          },
          "description": "Information about each of the outputs, if user_fn is a MultiDoFn.",
          "type": "array"
        }
      },
      "id": "ParDoInstruction",
      "type": "object",
      "description": "An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code."
    },
    "CommitTemplateVersionRequest": {
      "description": "Commit will add a new TemplateVersion to an existing template.",
      "properties": {
        "templateVersion": {
          "description": "TemplateVersion obejct to create.",
          "$ref": "TemplateVersion"
        }
      },
      "type": "object",
      "id": "CommitTemplateVersionRequest"
    },
    "TopologyConfig": {
      "type": "object",
      "description": "Global topology of the streaming Dataflow job, including all computations and their sharded locations.",
      "properties": {
        "dataDiskAssignments": {
          "description": "The disks assigned to a streaming Dataflow job.",
          "items": {
            "$ref": "DataDiskAssignment"
          },
          "type": "array"
        },
        "computations": {
          "type": "array",
          "items": {
            "$ref": "ComputationTopology"
          },
          "description": "The computations associated with a streaming Dataflow job."
        },
        "persistentStateVersion": {
          "type": "integer",
          "description": "Version number for persistent state.",
          "format": "int32"
        },
        "forwardingKeyBits": {
          "type": "integer",
          "description": "The size (in bits) of keys that will be assigned to source messages.",
          "format": "int32"
        },
        "userStageToComputationNameMap": {
          "description": "Maps user stage names to stable computation names.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "TopologyConfig"
    },
    "SourceSplitOptions": {
      "properties": {
        "desiredShardSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "DEPRECATED in favor of desired_bundle_size_bytes."
        },
        "desiredBundleSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "The source should be split into a set of bundles where the estimated size of each is approximately this many bytes."
        }
      },
      "description": "Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.",
      "id": "SourceSplitOptions",
      "type": "object"
    },
    "ParallelInstruction": {
      "id": "ParallelInstruction",
      "properties": {
        "systemName": {
          "type": "string",
          "description": "System-defined name of this operation. Unique across the workflow."
        },
        "originalName": {
          "description": "System-defined name for the operation in the original workflow graph.",
          "type": "string"
        },
        "read": {
          "$ref": "ReadInstruction",
          "description": "Additional information for Read instructions."
        },
        "partialGroupByKey": {
          "description": "Additional information for PartialGroupByKey instructions.",
          "$ref": "PartialGroupByKeyInstruction"
        },
        "parDo": {
          "$ref": "ParDoInstruction",
          "description": "Additional information for ParDo instructions."
        },
        "write": {
          "description": "Additional information for Write instructions.",
          "$ref": "WriteInstruction"
        },
        "outputs": {
          "description": "Describes the outputs of the instruction.",
          "items": {
            "$ref": "InstructionOutput"
          },
          "type": "array"
        },
        "flatten": {
          "$ref": "FlattenInstruction",
          "description": "Additional information for Flatten instructions."
        },
        "name": {
          "type": "string",
          "description": "User-provided name of this operation."
        }
      },
      "type": "object",
      "description": "Describes a particular operation comprising a MapTask."
    },
    "SnapshotJobRequest": {
      "description": "Request to create a snapshot of a job.",
      "properties": {
        "ttl": {
          "description": "TTL for the snapshot.",
          "format": "google-duration",
          "type": "string"
        },
        "snapshotSources": {
          "description": "If true, perform snapshots for sources which support this.",
          "type": "boolean"
        },
        "location": {
          "type": "string",
          "description": "The location that contains this job."
        },
        "description": {
          "description": "User specified description of the snapshot. Maybe empty.",
          "type": "string"
        }
      },
      "id": "SnapshotJobRequest",
      "type": "object"
    },
    "MetricStructuredName": {
      "description": "Identifies a metric, by describing the source which generated the metric.",
      "properties": {
        "context": {
          "description": "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Worker-defined metric name."
        },
        "origin": {
          "description": "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MetricStructuredName"
    },
    "ApproximateProgress": {
      "type": "object",
      "id": "ApproximateProgress",
      "properties": {
        "position": {
          "description": "Obsolete.",
          "$ref": "Position"
        },
        "remainingTime": {
          "format": "google-duration",
          "type": "string",
          "description": "Obsolete."
        },
        "percentComplete": {
          "description": "Obsolete.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest."
    },
    "TaskRunnerSettings": {
      "id": "TaskRunnerSettings",
      "description": "Taskrunner configuration settings.",
      "type": "object",
      "properties": {
        "harnessCommand": {
          "description": "The command to launch the worker harness.",
          "type": "string"
        },
        "vmId": {
          "description": "The ID string of the VM.",
          "type": "string"
        },
        "parallelWorkerSettings": {
          "description": "The settings to pass to the parallel worker harness.",
          "$ref": "WorkerSettings"
        },
        "commandlinesFileName": {
          "type": "string",
          "description": "The file to store preprocessing commands in."
        },
        "continueOnException": {
          "type": "boolean",
          "description": "Whether to continue taskrunner if an exception is hit."
        },
        "tempStoragePrefix": {
          "description": "The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
          "type": "string"
        },
        "logDir": {
          "description": "The directory on the VM to store logs.",
          "type": "string"
        },
        "logUploadLocation": {
          "type": "string",
          "description": "Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
        },
        "logToSerialconsole": {
          "description": "Whether to send taskrunner log info to Google Compute Engine VM serial console.",
          "type": "boolean"
        },
        "oauthScopes": {
          "type": "array",
          "description": "The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.",
          "items": {
            "type": "string"
          }
        },
        "languageHint": {
          "description": "The suggested backend language.",
          "type": "string"
        },
        "taskGroup": {
          "type": "string",
          "description": "The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. \"wheel\"."
        },
        "streamingWorkerMainClass": {
          "type": "string",
          "description": "The streaming worker main class name."
        },
        "workflowFileName": {
          "type": "string",
          "description": "The file to store the workflow in."
        },
        "taskUser": {
          "type": "string",
          "description": "The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. \"root\"."
        },
        "alsologtostderr": {
          "description": "Whether to also send taskrunner log info to stderr.",
          "type": "boolean"
        },
        "baseUrl": {
          "type": "string",
          "description": "The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\""
        },
        "dataflowApiVersion": {
          "type": "string",
          "description": "The API version of endpoint, e.g. \"v1b3\""
        },
        "baseTaskDir": {
          "description": "The location on the worker for task-specific subdirectories.",
          "type": "string"
        }
      }
    },
    "MountedDataDisk": {
      "type": "object",
      "description": "Describes mounted data disk.",
      "properties": {
        "dataDisk": {
          "type": "string",
          "description": "The name of the data disk. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example \"myproject-1014-104817-4c2-harness-0-disk-1\"."
        }
      },
      "id": "MountedDataDisk"
    },
    "MapTask": {
      "description": "MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask's WorkItem. Each instruction must appear in the list before any instructions which depends on its output.",
      "properties": {
        "systemName": {
          "description": "System-defined name of this MapTask. Unique across the workflow.",
          "type": "string"
        },
        "counterPrefix": {
          "description": "Counter prefix that can be used to prefix counters. Not currently used in Dataflow.",
          "type": "string"
        },
        "instructions": {
          "type": "array",
          "description": "The instructions in the MapTask.",
          "items": {
            "$ref": "ParallelInstruction"
          }
        },
        "stageName": {
          "type": "string",
          "description": "System-defined name of the stage containing this MapTask. Unique across the workflow."
        }
      },
      "type": "object",
      "id": "MapTask"
    },
    "ComponentSource": {
      "properties": {
        "name": {
          "description": "Dataflow service generated name for this source.",
          "type": "string"
        },
        "userName": {
          "description": "Human-readable name for this transform; may be user or system generated.",
          "type": "string"
        },
        "originalTransformOrCollection": {
          "description": "User name for the original user transform or collection with which this source is most closely associated.",
          "type": "string"
        }
      },
      "description": "Description of an interstitial value between transforms in an execution stage.",
      "id": "ComponentSource",
      "type": "object"
    },
    "AutoscalingEvent": {
      "id": "AutoscalingEvent",
      "properties": {
        "currentNumWorkers": {
          "format": "int64",
          "type": "string",
          "description": "The current number of workers the job has."
        },
        "eventType": {
          "description": "The type of autoscaling event to report.",
          "enumDescriptions": [
            "Default type for the enum. Value should never be returned.",
            "The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.",
            "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.",
            "The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.",
            "Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNKNOWN",
            "TARGET_NUM_WORKERS_CHANGED",
            "CURRENT_NUM_WORKERS_CHANGED",
            "ACTUATION_FAILURE",
            "NO_CHANGE"
          ]
        },
        "time": {
          "type": "string",
          "description": "The time this event was emitted to indicate a new target or current num_workers value.",
          "format": "google-datetime"
        },
        "description": {
          "description": "A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers.",
          "$ref": "StructuredMessage"
        },
        "workerPool": {
          "description": "A short and friendly name for the worker pool this event refers to, populated from the value of PoolStageRelation::user_pool_name.",
          "type": "string"
        },
        "targetNumWorkers": {
          "format": "int64",
          "type": "string",
          "description": "The target number of workers the worker pool wants to resize to use."
        }
      },
      "type": "object",
      "description": "A structured message reporting an autoscaling decision made by the Dataflow service."
    },
    "ProgressTimeseries": {
      "description": "Information about the progress of some component of job execution.",
      "type": "object",
      "id": "ProgressTimeseries",
      "properties": {
        "currentProgress": {
          "description": "The current progress of the component, in the range [0,1].",
          "format": "double",
          "type": "number"
        },
        "dataPoints": {
          "items": {
            "$ref": "Point"
          },
          "type": "array",
          "description": "History of progress for the component. Points are sorted by time."
        }
      }
    },
    "PubSubIODetails": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Topic accessed in the connection."
        },
        "subscription": {
          "description": "Subscription used in the connection.",
          "type": "string"
        }
      },
      "description": "Metadata for a PubSub connector used by the job.",
      "id": "PubSubIODetails"
    },
    "LaunchFlexTemplateResponse": {
      "description": "Response to the request to launch a job from Flex Template.",
      "properties": {
        "job": {
          "description": "The job that was launched, if the request was not a dry run and the job was successfully launched.",
          "$ref": "Job"
        }
      },
      "id": "LaunchFlexTemplateResponse",
      "type": "object"
    },
    "SourceMetadata": {
      "description": "Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.",
      "type": "object",
      "properties": {
        "estimatedSizeBytes": {
          "description": "An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader.",
          "format": "int64",
          "type": "string"
        },
        "infinite": {
          "type": "boolean",
          "description": "Specifies that the size of this source is known to be infinite (this is a streaming source)."
        },
        "producesSortedKeys": {
          "type": "boolean",
          "description": "Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order."
        }
      },
      "id": "SourceMetadata"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty"
    },
    "SourceGetMetadataRequest": {
      "type": "object",
      "description": "A request to compute the SourceMetadata of a Source.",
      "id": "SourceGetMetadataRequest",
      "properties": {
        "source": {
          "description": "Specification of the source whose metadata should be computed.",
          "$ref": "Source"
        }
      }
    },
    "DatastoreIODetails": {
      "type": "object",
      "description": "Metadata for a Datastore connector used by the job.",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "ProjectId accessed in the connection."
        },
        "namespace": {
          "description": "Namespace used in the connection.",
          "type": "string"
        }
      },
      "id": "DatastoreIODetails"
    },
    "LaunchFlexTemplateRequest": {
      "properties": {
        "launchParameter": {
          "$ref": "LaunchFlexTemplateParameter",
          "description": "Required. Parameter to launch a job form Flex Template."
        },
        "validateOnly": {
          "description": "If true, the request is validated but not actually executed. Defaults to false.",
          "type": "boolean"
        }
      },
      "description": "A request to launch a Cloud Dataflow job from a FlexTemplate.",
      "type": "object",
      "id": "LaunchFlexTemplateRequest"
    },
    "JobExecutionDetails": {
      "properties": {
        "stages": {
          "items": {
            "$ref": "StageSummary"
          },
          "type": "array",
          "description": "The stages of the job execution."
        },
        "nextPageToken": {
          "description": "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value.",
          "type": "string"
        }
      },
      "id": "JobExecutionDetails",
      "description": "Information about the execution of a job.",
      "type": "object"
    },
    "WorkerMessageResponse": {
      "type": "object",
      "id": "WorkerMessageResponse",
      "description": "A worker_message response allows the server to pass information to the sender.",
      "properties": {
        "workerMetricsResponse": {
          "description": "Service's response to reporting worker metrics (currently empty).",
          "$ref": "ResourceUtilizationReportResponse"
        },
        "workerShutdownNoticeResponse": {
          "$ref": "WorkerShutdownNoticeResponse",
          "description": "Service's response to shutdown notice (currently empty)."
        },
        "workerHealthReportResponse": {
          "description": "The service's response to a worker's health report.",
          "$ref": "WorkerHealthReportResponse"
        }
      }
    },
    "SdkHarnessContainerImage": {
      "properties": {
        "useSingleCorePerContainer": {
          "description": "If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.",
          "type": "boolean"
        },
        "containerImage": {
          "type": "string",
          "description": "A docker container image that resides in Google Container Registry."
        }
      },
      "type": "object",
      "id": "SdkHarnessContainerImage",
      "description": "Defines a SDK harness container for executing Dataflow pipelines."
    },
    "MetricShortId": {
      "id": "MetricShortId",
      "properties": {
        "shortId": {
          "format": "int64",
          "type": "string",
          "description": "The service-generated short identifier for the metric."
        },
        "metricIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the corresponding metric in the ReportWorkItemStatusRequest. Required."
        }
      },
      "description": "The metric short id is returned to the user alongside an offset into ReportWorkItemStatusRequest",
      "type": "object"
    },
    "RuntimeMetadata": {
      "id": "RuntimeMetadata",
      "description": "RuntimeMetadata describing a runtime environment.",
      "properties": {
        "sdkInfo": {
          "description": "SDK Info for the template.",
          "$ref": "SDKInfo"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "ParameterMetadata"
          },
          "description": "The parameters for the template."
        }
      },
      "type": "object"
    }
  },
  "protocol": "rest",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/dataflow",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        },
        "https://www.googleapis.com/auth/compute.readonly": {
          "description": "View your Google Compute Engine resources"
        },
        "https://www.googleapis.com/auth/compute": {
          "description": "View and manage your Google Compute Engine resources"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
